(this.webpackJsonp=this.webpackJsonp||[]).push([["swag-markets"],{"+LxU":function(e,t,n){var a=n("Xljw");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("5ebb1715",a,!0,{})},"+gkI":function(e,t){e.exports='{% block bf_amazon_connection_assistant_modal %}\n<div>\n    <sw-modal :title="title"\n              class="bf-amazon-connection-assistant-modal"\n              v-if="showModal" @modal-close="closeModal" :isLoading="isLoading">\n        {% block bf_amazon_connection_assistant_modal_content %}\n            {% block bf_amazon_connection_assistant_modal_content_title %}\n                <bf-amazon-connection-assistant-logo/>\n            {% endblock %}\n            <div class="bf-amazon-connection-assistant-modal__content">\n                {% block bf_amazon_connection_assistant_modal_content_descritpion %}\n                {% endblock %}\n                {% block bf_amazon_connection_assistant_modal_content_page %}\n                    <div class="bf-amazon-connection-assistant-modal__content-page">\n                        <router-view\n                            @set-title="setTitle"\n                            @ca-redirect="redirect"\n                            @ca-stepsToGetBack="addStepsToGetBack"\n                            @ca-setAccountData="setAccountData"\n                            @ca-setNextBtnState="setNextBtnState"\n                            @ca-isLoading="setIsLoadingState"\n                            @ca-resetNextBtnIsClicked="resetNextBtnIsClicked"\n                            @modal-close="closeModal"\n                            @showSupportModal="showSupportModal = true"\n                            :showSupportModal="showSupportModal"\n                            :nextBtnIsClicked="nextBtnIsClicked">\n                        </router-view>\n                    </div>\n                {% endblock %}\n            </div>\n        {% endblock %}\n        {% block bf_amazon_connection_assistant_modal_footer %}\n            <template #modal-footer>\n                <sw-button\n                    size="small"\n                    @click="closeModal">\n                        {{ $tc(\'button.cancel\') }}\n                </sw-button>\n                <sw-button :disabled="nextIsDisabled" size="small" variant="primary" @click="onClickNext">\n                    {{ $tc(\'button.next\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n    </sw-modal>\n\n    <bf-support\n        marketplace="amazon"\n        requestType="product_migration_request"\n        :showSupportModal="showSupportModal"\n        :supportTitle="$tc(\'bf-support.modal.titleTransferProducts\')"\n        @closeSupportModal="showSupportModal = false"\n    ></bf-support>\n</div>\n{% endblock %}\n'},"+wWx":function(e,t,n){var a=n("yHv0");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("58777a44",a,!0,{})},"+y/E":function(e,t,n){},"/E9E":function(e,t){e.exports='{% block bf_amazon_connection_assistant_start_success_content %}\n    <div class="bf-amazon-connection-assistant-start-success__content">\n        <bf-amazon-connection-assistant-account-status />\n    </div>\n{% endblock %}\n'},"/v4i":function(e,t){e.exports='{% block bf_sales_channel_shopware_category_tree %}\n    <div class="bf-sales-channel-shopware-category-tree">\n        {% block bf_sales_channel_shopware_category_content %}\n            <div class="bf-sales-channel-shopware-category-tree__content">\n                {% block bf_sales_channel_shopware_category_content_tree %}\n                    <div class="bf-sales-channel-shopware-category-tree__content-tree">\n                        <div class="bf-tree">\n                            <bf-tree\n                                    :title="$tc(\'categories.shopware-tree-title\')"\n                                    :items="categories"\n                                    @get-tree-items="onGetTreeItems"\n                                    @on-change="onChangeItem"\n                                    @search-tree-items="searchTreeItems"\n                            >\n                                <template #items="{treeItems, onChangeItem}">\n                                    <bf-tree-item\n                                        v-for="item in treeItems"\n                                        :key="item.id"\n                                        :item="item"\n                                        @on-change="onChangeItem"\n                                    ></bf-tree-item>\n                                </template>\n                            </bf-tree>\n                        </div>\n                    </div>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"07b6":function(e,t){e.exports=""},"08qX":function(e,t){e.exports='<sw-card v-if="isSalesChannelAmazon" :title="$tc(\'salesChannelSettings.card.title.extendedSettings\')">\n    <sw-alert v-if="isDisabled" variant="info" appearance="notification" :showIcon="true" :closable="false">\n        {{ $tc(\'salesChannelSettings.invalidContractInfo\') }}\n    </sw-alert>\n    <sw-container>\n        <sw-switch-field\n            :label="$tc(\'salesChannelSettings.amazon.label.enableFba\')"\n            :value="enableFba"\n            :ghostValue="false"\n            :noMarginTop="true"\n            :disabled="isDisabled"\n            :helpText="$tc(\'salesChannelSettings.amazon.helpText.fba\')"\n            size="small"\n            @change="changedEnableFba">\n        </sw-switch-field>\n    </sw-container>\n    <sw-alert v-if="!isDisabled" variant="info" appearance="notification" :showIcon="true" :closable="false">\n        {{ $tc(\'bf-sales-channel.detail.amazonFbaRequiredInfo\') }}\n    </sw-alert>\n    <sw-container columns="1fr 1fr" gap="0px 30px">\n        <sw-single-select :label="$tc(\'bf-sales-channel.detail.amazonDangerousGoodsLabel\')"\n                          :disabled="isDisabled"\n                          :options="dangerousGoods"\n                          v-model="dangerousGoodsItem"\n                          @change="changedDangerousGoods" required>\n        </sw-single-select>\n        <sw-single-select :label="$tc(\'bf-sales-channel.detail.amazonNeedsBatteryLabel\')"\n                          :disabled="isDisabled"\n                          :options="needsBattery"\n                          v-model="needsBatteryItem"\n                          @change="changedBattery" required>\n        </sw-single-select>\n    </sw-container>\n</sw-card>\n'},"0Lbv":function(e,t){e.exports='{% block bf_amazon_connection_assistant_account %}\n    <div class="bf-amazon-connection-assistant-account">\n        {% block bf_amazon_connection_assistant_account_content %}\n            <div class="bf-amazon-connection-assistant-account__content">\n                <router-view v-on="$listeners" :nextBtnIsClicked="nextBtnIsClicked"></router-view>\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"0oAh":function(e,t){e.exports='<sw-modal\n    v-if="showAttributesMappingModal"\n    @modal-close="$emit(\'modal-close-attr-mapping-win\')"\n    variant="large"\n    title="Attributes mapping values">\n    {% block bf_sales_channel_property_mapping__content %}\n        {% block bf_sales_channel_property_mapping__content_base %}\n            <sw-text-field\n                type="text"\n                :label="$tc(\'propertyMapping.labels.search\')"\n                :placeholder="$tc(\'propertyMapping.placeholder.search\')"\n                v-model="searchString"\n{#                :name="property.productsAttributesId + \'-search\'"#}\n                @keyup.enter="loadAttributeData">\n            </sw-text-field>\n            <bf-sales-channel-property-mapping-grid\n                :dataSource="attributeData"\n                :columns="columns"\n                :isLoading="isLoading"\n                :showActions="false"\n                ref="attributeGrid">\n            </bf-sales-channel-property-mapping-grid>\n        {% endblock %}\n    {% endblock %}\n    {% block swag_markets_attributes_mapping_modal__footer %}\n        <template slot="modal-footer">\n            {% block swag_markets_attributes_mapping_modal__footer_cancel %}\n                <sw-button\n                    @click="$emit(\'modal-close-attr-mapping-win\')"\n                    size="small">\n                    {{ $tc(\'propertyMapping.buttons.cancel\') }}\n                </sw-button>\n            {% endblock %}\n            {% block swag_markets_attributes_mapping_modal__footer_save %}\n                <sw-button\n                    @click="saveData"\n                    variant="primary"\n                    size="small">\n                    {{ $tc(\'propertyMapping.buttons.save\') }}\n                </sw-button>\n            {% endblock %}\n        </template>\n    {% endblock %}\n    {% block swag_markets_attributes_modal__pagination %}\n        <sw-pagination :total="total"\n                       :limit="limit"\n                       :page="page"\n                       @page-change="pageChange"\n                       :steps="[10, 25]">\n        </sw-pagination>\n    {% endblock %}\n</sw-modal>\n'},"0yxm":function(e,t){e.exports='{% block bf_sales_channel_product_detail %}\n<sw-modal :isLoading="isLoading"\n        :variant="\'large\'"\n        class="bf-modal"\n        :title="product.name"\n        @modal-close="$emit(\'modal-close\')">\n    {% block bf_sales_channel_product_detail__content %}\n    <sw-alert v-if="isDisabled" variant="info" appearance="notification" :showIcon="true" :closable="false">\n        {{ $tc(\'salesChannelSettings.invalidContractInfo\') }}\n    </sw-alert>\n\n    {% block bf_sales_channel_product_category_mapping %}\n        <sw-inherit-wrapper v-model="product.categories"\n                            :inheritedValue="null"\n                            isAssociation\n                            :label="$tc(\'sw-product.categoryForm.labelCategory\')">\n            <template #content="{ currentValue, isInherited }">\n                <bf-sales-channel-product-category-mapping\n                        :product="product"\n                        :categoriesCollection="currentValue ? currentValue : []"\n                        class="sw-product-detail__select-category"\n                        :disabled="isInherited"\n                        :key="isInherited"\n                        :placeholder="$tc(\'sw-product.categoryForm.placeholderCategory\')">\n                </bf-sales-channel-product-category-mapping>\n            </template>\n        </sw-inherit-wrapper>\n       {% endblock %}\n    {% block bf_sales_channel_product_detail__content_base %}\n    <div v-if="salesChannelType === \'amazon\'">\n        <sw-card :title="$tc(\'products.edit.general\')" large>\n            <sw-text-field\n                    type="text"\n                    :label="$tc(\'products.edit.label.searchTerms\')"\n                    :placeholder="$tc(\'products.edit.placeholder.searchTerms\')"\n                    :value="formData.searchTerms"\n                    :name="formData.bfProductId + \'-searchTerms\'"\n                    @change="formData.searchTerms = $event"\n            ></sw-text-field>\n            <sw-text-field\n                    type="text"\n                    :label="$tc(\'products.edit.label.platinumKeywords\')"\n                    :placeholder="$tc(\'products.edit.placeholder.platinumKeywords\')"\n                    :value="formData.platinumKeywords"\n                    :name="formData.bfProductId + \'-platinumKeywords\'"\n                    @change="formData.platinumKeywords = $event"\n            ></sw-text-field>\n        </sw-card>\n\n        <sw-alert variant="info" appearance="notification" :showIcon="true" :closable="false" v-if="isDisabled">\n            {{ $tc(\'products.edit.invalidContractInfo\') }}\n        </sw-alert>\n\n        <sw-card :title="$tc(\'products.edit.basisBFeatures\')" large>\n            <sw-text-field\n                    type="text"\n                    :disabled="currentContract.name !== \'Plus\'"\n                    :label="$tc(\'products.edit.label.merchantShippingGroupName\')"\n                    :placeholder="$tc(\'products.edit.placeholder.merchantShippingGroupName\')"\n                    :value="formData.merchantShippingGroupName"\n                    :name="formData.bfProductId + \'-merchantShippingGroupName\'"\n                    :helpText="$tc(\'salesChannelSettings.amazon.helpText.merchantShippingGroup\')"\n                    @change="formData.merchantShippingGroupName = $event"\n            ></sw-text-field>\n            <sw-switch-field\n                :label="$tc(\'products.edit.label.fbaActive\')"\n                :value="formData.fbaActive"\n                :ghostValue="false"\n                :noMarginTop="true"\n                :disabled="isDisabled"\n                :helpText="$tc(\'salesChannelSettings.amazon.helpText.fba\')"\n                @change="formData.fbaActive = $event"\n            ></sw-switch-field>\n        </sw-card>\n    </div>\n\n    <div>\n        <sw-single-select\n            :label="this.$tc(\'products.edit.label.condition\')"\n            :options="allConditions"\n            :value="formData.conditionAttribute"\n            v-model="formData.conditionAttribute"\n            @change="formData.conditionAttribute = $event"\n        ></sw-single-select>\n    </div>\n    <div v-if="salesChannelType === \'amazon\'">\n        <sw-text-field\n            :label="this.$tc(\'products.edit.label.conditionNote\')"\n            :value="formData.conditionNote"\n            v-model="formData.conditionNote"\n            @change="formData.conditionNote = $event"\n        ></sw-text-field>\n    </div>\n\n    <div v-if="salesChannelType === \'ebay\'">\n        <sw-switch-field\n            :label="$tc(\'products.edit.label.ebayPlus\')"\n            :value="formData.ebayPlus"\n            :ghostValue="false"\n            :noMarginTop="true"\n            :disabled="isDisabled"\n            :helpText="$tc(\'salesChannelSettings.ebay.helpText.ebayPlus\')"\n            @change="formData.ebayPlus = $event"\n        ></sw-switch-field>\n\n        <bf-sales-channel-ebay-best-offer\n            :isGeneralPage="false"\n            :clientExists="clientExists"\n            :clientInProgress="clientInProgress"\n            :currentContractName="currentContract.name"\n            :ebayBestOfferActive="formData.ebayProposedPrice.ebayBestOfferActive"\n            :ebayBestOfferAbsolute="formData.ebayProposedPrice.ebayBestOfferAbsolute"\n            :ebayBestOfferRelative="formData.ebayProposedPrice.ebayBestOfferRelative"\n            :ebayBestOfferAutoAccept="formData.ebayProposedPrice.ebayBestOfferAutoAccept"\n            :ebayBestOfferAbsoluteAutoAccept="formData.ebayProposedPrice.ebayBestOfferAbsoluteAutoAccept"\n            :ebayBestOfferRelativeAutoAccept="formData.ebayProposedPrice.ebayBestOfferRelativeAutoAccept"\n            :ebayBestOfferFix="false"\n            @change="changeFormInputValue"\n        ></bf-sales-channel-ebay-best-offer>\n\n        <sw-card :title="$tc(\'bf-sales-channel.detail.titleGeneralEbayPolicies\')" large>\n            <sw-single-select\n                :name="formData.bfProductId + \'-policiesShipping\'"\n                :options="allPolicies.shipping"\n                :label="$tc(\'bf-sales-channel.detail.ebayShippingPolicyLabel\')"\n                v-model="formData.policies.shipping"\n            ></sw-single-select>\n\n            <sw-single-select\n                :name="formData.bfProductId + \'-policiesReturns\'"\n                :options="allPolicies.returns"\n                :label="$tc(\'bf-sales-channel.detail.ebayReturnPolicyLabel\')"\n                v-model="formData.policies.returns"\n            ></sw-single-select>\n\n            <sw-single-select\n                :name="formData.bfProductId + \'-policiesPayments\'"\n                :options="allPolicies.payments"\n                :label="$tc(\'bf-sales-channel.detail.ebayPaymentPolicyLabel\')"\n                v-model="formData.policies.payments"\n            ></sw-single-select>\n        </sw-card>\n    </div>\n    {% endblock %}\n    {% endblock %}\n    {% block bf_sales_channel_product_detail__footer %}\n    <template slot="modal-footer">\n        {% block bf_sales_channel_product_detail__footer_cancel %}\n        <sw-button\n            @click="$emit(\'modal-close\')"\n            size="small">\n            {{ $tc(\'products.edit.cancel\') }}\n        </sw-button>\n        {% endblock %}\n        {% block bf_sales_channel_product_detail__footer_save %}\n        <sw-button\n            @click="saveData"\n            variant="primary"\n            size="small">\n            {{ $tc(\'products.edit.save\') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n'},"1DfZ":function(e,t,n){},"1X8i":function(e,t){e.exports='{% block swag_markets_custom_fields_mapping %}\n    <div>\n        {% block swag_markets_custom_fields_grid_content %}\n        <sw-data-grid\n            v-if="!showEmptyState"\n            :dataSource="customFieldsMapping"\n            :columns="columns"\n            :allowInlineEdit="true"\n            @inline-edit-save="saveInlineEdit"\n            :showSelection="false"\n            :plainAppearance="true"\n            :isLoading="isLoadingCustomFieldsMapping"\n            style="min-height: 300px">\n            <template slot="column-assigned" slot-scope="{ item }">\n                <sw-icon v-if="item.assigned" name="small-default-checkmark-line-medium" small class="is--active"></sw-icon>\n                <sw-icon v-else name="small-default-x-line-medium" small class="is--inactive"></sw-icon>\n            </template>\n            <template #actions="{ item }">\n                <sw-context-menu-item @click="showAttributesMappingModalWindow(item)">\n                    {{$tc(\'attributesMapping.selectAttribute\')}}\n                </sw-context-menu-item>\n                <sw-context-menu-item\n                    :disabled="!item.assigned"\n                    variant="danger"\n                    @click="showRemoveAssignmentModal(item)">\n                    {{ $tc(\'attributesMapping.removeAssignment\') }}\n                </sw-context-menu-item>\n            </template>\n        </sw-data-grid>\n        {% endblock %}\n        {% block swag_markets_attributes_mapping_properties_delete_modal %}\n            <sw-modal\n                v-if="showDeleteModalCustomFieldsAttributesMapping"\n                class="bf-sales-channel-product-errors-modal"\n                :title="$tc(\'bf-category-segment-mapping.deleteModalWarning\')"\n                @modal-close="showDeleteModalCustomFieldsAttributesMapping = false">\n                {{ $tc(\'attributesMapping.removeWarningMsg\') }}\n                <template slot="modal-footer">\n                    {% block swag_markets_categories_mapping_footer_cancel %}\n                        <sw-button\n                            @click="closeRemoveAssignmentModal"\n                            size="small">\n                            {{ $tc(\'bf-category-segment-mapping.deleteModalCancelBtn\') }}\n                        </sw-button>\n                    {% endblock %}\n                    {% block swag_markets_attributes_mapping_properties_footer_delete %}\n                        <sw-button\n                            @click="removeCustomFieldsAssignment"\n                            variant="danger"\n                            size="small">\n                            {{ $tc(\'bf-category-segment-mapping.deleteModalDeleteBtn\') }}\n                        </sw-button>\n                    {% endblock %}\n                </template>\n            </sw-modal>\n        {% endblock %}\n        {% block swag_markets_custom_fields_mapping_empty_state %}\n            <sw-empty-state\n                v-else-if="showEmptyState"\n                :absolute="false"\n                :title="$tc(\'attributesMapping.custom-fields.emptyStateText\')"\n                :showDescription="false">\n            </sw-empty-state>\n        {% endblock %}\n        {% block swag_markets_attributes_mapping_modal %}\n            <attributes-mapping-modal\n                :showAttributesMappingModal="showAttributesMappingModal"\n                :attributesMappingModalItem="attributesMappingModalItem"\n                :salesChannelType="salesChannelType"\n                :amazonSegment="amazonSegment"\n                :amazonProductType="amazonProductType"\n                @modal-close-attr-mapping-win="closeAttributesMappingModalWindow"\n                @save-attribute-mapping="saveInlineEdit">\n            </attributes-mapping-modal>\n        {% endblock %}\n        {% block swag_markets_properties_grid__pagination %}\n            <sw-pagination :total="total"\n                           :limit="limit"\n                           :page="page"\n                           @page-change="pageChange"\n                           :steps="[5, 10]">\n            </sw-pagination>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"1pdf":function(e,t){e.exports='{% block bf_amazon_connection_assistant_account %}\n    <div class="bf-amazon-connection-assistant-account">\n        {% block bf_amazon_connection_assistant_account_content %}\n            <div class="bf-amazon-connection-assistant-account__content">\n                <sw-card title="Account connected" large>\n                    <sw-container columns="auto 1fr auto">\n                        <sw-card-section slim>\n                            {% block bf_amazon_connection_assistant_account_content_avatar %}\n                                <div class="bf-amazon-connection-assistant-account__content-avatar">\n                                    <sw-avatar\n                                        color="#189eff"\n                                        size="40px"\n                                        :firstName="user.firstName"\n                                        :lastName="user.lastName"\n                                        style="margin: 0 10px"></sw-avatar>\n                                </div>\n                            {% endblock %}\n                        </sw-card-section>\n                        <sw-card-section>\n                            {% block bf_amazon_connection_assistant_account_content_user_details %}\n                                <div class="bf-amazon-connection-assistant-account__content-user-details">\n                                    <h6>{{ user.firstName }} {{ user.lastName }}</h6>\n                                    <p>{{ user.email }}</p>\n                                </div>\n                            {% endblock %}\n                        </sw-card-section>\n                        <sw-card-section>\n                            {% block bf_amazon_connection_assistant_account_content_button_group %}\n                                <div class="bf-amazon-connection-assistant-account__content-button-group">\n                                    <sw-button size="small">Disconnect</sw-button>\n                                </div>\n                            {% endblock %}\n                        </sw-card-section>\n                    </sw-container>\n                </sw-card>\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"26Nu":function(e,t,n){var a=n("Fh6L");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("378c2174",a,!0,{})},"2BXl":function(e,t,n){var a=n("vq5r");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("46a1a084",a,!0,{})},"2vFg":function(e,t,n){var a=n("mqDg");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("c18afa3c",a,!0,{})},"3feL":function(e,t,n){var a=n("9+V+");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("7b635eb3",a,!0,{})},"3jw2":function(e,t){e.exports='{% block bf_ebay_connection_assistant_account_product %}\n    <div class="bf-ebay-connection-assistant-account-product__content">\n        {% block bf_ebay_connection_assistant_account_product_content_information %}\n            <sw-card-section class="bf-ebay-connection-assistant-modal__content-description">\n                {{ $tc(\'ebay.productCheckDescription\') }}\n            </sw-card-section>\n            <div v-if="hasRetailerProducts" class="bf-ebay-connection-assistant-account-product__content-information">\n                {% block bf_ebay_connection_assistant_account_product_content_information_warning %}\n                    <sw-alert\n                        variant="error"\n                        v-if="errorProductCheck"\n                        class="bf-ebay-connection-assistant-account-product__content-information-warning">\n                        {{ $tc(\'error.ebay.productCheck\') }}\n                    </sw-alert>\n                    <sw-alert variant="warning" v-if="hasRetailerProducts"\n                              class="bf-ebay-connection-assistant-account-product__content-information-warning">\n                        {{ $tc(\'ebay.productCheckAccountHasAlreadyProducts\') }}\n                    </sw-alert>\n                {% endblock %}\n                {% block bf_ebay_connection_assistant_account_product_content_information_takeover %}\n                    <div class="bf-ebay-connection-assistant-account-product__content-information-takeover">\n                        {% block bf_ebay_connection_assistant_account_product_content_information_takeover_title %}\n                            <h6 class="title">{{ $tc(\'ebay.productCheckBookTransferTitle\') }}</h6>\n                        {% endblock %}\n                        {% block bf_ebay_connection_assistant_account_product_content_information_takeover_content %}\n                            <p>{{ $tc(\'ebay.productCheckBookTransferContent\') }}</p>\n                        {% endblock %}\n                        {% block bf_ebay_connection_assistant_account_product_content_information_takeover_link %}\n                        <sw-button\n                            size="small"\n                            variant="contrast"\n                            @click="$emit(\'showSupportModal\')"\n                            class="bf-amazon-connection-assistant-account-product-content-information-delete-button">\n                            {{ $tc(\'ebay.productCheckBookTransfer\') }}\n                        </sw-button>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n                {% block bf_ebay_connection_assistant_account_product_content_information_delete %}\n                    <div class="bf-ebay-connection-assistant-account-product__content-information-delete">\n                        {% block bf_ebay_connection_assistant_account_product_content_information_delete_title %}\n                            <h6 class="title">{{ $tc(\'ebay.productCheckDeleteExistingTitle\') }}</h6>\n                        {% endblock %}\n                        {% block bf_ebay_connection_assistant_account_product_content_information_delete_content %}\n                            <p>{{ $tc(\'ebay.productCheckDeleteExistingContent\') }}</p>\n                        {% endblock %}\n                        {% block bf_ebay_connection_assistant_account_product_content_information_delete_button %}\n                        <sw-button\n                            size="small"\n                            variant="danger"\n                            link="https://signin.ebay.de/signin/"\n                            class="bf-amazon-connection-assistant-account-product-content-information-delete-button">\n                            {{ $tc(\'ebay.productCheckDeleteExistingBtn\') }}\n                        </sw-button>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </div>\n            <div v-if="!hasRetailerProducts && hasRetailerProducts !== null" class="bf-ebay-connection-assistant-account-product__content-information">\n                {% block bf_ebay_connection_assistant_account_product_content_information_success %}\n                    <sw-alert variant="success"\n                              class="bf-ebay-connection-assistant-account-product__content-information-success">\n                        {{ $tc(\'ebay.productCheckCongrats\') }}\n                    </sw-alert>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        <sw-container align="end" justify="end"\n                      class="bf-ebay-connection-assistant-account-product__content-button-check">\n            {% block bf_ebay_connection_assistant_accout_product_check_button %}\n                <sw-button\n                    v-if="hasRetailerProducts || hasRetailerProducts === null"\n                    size="small"\n                    variant="primary"\n                    :block="true"\n                    @click="productCheck"\n                    v-tooltip="tooltip">\n                    {{$tc(\'ebay.productCheckBtn\')}}\n                </sw-button>\n            {% endblock %}\n        </sw-container>\n        {% block bf_amazon_connection_assistant_confirm_finish_modal %}\n        <sw-modal\n            :title="$t(\'ebay.amazonConfirmFinishModalTitle\')"\n            v-if="showConfirmModal"\n            variant="small"\n            @modal-close="closeModal">\n            {% block bf_ebay_connection_assistant_confirm_fnish_modal_content %}\n            <sw-card>\n                {{ $tc(\'ebay.amazonConfirmFinishModalMessageFirstPart\') }}<br>\n                {{ $tc(\'ebay.amazonConfirmFinishModalMessageSecondPart\') }}\n            </sw-card>\n            {% endblock %}\n            {% block bf_ebay_connection_assistant_confirm_finish_footer %}\n            <template #modal-footer>\n                <sw-button size="small" @click="closeModal">\n                    {{ $tc(\'button.cancel\') }}\n                </sw-button>\n                <sw-button size="small" variant="primary" @click="confirmFinishModal">\n                    {{ $tc(\'button.finish\') }}\n                </sw-button>\n            </template>\n            {% endblock %}\n        </sw-modal>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"46g+":function(e,t,n){var a=n("zkt2");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("a43d9608",a,!0,{})},"4Nzo":function(e,t,n){var a=n("H8AE");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("7e50c18e",a,!0,{})},"4kWp":function(e,t){e.exports='<sw-container>\n    <sw-alert v-if="isDisabled" variant="info" appearance="notification" :showIcon="true" :closable="false" class="mb-2">\n        {{ $tc(\'salesChannelSettings.invalidContractInfo\') }}\n    </sw-alert>\n    {% block bf_sales_channel_best_offer_selects__ebayBestOfferActive %}\n        <sw-switch-field\n            :label="$tc(\'bf-sales-channel.detail.ebayBestOfferActive\')"\n            :value="ebayBestOfferActive"\n            :ghostValue="false"\n            :noMarginTop="true"\n            :helpText="$tc(\'bf-sales-channel.detail.ebayBestOfferActiveHelpText\')"\n            :disabled="isDisabled"\n            size="small"\n            @change="$emit(\'change\', \'ebayBestOfferActive\', $event)">\n        </sw-switch-field>\n    {% endblock %}\n    <sw-container columns="1fr 1fr" gap="0 30px">\n        {% block bf_sales_channel_best_offer_selects__ebayBestOfferAbsolute %}\n            <sw-number-field\n                numberType="float"\n                :step="1"\n                :min="0"\n                :digits="2"\n                :label="$tc(\'bf-sales-channel.detail.ebayBestOfferAbsolute\')"\n                :helpText="$tc(\'bf-sales-channel.detail.ebayBestOfferAbsoluteHelpText\')"\n                :value="ebayBestOfferAbsolute"\n                @change="changeInput(\'ebayBestOfferAbsolute\', $event)"\n                :disabled="!ebayBestOfferActive || isDisabled">\n            </sw-number-field>\n        {% endblock %}\n        {% block bf_sales_channel_best_offer_selects__ebayBestOfferRelative %}\n            <sw-number-field\n                numberType="float"\n                :step="1"\n                :min="0"\n                :max="100"\n                :digits="2"\n                :label="$tc(\'bf-sales-channel.detail.ebayBestOfferRelative\')"\n                :helpText="$tc(\'bf-sales-channel.detail.ebayBestOfferRelativeHelpText\')"\n                :value="ebayBestOfferRelative"\n                @change="changeInput(\'ebayBestOfferRelative\', $event)"\n                :disabled="!ebayBestOfferActive || isDisabled">\n            </sw-number-field>\n        {% endblock %}\n    </sw-container>\n    {% block bf_sales_channel_best_offer_selects__ebayBestOfferAutoAccept %}\n        <sw-switch-field\n            :label="$tc(\'bf-sales-channel.detail.ebayBestOfferAutoAccept\')"\n            :value="ebayBestOfferAutoAccept"\n            :ghostValue="false"\n            :noMarginTop="true"\n            :helpText="$tc(\'bf-sales-channel.detail.ebayBestOfferAutoAcceptHelpText\')"\n            :disabled="!ebayBestOfferActive || isDisabled"\n            size="small"\n            @change="$emit(\'change\', \'ebayBestOfferAutoAccept\', $event)">\n        </sw-switch-field>\n    {% endblock %}\n    <sw-container columns="1fr 1fr" gap="0 30px">\n        {% block bf_sales_channel_best_offer_selects__ebayBestOfferAbsoluteAutoAccept %}\n            <sw-number-field\n                numberType="float"\n                :step="1"\n                :min="0"\n                :digits="2"\n                :label="$tc(\'bf-sales-channel.detail.ebayBestOfferAbsoluteAutoAccept\')"\n                :helpText="$tc(\'bf-sales-channel.detail.ebayBestOfferAbsoluteAutoAcceptHelpText\')"\n                :value="ebayBestOfferAbsoluteAutoAccept"\n                @change="changeInput(\'ebayBestOfferAbsoluteAutoAccept\', $event)"\n                :disabled="!ebayBestOfferActive || !ebayBestOfferAutoAccept || isDisabled">\n            </sw-number-field>\n        {% endblock %}\n        {% block bf_sales_channel_best_offer_selects__ebayBestOfferRelativeAutoAccept %}\n            <sw-number-field\n                numberType="float"\n                :step="1"\n                :min="0"\n                :max="100"\n                :digits="2"\n                :label="$tc(\'bf-sales-channel.detail.ebayBestOfferRelativeAutoAccept\')"\n                :helpText="$tc(\'bf-sales-channel.detail.ebayBestOfferRelativeAutoAcceptHelpText\')"\n                :value="ebayBestOfferRelativeAutoAccept"\n                @change="changeInput(\'ebayBestOfferRelativeAutoAccept\', $event)"\n                :disabled="!ebayBestOfferActive || !ebayBestOfferAutoAccept || isDisabled">\n            </sw-number-field>\n        {% endblock %}\n    </sw-container>\n    {% block bf_sales_channel_best_offer_selects__ebayBestOfferFix %}\n        <sw-switch-field\n            v-if="isGeneralPage"\n            :label="$tc(\'bf-sales-channel.detail.ebayBestOfferFix\')"\n            :value="ebayBestOfferFix"\n            :ghostValue="false"\n            :noMarginTop="true"\n            :helpText="$tc(\'bf-sales-channel.detail.ebayBestOfferFixHelpText\')"\n            :disabled="!ebayBestOfferActive || isDisabled"\n            size="small"\n            @change="$emit(\'change\', \'ebayBestOfferFix\', $event)">\n        </sw-switch-field>\n    {% endblock %}\n</sw-container>\n'},"4mTt":function(e,t){e.exports='{% block sw_data_grid_columns_slot %}\n    <slot :name="`column-${column.property}`"\n          v-bind="{ item, itemIndex, column, columnIndex, compact }">\n\n        <template v-if="column.property === \'external_name\'">\n            {{ getExternalName(item) }}\n        </template>\n        <template v-else>\n            {{ renderColumn(item, column) }}\n        </template>\n    </slot>\n{% endblock %}\n\n{% block sw_data_grid_slot_actions %}\n<slot name="detail-action" v-bind="{ item }">\n    <sw-context-menu-item class="sw-entity-listing__context-menu-edit-action"\n                          @click="onEditPropertyMappingClick(item)">\n        {{ $tc(\'global.default.edit\') }}\n    </sw-context-menu-item>\n</slot>\n{% endblock %}\n\n{% block sw_data_grid_slot_bulk_modals %}\n<bf-sales-channel-property-mapping-modal\n    v-if="showPropertyMappingModal"\n    :title="selectedProperty.productsAttributesDescription[currentLocale].productsAttributesName"\n    :property="selectedProperty"\n    :bfAttributeMappingData="getBfAttributeMappingData()"\n    @modal-close="showPropertyMappingModal = false; $emit(\'load-attribute-mapping\');"\n>\n</bf-sales-channel-property-mapping-modal>\n{% endblock %}\n'},"5UN0":function(e,t){e.exports='{% block bf_amazon_connection_assistant_page %}\n    <div class="bf-amazon-connection-assistant">\n        {% block bf_amazon_connection_assistant_page_content %}\n            <bf-amazon-connection-assistant-modal />\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"5w23":function(e,t,n){"use strict";n.r(t);n("OgIt");const{Application:a}=Shopware,{ApiService:s}=Shopware.Classes;class i extends s{constructor(e,t,n,a){super(e,t,n),this.apiUrl=a,this.localStorageKey="SwagMarketsBearerToken",this.config={},this.headers={}}sendRequest(e){return this.httpClient.post(this.apiEndpoint+"send-support-request",e,{headers:this.getBasicHeaders()}).then((e=>e)).catch((e=>e.response))}}a.addServiceProvider("bfSupportService",(e=>{const t=a.getContainer("init");return new i(t.httpClient,e.loginService,"swagMarkets/","")}));const{ApiService:o}=Shopware.Classes;class r extends o{constructor(e,t,n,a){super(e,t,n),this.apiUrl=a,this.localStorageKey="SwagMarketsBearerToken",this.config=null,this.headers={},this.salesChannelId=null,this.salesChannelType=null}async getToken(){let e=localStorage.getItem(this.localStorageKey);if(null==e){const e=await this.authorize();return this.setToken(e)}if(e=JSON.parse(e),e.expiry<Date.now()){const e=await this.authorize();return this.setToken(e)}return e}setToken(e){const t={access:e.token,expiry:Date.now()+60*e.expires_in};return localStorage.setItem(this.localStorageKey,JSON.stringify(t)),t}async authorize(){const e=await this.getConfig();return await this.httpClient.post(this.apiUrl+"oauth/token",{key:e.integration_user.access_key,secret_key:e.integration_user.secret_access_key}).then((e=>o.handleResponse(e))).catch((e=>o.handleResponse(e.response)))}async getConfig(e=!1){return null!==this.config&&!0!==e||(this.config=await this.httpClient.get(this.apiEndpoint+"/config/load",{headers:this.getBasicHeaders()}).then((e=>o.handleResponse(e.data.data))).catch((e=>o.handleResponse(e.response)))),this.config}async getShopId(){return await this.getConfig().then((e=>e.swagMarkets_business_platform.shop_id))}setSalesChannelId(e){this.salesChannelType=null,this.salesChannelId=e}setSalesChannelType(e){this.salesChannelType=e}async loadSalesChannelType(){return await this.httpClient.get(this.apiEndpoint+"/sales-channel-type/load/"+this.salesChannelId,{headers:this.getBasicHeaders()}).then((e=>o.handleResponse(e.data.data))).catch((e=>o.handleResponse(e.response)))}async getSalesChannelType(){return null===this.salesChannelType&&(this.salesChannelType=await this.loadSalesChannelType(),this.salesChannelType=this.salesChannelType.toLowerCase()),this.salesChannelType}async getChannelId(){const e=await this.getConfig(),t=await this.getSalesChannelType();if("amazon"===t){const t=this.post("channels/search",{filter:[{field:"channel_specific_id",type:"=",value:e.amazon_configuration.marketplace_id}]});return await t.then((e=>e.data[0].id))}if("ebay"===t){const t=this.post("channels/search",{filter:[{field:"channel_specific_id",type:"=",value:e.ebay_configuration.marketplace_id}]});return await t.then((e=>e.data[0].id))}}async getHeaders(){return{Authorization:`Bearer ${(await this.getToken()).access}`,"Content-Type":"application/json"}}async get(e,t){return this.httpClient.get(this.apiUrl+e,{headers:await this.getHeaders(),params:t}).then((e=>o.handleResponse(e)))}async post(e,t){return this.httpClient.post(this.apiUrl+e,t,{headers:await this.getHeaders()}).then((e=>o.handleResponse(e)))}async delete(e,t){return this.httpClient.delete(this.apiUrl+e,{headers:await this.getHeaders(),data:{...t}}).then((e=>o.handleResponse(e)))}}const{Application:l}=Shopware;Shopware.Classes.ApiService;class c extends r{async authorizeAmazon(e,t,n){let a=await this.getConfig(),s=this.getShopId(a.swagMarkets_business_platform);return await this.httpClient.get(this.apiUrl+"amazon/validate-account-connection",{params:{shopId:s,mwsAuthToken:t,sellerId:e,marketplaceId:n},headers:await this.getHeaders()})}async ebayConnectLink(){let e=await this.getConfig(),t=this.getShopId(e.swagMarkets_business_platform);return await this.httpClient.get(this.apiUrl+"ebay/connect-link/"+t,{headers:await this.getHeaders()})}async ebayOAuthTokenLink(){let e=await this.getConfig(),t=this.getShopId(e.swagMarkets_business_platform);return await this.httpClient.get(this.apiUrl+"ebay/oauth-connect-link/"+t,{headers:await this.getHeaders()})}async ebayAuthorizationTokenState(){let e=await this.getConfig(),t=this.getShopId(e.swagMarkets_business_platform);return await this.httpClient.get(this.apiUrl+"ebay/connect-token-state/"+t,{headers:await this.getHeaders()})}async ebayAuthorizationOAuthTokenState(){let e=await this.getConfig(),t=this.getShopId(e.swagMarkets_business_platform);return await this.httpClient.get(this.apiUrl+"ebay/connect-oauth-token-state/"+t,{headers:await this.getHeaders()})}async ebaySiteIdCheck(e){let t=await this.getConfig();this.getShopId(t.swagMarkets_business_platform);return await this.httpClient.get(this.apiUrl+"ebay/site/"+e,{headers:await this.getHeaders()})}async storeShopsConfigurations(e,t){let n=await this.getConfig(),a=this.getShopId(n.swagMarkets_business_platform);return await this.httpClient.post(this.apiUrl+e+"/brickfox/shops/configurations",{shopId:a,shopsConfigurations:t.shopsConfigurations},{headers:await this.getHeaders()})}async triggerCategoriesImport(e){let t=await this.getConfig(),n=this.getShopId(t.swagMarkets_business_platform);this.httpClient.post(this.apiUrl+"channels-categories/triggerBrickfoxImport",{shopId:n,channelType:e},{headers:await this.getHeaders()})}async validateMarketplace(e,t){let n=await this.getConfig();return t.shopId=this.getShopId(n.swagMarkets_business_platform),await this.httpClient.get(this.apiUrl+e+"/validate-marketplace",{params:t,headers:await this.getHeaders()})}validateMarketplaceDummy(){return!0}validateProductCheckDummy(e=0){return 0!==e}async marketplaceArticleExists(e,t){let n=await this.getConfig();return t.shopId=this.getShopId(n.swagMarkets_business_platform),await this.httpClient.get(this.apiUrl+e+"/article-listing-exists",{params:t,headers:await this.getHeaders()})}closeModal(e){let t=document.location.origin;return e?(t+="#/bf/sales/channel/detail/"+e+"/base",t):""}getShopId(e){return e.hasOwnProperty("shop_id")&&void 0!==e.shop_id&&e.shop_id.length>0?e.shop_id:""}}l.addServiceProvider("BfConnectionAssistantService",(e=>{const t=l.getContainer("init");return new c(t.httpClient,e.loginService,"swagMarkets","https://brickfox.io/api/")}));var d=n("+gkI"),h=n.n(d);n("C8QM");const{Component:p}=Shopware;p.register("bf-amazon-connection-assistant-modal",{template:h.a,inject:["BfConnectionAssistantService"],data(){return{title:this.$tc("amazon.baseTitle"),buttonConfig:[],showModal:!1,stepsToGetBack:-1,marketplaceId:"",accountData:{retailerId:"",mwsToken:""},nextIsDisabled:!0,nextBtnIsClicked:!1,isLoading:!1,isFinished:!1,showSupportModal:!1}},methods:{closeModal(e){!0===e&&(this.isFinished=e),this.showModal=!1},setTitle(e){this.title=e},redirect(e){this.$router.push({name:e,params:{accountData:this.accountData,marketplaceId:this.marketplaceId}})},addStepsToGetBack(){this.stepsToGetBack-=1},setAccountData(e,t){this.accountData.retailerId=e,this.accountData.mwsToken=t},setNextBtnState(e){this.nextIsDisabled=e},onClickNext(){this.nextBtnIsClicked=!0},resetNextBtnIsClicked(){this.nextBtnIsClicked=!1},setIsLoadingState(e){this.isLoading=e}},mounted(){this.showModal=!0,this.$route.params.marketplaceId||(this.showModal=!1),this.marketplaceId=this.$route.params.marketplaceId},watch:{showModal(e){!1===e&&(!1===this.isFinished&&this.$router.go(this.stepsToGetBack),!0===this.isFinished&&this.$router.go(0))}}});var u=n("UCmK"),m=n.n(u);n("oZia");Shopware.Component.register("bf-amazon-connection-assistant-logo",{template:m.a});var g=n("1pdf"),b=n.n(g);n("2BXl");Shopware.Component.register("bf-amazon-connection-assistant-account-status",{template:b.a,inject:["userService"],data:()=>({user:{}}),created(){this.getUser()},methods:{getUser(){this.userService.getUser().then((e=>{this.user=e.data}))}}});var f=n("5UN0"),y=n.n(f);n("IWKV");Shopware.Component.register("bf-amazon-connection-assistant-index",{template:y.a});var _=n("lsNU"),w=n.n(_);n("qpff");Shopware.Component.register("bf-amazon-connection-assistant-start",{template:w.a,data:()=>({title:null}),created(){this.setTitle()},methods:{setTitle(){this.title="Amazon connection assistant",this.$emit("set-title",this.title)},getTitle(){return this.title}}});var C=n("OQ+u"),k=n.n(C);n("bPdj");const{Component:S,Service:v,Mixin:P}=Shopware;S.register("bf-amazon-connection-assistant-start-authorize",{template:k.a,mixins:[P.getByName("notification")],inject:["BfConnectionAssistantService"],data(){return{retailerId:null,mwsToken:null,title:this.$parent.getTitle(),howToFirstPart:this.$tc("amazon.howTo.mwsNotificationHowToFirstPart",0,{link:'<a href="https://sellercentral.amazon.de/gp/mws/registration/register.html" target="_blank">SellerCentral</a>'})}},created(){this.setTitle()},methods:{setTitle(){const e=this.$tc("amazon.baseTitle")+this.$tc("amazon.step1");this.$emit("set-title",e)},authorizeManual(){const e=this.retailerId,t=this.mwsToken;!0===this.validate(e,t)&&(this.$emit("ca-isLoading",!0),this.BfConnectionAssistantService.authorizeAmazon(e,t,this.$route.params.marketplaceId).then((n=>{!0===n.data.success&&200===n.status?this.BfConnectionAssistantService.storeShopsConfigurations("amazon",{shopsConfigurations:{MERCHANT_ID:e,MWS_AUTH_TOKEN:t}}).then((n=>{this.$emit("ca-isLoading",!1),this.createNotificationSuccess({title:this.$tc("success.amazon.title"),message:this.$tc("success.amazon.accountConnectionSuccess")}),this.$emit("ca-setAccountData",e,t),this.$emit("ca-stepsToGetBack"),this.$emit("ca-redirect","bf.sales.channel.detail.base.amazonConnectionAssistant.account.marketplace")})).catch((e=>{this.$emit("ca-isLoading",!1),this.createNotificationError({title:this.$tc("error.amazon.title"),message:this.$tc("error.amazon.accountConnectionError")})})):(this.$emit("ca-isLoading",!1),this.createNotificationError({title:this.$tc("error.amazon.title"),message:this.$tc("error.amazon.accountConnectionError")}))})).catch((e=>{this.$emit("ca-isLoading",!1),this.createNotificationError({title:this.$tc("error.amazon.title"),message:this.$tc("error.global.internalError")})})))},validate(e,t){return null!==e&&null!==t&&0!==e.length&&0!==t.length||(this.createNotificationError({title:this.$tc("error.amazon.title"),message:this.$tc("error.amazon.credentialValidationError")}),!1)}}});var A=n("/E9E"),M=n.n(A);n("O0PL");Shopware.Component.register("bf-amazon-connection-assistant-start-success",{template:M.a,data(){return{title:this.$parent.getTitle()}},created(){this.setTitle()},methods:{setTitle(){const e=this.title?this.title+" - Account Status":"Account Status";this.$emit("set-title",e)}}});var I=n("0Lbv"),T=n.n(I);Shopware.Component.register("bf-amazon-connection-assistant-account",{template:T.a,props:{nextBtnIsClicked:Boolean}});var x=n("y8xS"),E=n.n(x);n("Mula");const{Component:B}=Shopware;B.register("bf-amazon-connection-assistant-account-marketplace",{template:E.a,inject:["BfConnectionAssistantService"],props:{nextBtnIsClicked:Boolean},data(){return{canRetailerSell:null,tooltip:{message:this.$tc("amazon.validateMarketplaceTooltip")}}},created(){this.setTitle()},watch:{nextBtnIsClicked:{handler:function(e){!0===e&&this.nextStep()},deep:!0}},methods:{setTitle(){const e=this.$tc("amazon.baseTitle")+this.$tc("amazon.step2");this.$emit("set-title",e)},marketplaceCheck(){this.$emit("ca-isLoading",!0),this.BfConnectionAssistantService.validateMarketplace("amazon",{mwsAuthToken:this.$route.params.accountData.mwsToken,sellerId:this.$route.params.accountData.retailerId,marketplaceId:this.$route.params.marketplaceId}).then((e=>{if(!0!==e.data.success||200!==e.status||!0!==e.data.data.isAllowedToListAtMarketplace)return this.$emit("ca-isLoading",!1),this.canRetailerSell=!1;this.BfConnectionAssistantService.storeShopsConfigurations("amazon",{shopsConfigurations:{MARKETPLACE:e.data.data.marketplaceId,URL:e.data.data.mwsEndpoint}}).then((e=>{this.BfConnectionAssistantService.triggerCategoriesImport("amazon"),this.$emit("ca-isLoading",!1),this.canRetailerSell=!0,this.$emit("ca-setNextBtnState",!1)})).catch((e=>{this.$emit("ca-isLoading",!1),this.canRetailerSell=!1}))})).catch((e=>{this.$emit("ca-isLoading",!1),this.createNotificationError({title:this.$tc("error.amazon.title"),message:this.$tc("error.global.internalError")})}))},nextStep(){this.$emit("ca-stepsToGetBack"),this.$emit("ca-setNextBtnState",!0),this.$emit("ca-resetNextBtnIsClicked"),this.$emit("ca-redirect","bf.sales.channel.detail.base.amazonConnectionAssistant.account.product-check")}}});var z=n("EK2K"),D=n.n(z);n("Y6BQ");const{Component:$,Mixin:L,Application:N}=Shopware;$.register("bf-amazon-connection-assistant-account-product",{template:D.a,inject:["BfConnectionAssistantService","loginService"],mixins:[L.getByName("notification")],props:{nextBtnIsClicked:Boolean,showSupportModal:Boolean},data(){return{hasRetailerProducts:null,tooltip:{message:this.$tc("amazon.productCheckTooltip")},showConfirmModal:!1}},created(){this.setTitle()},watch:{nextBtnIsClicked:{handler:function(e){!0===e&&this.showConfirmFinishModal()},deep:!0}},methods:{setTitle(){const e=this.$tc("amazon.baseTitle")+this.$tc("amazon.step3");this.$emit("set-title",e)},productCheck(){this.$emit("ca-isLoading",!0),this.BfConnectionAssistantService.marketplaceArticleExists("amazon",{mwsAuthToken:this.$route.params.accountData.mwsToken,sellerId:this.$route.params.accountData.retailerId,marketplaceId:this.$route.params.marketplaceId}).then((e=>{this.$emit("ca-isLoading",!1),!0===e.data.success&&200===e.status?(this.hasRetailerProducts=!1!==e.data.data.productsDataExists,!1===this.hasRetailerProducts&&this.$emit("ca-setNextBtnState",!1)):(this.$emit("ca-isLoading",!1),this.createNotificationError({title:this.$tc("error.amazon.title"),message:this.$tc("error.global.internalError")}))})).catch((e=>{this.$emit("ca-isLoading",!1),this.createNotificationError({title:this.$tc("error.amazon.title"),message:this.$tc("error.global.internalError")})}))},nextStep(){},showConfirmFinishModal(){this.showConfirmModal=!0},confirmFinishModal(){this.showConfirmModal=!1,this.$emit("ca-isLoading",!0),this.sendIsConnectedDataToBackend()},closeModal(){this.$emit("ca-resetNextBtnIsClicked"),this.showConfirmModal=!1},sendIsConnectedDataToBackend(){N.getContainer("init").httpClient.post("/swagMarkets/amazon/finishConnectionAssistant",{is_connected:!0},{headers:{Authorization:`Bearer ${this.loginService.getToken()}`}}).then((e=>{this.$emit("ca-isLoading",!1),!0===e.data.success?(this.createNotificationSuccess({title:this.$tc("success.amazon.title"),message:this.$tc("success.amazon.successfulFinishedConnectionAssistant")}),this.$emit("modal-close",!0)):(this.$emit("ca-resetNextBtnIsClicked"),this.createNotificationError({title:this.$tc("error.amazon.title"),message:this.$tc("error.amazon.confirmFinishSavingDataError")}))})).catch((e=>{this.$emit("ca-isLoading",!1),this.$emit("ca-resetNextBtnIsClicked"),this.createNotificationError({title:this.$tc("error.amazon.title"),message:this.$tc("error.global.internalError")})}))}}});const{Module:F}=Shopware;F.register("bf-amazon-connection-assistant",{type:"plugin",name:"swagMarkets-amazon-connection-assistant",routes:{index:{component:"bf-amazon-connection-assistant-index",path:"index",redirect:{name:"bf.amazon.connection.assistant.index.start.authorize"},children:{start:{component:"bf-amazon-connection-assistant-start",path:"start",children:{authorize:{component:"bf-amazon-connection-assistant-start-authorize",path:"authorize"},success:{component:"bf-amazon-connection-assistant-start-success",path:"success",redirect:{name:"bf.amazon.connection.assistant.index.account"}}}},account:{component:"bf-amazon-connection-assistant-account",path:"account",redirect:{name:"bf.amazon.connection.assistant.index.account.marketplace"},children:{marketplace:{component:"bf-amazon-connection-assistant-account-marketplace",path:"marketplace"},"product-check":{component:"bf-amazon-connection-assistant-account-product",path:"product-check"}}}}}}});var O=n("OeE3"),R=n.n(O);n("7CDV");const{Component:H}=Shopware;H.register("bf-ebay-connection-assistant-modal",{template:R.a,inject:["BfConnectionAssistantService"],data:()=>({title:"Ebay Connection Assistant",buttonConfig:[],showModal:!1,stepsToGetBack:-1,marketplaceId:"",nextIsDisabled:!0,nextBtnIsClicked:!1,isLoading:!1,isFinished:!1,authTokenStateIntervalId:null,showSupportModal:!1}),methods:{closeModal(e){!0===e&&(this.isFinished=e),this.showModal=!1},setTitle(e){this.title=e},redirect(e){this.$router.push({name:e,params:{marketplaceId:this.marketplaceId}})},addStepsToGetBack(){this.stepsToGetBack-=1},setAccountData(e,t){this.accountData.retailerId=e,this.accountData.mwsToken=t},setNextBtnState(e){this.nextIsDisabled=e},onClickNext(){this.nextBtnIsClicked=!0},resetNextBtnIsClicked(){this.nextBtnIsClicked=!1},setIsLoadingState(e){this.isLoading=e},sleep:e=>new Promise((t=>setTimeout(t,e))),startCheckTokenState(){this.setIsLoadingState(!0),this.authTokenStateIntervalId=setInterval(this.checkTokenState,5e3)},checkTokenState(){this.BfConnectionAssistantService.ebayAuthorizationTokenState().then((e=>{200===e.status&&!0===e.data.success&&!0===e.data.data.isConnected&&(clearInterval(this.authTokenStateIntervalId),this.setIsLoadingState(!1),this.addStepsToGetBack(),this.redirect("bf.sales.channel.detail.base.ebayConnectionAssistant.start.authorize-oauth"))}))},startCheckOAuthTokenState(){this.setIsLoadingState(!0),this.authTokenStateIntervalId=setInterval(this.checkOAuthTokenState,5e3)},checkOAuthTokenState(){this.BfConnectionAssistantService.ebayAuthorizationOAuthTokenState().then((e=>{200===e.status&&!0===e.data.success&&!0===e.data.data.isConnected&&(clearInterval(this.authTokenStateIntervalId),this.setIsLoadingState(!1),this.addStepsToGetBack(),this.redirect("bf.sales.channel.detail.base.ebayConnectionAssistant.account.marketplace"))}))}},mounted(){this.showModal=!0,this.$route.params.marketplaceId||(this.showModal=!1),this.marketplaceId=this.$route.params.marketplaceId},watch:{showModal(e){null!==this.authTokenStateIntervalId&&void 0!==this.authTokenStateIntervalId&&clearInterval(this.authTokenStateIntervalId),!1===e&&(!1===this.isFinished&&this.$router.go(this.stepsToGetBack),!0===this.isFinished&&this.$router.go(0))}}});var U=n("KdMB"),V=n.n(U);n("NqcO");Shopware.Component.register("bf-ebay-connection-assistant-logo",{template:V.a});var G=n("OfwT"),q=n.n(G);n("46g+");Shopware.Component.register("bf-ebay-connection-assistant-account-status",{template:q.a,inject:["userService"],data:()=>({user:{}}),created(){this.getUser()},methods:{getUser(){this.userService.getUser().then((e=>{this.user=e.data}))}}});var K=n("67bG"),j=n.n(K);n("KO17");Shopware.Component.register("bf-ebay-connection-assistant-index",{template:j.a});var W=n("x0cU"),Z=n.n(W);n("dooy");Shopware.Component.register("bf-ebay-connection-assistant-start",{template:Z.a,data:()=>({title:null}),created(){this.setTitle()},methods:{setTitle(){this.title="Ebay connection assistant",this.$emit("set-title",this.title)},getTitle(){return this.title}}});var Y=n("odZB"),X=n.n(Y);n("vG7C");const{Component:Q}=Shopware;Q.register("bf-ebay-connection-assistant-start-authorize",{template:X.a,inject:["BfConnectionAssistantService"],data(){return{retailerId:null,mwsToken:null,title:this.$parent.getTitle(),btnDisabled:!1,errorGetConnectionLink:!1,irpLink:"",onConnectBtnClicked:!1,intervalId:null}},created(){this.setTitle(),this.getEbayConnectLink()},methods:{setTitle(){const e=this.$tc("ebay.baseTitle")+this.$tc("ebay.step1");this.$emit("set-title",e)},sleep:e=>new Promise((t=>setTimeout(t,e))),authorize(){window.open(this.irpLink,"_blank"),this.$emit("ca-startCheckTokenState")},async dummyAuthorize(){this.$emit("ca-isLoading",!0),await this.sleep(3e3),!0===this.BfConnectionAssistantService.authorizeEbay()&&(this.$emit("ca-isLoading",!1),this.createNotificationSuccess({title:this.$tc("success.ebay.title"),message:this.$tc("success.ebay.accountConnectionSuccess")}),this.$nextTick((()=>{this.$emit("ca-stepsToGetBack"),this.$emit("ca-redirect","bf.sales.channel.detail.base.ebayConnectionAssistant.account.marketplace")})))},async getEbayConnectLink(){this.$emit("ca-isLoading",!0),await this.BfConnectionAssistantService.ebayConnectLink().then((e=>{!0===e.data.success&&200===e.status&&(this.irpLink=e.data.data.irpLink,this.btnDisabled=!1)})).catch((()=>{this.errorGetConnectionLink=!0})),this.$emit("ca-isLoading",!1)}}});var J=n("LsQ3"),ee=n.n(J);n("LJWa");const{Component:te}=Shopware;te.register("bf-ebay-connection-assistant-start-authorize-oauth",{template:ee.a,inject:["BfConnectionAssistantService"],data:()=>({btnDisabled:!1,errorGetOAuthTokenLink:!1,oAuthTokenLink:"",oAuthIntervalId:null}),methods:{setTitle(){const e=this.$tc("ebay.baseTitle")+this.$tc("ebay.step2");this.$emit("set-title",e)},sleep:e=>new Promise((t=>setTimeout(t,e))),authorizeOAuth(){window.open(this.oAuthTokenLink,"_blank"),this.$emit("ca-startCheckOAuthTokenState")},async getEbayOAuthTokenLink(){this.$emit("ca-isLoading",!0),await this.BfConnectionAssistantService.ebayOAuthTokenLink().then((e=>{this.oAuthTokenLink=decodeURIComponent(e.data.data.irpLink)})).catch((()=>{this.errorGetOAuthTokenLink=!0})),this.$emit("ca-isLoading",!1)}},created(){this.setTitle(),this.getEbayOAuthTokenLink()}});var ne=n("k4V0"),ae=n.n(ne);n("2vFg");Shopware.Component.register("bf-ebay-connection-assistant-start-success",{template:ae.a,data(){return{title:this.$parent.getTitle()}},created(){this.setTitle()},methods:{setTitle(){const e=this.title?this.title+" - Account Status":"Account Status";this.$emit("set-title",e)}}});var se=n("wWeY"),ie=n.n(se);Shopware.Component.register("bf-ebay-connection-assistant-account",{template:ie.a,props:{nextBtnIsClicked:Boolean}});var oe=n("VdUB"),re=n.n(oe);n("pXlS");Shopware.Component.register("bf-ebay-connection-assistant-account-marketplace",{template:re.a,inject:["BfConnectionAssistantService"],props:{nextBtnIsClicked:Boolean},data(){return{canRetailerSell:null,tooltip:{message:this.$tc("amazon.validateMarketplaceTooltip")}}},created(){this.setTitle()},watch:{nextBtnIsClicked:{handler:function(e){!0===e&&this.nextStep()},deep:!0}},methods:{setTitle(){const e=this.$tc("ebay.baseTitle")+this.$tc("ebay.step3");this.$emit("set-title",e)},sleep:e=>new Promise((t=>setTimeout(t,e))),async siteIdCheck(){this.$emit("ca-isLoading",!0),await this.BfConnectionAssistantService.ebaySiteIdCheck(this.$route.params.marketplaceId).then((e=>{200===e.status&&!0===e.data.success&&!0===e.data.data.siteId?(this.BfConnectionAssistantService.storeShopsConfigurations("ebay",{shopsConfigurations:{EBAY_SITE_ID:this.$route.params.marketplaceId}}).then((()=>{this.BfConnectionAssistantService.triggerCategoriesImport("ebay")})),this.canRetailerSell=!0,this.$emit("ca-setNextBtnState",!1)):this.canRetailerSell=!1})),this.$emit("ca-isLoading",!1)},nextStep(){this.$emit("ca-stepsToGetBack"),this.$emit("ca-setNextBtnState",!0),this.$emit("ca-resetNextBtnIsClicked"),this.$emit("ca-redirect","bf.sales.channel.detail.base.ebayConnectionAssistant.account.product-check")}}});var le=n("3jw2"),ce=n.n(le);n("fnQG");const{Component:de,Mixin:he,Application:pe}=Shopware;de.register("bf-ebay-connection-assistant-account-product",{template:ce.a,inject:["BfConnectionAssistantService","loginService"],mixins:[he.getByName("notification")],props:{nextBtnIsClicked:Boolean,showSupportModal:Boolean},data(){return{hasRetailerProducts:null,tooltip:{message:this.$tc("ebay.productCheckTooltip")},showConfirmModal:!1,errorProductCheck:!1}},created(){this.setTitle()},watch:{nextBtnIsClicked:{handler:function(e){!0===e&&this.showConfirmFinishModal()},deep:!0}},methods:{setTitle(){const e=this.$tc("ebay.baseTitle")+this.$tc("ebay.step4");this.$emit("set-title",e)},sleep:e=>new Promise((t=>setTimeout(t,e))),async productCheck(){this.$emit("ca-isLoading",!0),await this.BfConnectionAssistantService.marketplaceArticleExists("ebay",{}).then((e=>{200===e.status&&!0===e.data.success?(this.hasRetailerProducts=e.data.data.articleListingExists,this.$emit("ca-setNextBtnState",!1)):this.errorProductCheck=!0})).catch((e=>{this.errorProductCheck=!0})),this.$emit("ca-isLoading",!1)},showConfirmFinishModal(){this.showConfirmModal=!0},confirmFinishModal(){this.showConfirmModal=!1,this.$emit("ca-isLoading",!0),this.sendIsConnectedDataToBackend()},closeModal(){this.$emit("ca-resetNextBtnIsClicked"),this.showConfirmModal=!1},sendIsConnectedDataToBackend(){pe.getContainer("init").httpClient.post("/swagMarkets/ebay/finishConnectionAssistant",{is_connected:!0},{headers:{Authorization:`Bearer ${this.loginService.getToken()}`}}).then((e=>{this.$emit("ca-isLoading",!1),!0===e.data.success?(this.createNotificationSuccess({title:this.$tc("success.ebay.title"),message:this.$tc("success.ebay.successfulFinishedConnectionAssistant")}),this.$emit("modal-close",!0)):(this.$emit("ca-resetNextBtnIsClicked"),this.createNotificationError({title:this.$tc("error.ebay.title"),message:this.$tc("error.ebay.confirmFinishSavingDataError")}))})).catch((e=>{this.$emit("ca-isLoading",!1),this.$emit("ca-resetNextBtnIsClicked"),this.createNotificationError({title:this.$tc("error.ebay.title"),message:this.$tc("error.global.internalError")})}))}}});const{Module:ue}=Shopware;ue.register("bf-ebay-connection-assistant",{type:"plugin",name:"swagMarkets-ebay-connection-assistant",routes:{index:{component:"bf-ebay-connection-assistant-index",path:"index",redirect:{name:"bf.ebay.connection.assistant.index.start.authorize"},children:{start:{component:"bf-ebay-connection-assistant-start",path:"start",children:{authorize:{component:"bf-ebay-connection-assistant-start-authorize",path:"authorize"},success:{component:"bf-ebay-connection-assistant-start-success",path:"success",redirect:{name:"bf.ebay.connection.assistant.index.account"}}}},account:{component:"bf-ebay-connection-assistant-account",path:"account",redirect:{name:"bf.ebay.connection.assistant.index.account.marketplace"},children:{marketplace:{component:"bf-ebay-connection-assistant-account-marketplace",path:"marketplace"},"product-check":{component:"bf-ebay-connection-assistant-account-product",path:"product-check"}}}}}}});n("Ntwa");const{Application:me,Service:ge}=Shopware,be=Shopware.Classes.ApiService;class fe extends r{async getMappedCategories(e,t=1,n=10){return this.get(e+"/categories-mapping/v2",{shopId:await this.getShopId(),page:t,limit:n,loadRecursive:!1}).then((e=>e))}isSalesChannelSwagMarkets(e){return this.httpClient.get("/swagMarkets/check-own-sales-channel"+e,{headers:this.headers}).then((e=>be.handleResponse(e)))}async getCategories(e=null){return this.post("channels-categories/search",{limit:500,filter:[{field:"channelsId",type:"=",value:await this.getChannelId()},{field:"parentId",type:"=",value:e}]}).then((e=>be.handleResponse(e)))}async getRootCategories(){return this.post("channels-categories/search",{limit:500,filter:[{field:"channelsId",type:"=",value:await this.getChannelId()},{field:"parentId",value:null}]}).then((e=>be.handleResponse(e)))}async getChildCategories(e){return this.post("channels-categories/search",{limit:500,filter:[{field:"channelsId",type:"=",value:await this.getChannelId()},{field:"parentId",type:"=",value:e}]}).then((e=>be.handleResponse(e)))}async getCategoryById(e){return this.get("channels-categories/"+e).then((e=>be.handleResponse(e)))}async getCategoryByName(e){return this.post("channels-categories/search",{filter:[{field:"channelsId",type:"=",value:await this.getChannelId()},{field:"name",type:"=",value:e}]}).then((e=>be.handleResponse(e)))}async findCategoriesBy(e,t){let n=[];return n.push({field:"channelsId",type:"=",value:await this.getChannelId()}),t.forEach((t=>{n.push({field:e,type:"=",value:t,operator:"OR"})})),this.post("channels-categories/search",{filter:n}).then((e=>be.handleResponse(e)))}async findCategoryByName(e){return this.post("channels-categories/search",{filter:[{field:"channelsId",type:"=",value:await this.getChannelId()},{field:"name",type:"like",value:"%"+e+"%"}]}).then((e=>be.handleResponse(e)))}findCategoriesById(e,t={}){let n=[];return e.forEach((e=>{n.push({field:"external_channels_categories_id",type:"=",value:e.external_channels_categories_id,operator:"OR"})})),this.post("channels-categories/search",{filter:n,specificKey:t}).then((e=>be.handleResponse(e)))}findCategoriesByIds(e){let t=[];return e.forEach((e=>{t.push({field:"id",type:"=",value:e,operator:"OR"})})),this.post("channels-categories/search",{filter:t}).then((e=>be.handleResponse(e)))}getSalesChannelTypeName(e){return this.httpClient.get("/swagMarkets/get-sales-channel-type-name/"+e,{headers:this.headers}).then((e=>be.handleResponse(e)))}getMerchantId(e){return this.httpClient.get("/swagMarkets/get-merchant-id/"+e,{headers:this.headers}).then((e=>be.handleResponse(e)))}async saveCategoryMapping(e,t,n){return this.post(n+"/categories-mapping",{shopId:await this.getShopId(),data:[{swCategoryId:e,channelsCategoriesId:[...t]}]}).then((e=>be.handleResponse(e)))}async storeCategorySegmentMapping(e){return this.post("amazon/shops/store/product-segment",{shopId:await this.getShopId(),productSegments:[e]}).then((e=>be.handleResponse(e)))}async getSegments(){let e=await this.getShopId();return 0!==e.length&&this.get("amazon/product-segments/"+e).then((e=>be.handleResponse(e)))}async getCategorySegment(e){return this.get("amazon/shops/load/product-segment/"+await this.getShopId()+"/"+e).then((e=>be.handleResponse(e)))}async getSegmentsTypes(e){return this.get("amazon/product-types/"+await this.getShopId()+"/"+e).then((e=>be.handleResponse(e)))}}me.addServiceProvider("BfCategoryService",(e=>{const t=me.getContainer("init");return new fe(t.httpClient,e.loginService,"swagMarkets","https://brickfox.io/api/")}));const{Application:ye}=Shopware,_e=Shopware.Classes.ApiService;class we extends r{async createProductsAttributes(e,t){return this.post("attributes/create",{shopId:await this.getShopId(),json:{productsAttributesCode:e,externProductsAttributesId:e,type:"STRING",visibility:"FRONTEND",assignment:"ALL",usage:"SPECIAL",keepOnImport:1,productsAttributesDescriptionData:{translations:t}}})}async updateProductsAttributes(e,t){return this.post("attributes/update",{shopId:await this.getShopId(),productsAttributesId:e,json:{productsAttributesDescriptionData:{translations:t}}})}async loadAttributeMappingData(){return this.get(await this.getSalesChannelType()+"/attributes-mapping/load",{shopId:await this.getShopId()})}async saveAttributeMappingData(e){return this.post(await this.getSalesChannelType()+"/attributes-mapping/store",{shopId:await this.getShopId(),mappingData:e})}async removeAttributeMappingData(e){return this.delete(await this.getSalesChannelType()+"/attributes-mapping/"+e,{shopId:await this.getShopId()})}async loadAttributeValueMappingData(e){return this.get(await this.getSalesChannelType()+"/attributes-values-mapping/load",{shopId:await this.getShopId(),channelId:await this.getChannelId(),attributeId:e})}async saveAttributeValueMappingData(e){return this.post(await this.getSalesChannelType()+"/attributes-values-mapping/store",{shopId:await this.getShopId(),channelId:await this.getChannelId(),mappingData:e})}async loadBfAttributeData(e){return this.post("attributes/search",{shopId:await this.getShopId(),name:e})}async loadBfAttributeDataV2(e){return this.post("attributes/search/v2",{shopId:await this.getShopId(),search:e})}async loadAttributeData(e,t,n){return this.post("channels-attributes/search",{limit:t,page:n,filter:[{field:"channelsId",type:"=",value:await this.getChannelId()},{field:"name",type:"like",value:e+"%"}],groupBy:"name",order:{field:"name",direction:"ASC"}})}async loadAttributeValueData(e,t){return this.post("channels-attributes-values/search",{limit:500,filter:[{field:["channelsAttributes","name"],type:"=",value:e},{field:"name",type:"like",value:t+"%"}]})}async loadPropertyData(){let e=await this.getConfig();if(e.swagMarkets_business_platform)return this.get("erpSystems/configurations/"+e.swagMarkets_business_platform.shop_id,{})}async storePropertyData(e,t){let n={},a=await this.getConfig();if(a.swagMarkets_business_platform)return"property"===e?n.PROPERTIES_TO_IMPORT_AS_ATTRIBUTES=t:"custom_field"===e&&(n.CUSTOM_FIELDS_TO_IMPORT_AS_ATTRIBUTES=t),this.post("erpSystems/configurations",{shopId:a.swagMarkets_business_platform.shop_id,erpSystemsConfigurations:n})}async getVariationProperties(e=1,t=5){return this.httpClient.post(this.apiUrl+"variation-diff-options/search",{shopId:await this.getShopId(),name:"*",limit:t,page:e},{headers:await this.getHeaders()}).then((e=>_e.handleResponse(e)))}async getVariationsDiffsOptionsMapping(e){return this.httpClient.get(this.apiUrl+e+"/variation-diff-options-mapping/load",{params:{shopId:await this.getShopId()},headers:await this.getHeaders()}).then((e=>_e.handleResponse(e)))}async storeVariationsDiffsOptionsMapping(e,t){return this.httpClient.post(this.apiUrl+e+"/variation-diff-options-mapping/store",{shopId:await this.getShopId(),mappingData:t},{headers:await this.getHeaders()})}}ye.addServiceProvider("bfPropertyService",(e=>{const t=ye.getContainer("init");return new we(t.httpClient,e.loginService,"swagMarkets","https://brickfox.io/api/")}));const{Application:Ce}=Shopware;class ke extends r{async loadUnitData(e){return this.post("units/search",{shopId:await this.getShopId(),name:e})}async loadUnitMappingData(){return this.get(await this.getSalesChannelType()+"/units-mapping/load",{shopId:await this.getShopId()})}async saveUnitMappingData(e){return this.post(await this.getSalesChannelType()+"/units-mapping/store",{shopId:await this.getShopId(),mappingData:e})}}Ce.addServiceProvider("bfUnitService",(e=>{const t=Ce.getContainer("init");return new ke(t.httpClient,e.loginService,"swagMarkets","https://brickfox.io/api/")}));const{Application:Se}=Shopware,{ApiService:ve}=Shopware.Classes;class Pe extends r{async getSkuLimit(){return this.httpClient.get(this.apiUrl+"system/configs/skuLimit",{headers:await this.getHeaders()}).then((e=>ve.handleResponse(e)))}async getLicense(){const e=await this.getConfig();return this.httpClient.get(this.apiUrl+"system/client/"+e.client.shop_id,{headers:await this.getHeaders()}).then((e=>ve.handleResponse(e)))}}Se.addServiceProvider("bfSystemApiService",(e=>{const t=Se.getContainer("init");return new Pe(t.httpClient,e.loginService,"swagMarkets","https://brickfox.io/api/")}));const{Application:Ae}=Shopware,{ApiService:Me}=Shopware.Classes;class Ie extends r{async getSelectedCurrencyEntity(e){let t=Ae.getContainer("init").httpClient,n=null;return await t.get("/currency/"+e,{headers:this.getBasicHeaders()}).then((e=>{200===e.status&&(n=e.data.data.attributes,n.id=e.data.data.id)})).catch((()=>{n="ERROR-FETCH-CURRENCY"})),n}async getSelectedLanguagesEntity(e){let t=Ae.getContainer("init").httpClient,n=null;return await t.get("/language/"+e,{headers:this.getBasicHeaders()}).then((e=>{200===e.status&&(n=e.data.data.attributes,n.id=e.data.data.id)})).catch((()=>{n="ERROR-FETCH-LANGUAGE"})),n}async getLocaleEntity(e){let t=Ae.getContainer("init").httpClient,n=null;return await t.get("/locale/"+e,{headers:this.getBasicHeaders()}).then((e=>{n=e.data.data.attributes})).catch((()=>{n="ERROR-FETCH-LOCALE"})),n}async getSelectedPaymentMethodEntity(e){let t=Ae.getContainer("init").httpClient,n=null;return await t.get("/payment-method/"+e,{headers:this.getBasicHeaders()}).then((e=>{200===e.status&&(n=e.data.data.attributes,n.id=e.data.data.id)})).catch((()=>{n="ERROR-FETCH-PAYMENT-METHOD"})),n}getMarketplaces(e){return this.post("channels/search",{filter:[{field:"type",type:"=",value:e}]}).then((e=>Me.handleResponse(e)))}async activateDeactivateSalesChannelCronJobs(e){await this.httpClient.post(this.apiUrl+"system/crons",{shopId:await this.getShopId(),channelType:await this.getSalesChannelType(),active:e},{headers:await this.getHeaders()})}async checkClientState(){let e={clientExists:!1,clientInProgress:!1},t=await this.getShopId();return t.length>0&&await this.httpClient.get(this.apiUrl+"system/client/"+t,{headers:await this.getHeaders()}).then((t=>{200===t.status&&t.data.data.id>0&&(e.clientExists=!0,!1===t.data.data.data.active&&(e.clientInProgress=!0))})),e}async getShopsConfigurations(){let e=await this.getShopId();return e.length>0?this.httpClient.get(this.apiUrl+await this.getSalesChannelType()+"/brickfox/shops/configurations/"+e,{headers:await this.getHeaders()}):{status:500,data:{success:!1}}}async getErpSystemsConfiguration(){let e=await this.getShopId();if(e.length>0)return this.httpClient.get(this.apiUrl+"erpSystems/configurations/"+e,{headers:await this.getHeaders()})}async storeIntegrationUserCredentialsToBf(){let e=await this.getConfig(),t=e.integration_user,n=await this.getShopId();if(0!==n.length)return!0!==e.swagMarkets_business_platform.swagMarkets_systems.erp_systems.base_configuration_is_set&&this.httpClient.post(this.apiUrl+"erpSystems/configurations",{shopId:n,erpSystemsConfigurations:{API_URL:window.location.origin+"/api/",API_VERSION:"v1",ACCESS_KEY:"sw-access-key",API_KEY:t.access_key,API_SECRET_KEY:t.secret_access_key}},{headers:await this.getHeaders()})}async getMarketplaceId(e){let t=await this.getConfig(),n=null;return t.hasOwnProperty(e+"_configuration")&&t[e+"_configuration"].hasOwnProperty("marketplace_id")&&(n=t[e+"_configuration"].marketplace_id),n}async storeErpSystemsConfigurationCurrenciesMatching(e,t=!1){let n=await this.getBfConfigSwagMarketsSystem();0!==(await this.getShopId()).length&&(!0===n.shops_currencies_is_set&&!1===t||"ERROR-FETCH-CURRENCY"===e||(await this.httpClient.put(this.apiUrl+"erpSystems/store-matching-currencies",{shopId:await this.getShopId(),currenciesData:{isoCode:e.isoCode,externalId:e.id,externalValue:e.isoCode,exchangeRate:e.factor,currenciesName:e.name,currenciesCode:e.isoCode,currenciesSymbol:e.symbol,decimalPlaces:e.decimalPrecision}},{headers:await this.getHeaders()}),await this.storeShopsCurrencies(e.isoCode)))}async storeErpSystemsConfigurationLanguagesMatching(e,t=!1){let n=await this.getBfConfigSwagMarketsSystem(),a=await this.getLocaleEntity(e.localeId),s=await this.getShopId();!0===n.shops_languages_is_set&&!1===t||"ERROR-FETCH-LANGUAGE"===e||"ERROR-FETCH-LOCALE"===a||0===s.length||(await this.httpClient.put(this.apiUrl+"erpSystems/store-matching-languages",{shopId:s,languagesData:{isoCode:a.code,name:e.name,externalId:e.localeId,externalValue:a.code}},{headers:await this.getHeaders()}),await this.storeShopsLanguages(a.code))}async storeShopsLanguages(e){let t=await this.getSalesChannelType();await this.httpClient.put(this.apiUrl+t+"/shops/store",{shopId:await this.getShopId(),shopsLanguages:[{isoCode:e,mainLanguage:1,sortOrder:1}]},{headers:await this.getHeaders()}).then((()=>{this.updateBfConfigSwagMarketsSystem({shops:{[t]:{shops_languages_is_set:!0}}})}))}async storeShopsCurrencies(e){let t=await this.getSalesChannelType();await this.httpClient.put(this.apiUrl+t+"/shops/store",{shopId:await this.getShopId(),shopsCurrencies:[{currencyCode:e,mainCurrency:1}]},{headers:await this.getHeaders()}).then((()=>{this.updateBfConfigSwagMarketsSystem({shops:{[t]:{shops_currencies_is_set:!0}}})}))}async storeErpSystemMatchingData(e,t=[],n=!1){let a=await this.getBfConfigSwagMarketsSystem(),s=null,i=e.shippingMethods.get(e.shippingMethodId),o=e.paymentMethods.get(e.paymentMethodId),r=await this.getShopId();return 0!==r.length&&(!0!==a.payment_methods_is_set||!0!==a.shipping_methods_is_set||!1!==n)&&("amazon"===await this.getSalesChannelType()?(s=55,t.push({paymentMethodsId:6,erpPaymentMethodsCode:o.name+" ##"+o.id+"##"})):"ebay"===await this.getSalesChannelType()&&(s=44),null!==s&&t.length>0?this.httpClient.put(this.apiUrl+"erpSystems/store-matching",{shopId:r,erpSystemsMatchingShippingMethodsData:[{shippingMethodsId:s,erpShippingMethodsCode:i.name+" ##"+i.id+"##"}],erpSystemsMatchingPaymentMethodsData:t},{headers:await this.getHeaders()}):void 0)}async storeSalesChannelDataToBf(e){await this.getConfig();let t=await this.getShopId();return 0!==t.length&&this.httpClient.post(this.apiUrl+await this.getSalesChannelType()+"/brickfox/shops/configurations",{shopId:t,shopsConfigurations:e},{headers:await this.getHeaders()})}async storeApiVersion(){let e=await this.getShopId(),t="v1";0!==e.length&&(await this.httpClient.get("swagMarkets/config/api-version",{headers:this.getBasicHeaders()}).then((e=>{200===e.status&&(t=0===e.data.data.apiVersion.length?"":"v"+e.data.data.apiVersion)})),this.httpClient.post(this.apiUrl+"erpSystems/configurations",{shopId:e,erpSystemsConfigurations:{API_VERSION:t}},{headers:await this.getHeaders()}))}async storeUseAdminApi(){let e=await this.getShopId();this.httpClient.post(this.apiUrl+"erpSystems/configurations",{shopId:e,erpSystemsConfigurations:{IS_SHOPWARE6_ADMIN_API:"1"}},{headers:await this.getHeaders()})}async storeErpSystemsConfiguration(e){let t=await this.getShopId();0!==t.length&&this.httpClient.post(this.apiUrl+"erpSystems/configurations",{shopId:t,erpSystemsConfigurations:e},{headers:await this.getHeaders()})}async storeShopsConfigurations(e){return this.httpClient.post(this.apiUrl+await this.getSalesChannelType()+"/brickfox/shops/configurations",{shopId:await this.getShopId(),shopsConfigurations:e},{headers:await this.getHeaders()})}async storeSalesChannelLanguage(e){this.httpClient.post("swagMarkets/sales-channel-language/save",{salesChannelId:e.id,languageId:e.languageId},{headers:this.getBasicHeaders()})}async storeSalesChannelCountry(e){this.httpClient.post("swagMarkets/sales-channel-country/save",{salesChannelId:e.id,countryId:e.countryId},{headers:this.getBasicHeaders()})}async storeSalesChannelCurrency(e){this.httpClient.post("swagMarkets/sales-channel-currency/save",{salesChannelId:e.id,currencyId:e.currencyId},{headers:this.getBasicHeaders()})}async updateBfConfigSwagMarketsSystem(e){this.httpClient.post("swagMarkets/config/store/erpSystemConfig",{swagMarkets_systems:e},{headers:this.getBasicHeaders()})}async updateMarketplaceConfiguration(e){const t=await this.getSalesChannelType();return e.marketplace=t+"_configuration",this.httpClient.post("swagMarkets/config/marketplace/set-id",{data:e},{headers:this.getBasicHeaders()}).then((e=>Me.handleResponse(e)))}async getBfConfigSwagMarketsSystem(e=!1){return(await this.getConfig(e)).swagMarkets_business_platform.swagMarkets_systems.shops[await this.getSalesChannelType()]}async getIsMarketplaceConnected(){let e=!1,t=await this.getSalesChannelType()+"_configuration";return await this.getConfig().then((n=>{n.hasOwnProperty(t)&&n[t].hasOwnProperty("is_connected")&&void 0!==n[t].is_connected&&(e=n[t].is_connected)})),e}async getSalesChannelConfiguration(){let e=await this.getSalesChannelType()+"_configuration",t={};return await this.getConfig().then((n=>{t=n[e]})),t}async getEbayPolicy(e){return await this.httpClient.get(this.apiUrl+"ebay/"+e+"/policy/"+await this.getShopId(),{headers:await this.getHeaders()})}async getEbayTokenExpires(){return await this.httpClient.get(this.apiUrl+"ebay/token/expires/"+await this.getShopId(),{headers:await this.getHeaders()})}async getMarketplace(){return await this.httpClient.get(this.apiUrl+"channels/"+await this.getChannelId(),{headers:await this.getHeaders()})}buildShopsConfigurations(e,t){return e.processingTime=t.hasOwnProperty("DEFAULT_DELIVERY_TIMES")?parseInt(t.DEFAULT_DELIVERY_TIMES):null,e.merchantShippingGroupName=t.hasOwnProperty("MERCHANT_SHIPPING_GROUP_NAME")?t.MERCHANT_SHIPPING_GROUP_NAME:null,e.enableFba=!!t.hasOwnProperty("ENABLE_FBA")&&"1"===t.ENABLE_FBA,e.useAmazonTaxCalculationService=!!t.hasOwnProperty("USE_AMAZON_TAX_CALCULATION_SERVICE")&&"1"===t.USE_AMAZON_TAX_CALCULATION_SERVICE,e.payPalEmail=t.hasOwnProperty("PAYPAL_EMAIL")?t.PAYPAL_EMAIL:null,e.ebayBestOfferAbsolute=t.hasOwnProperty("EBAY_BEST_OFFER_ABSOLUTE")?parseInt(t.EBAY_BEST_OFFER_ABSOLUTE):0,e.ebayBestOfferAbsoluteAutoAccept=t.hasOwnProperty("EBAY_BEST_OFFER_ABSOLUTE_AUTO_ACCEPT")?parseInt(t.EBAY_BEST_OFFER_ABSOLUTE_AUTO_ACCEPT):0,e.ebayBestOfferActive=!!t.hasOwnProperty("EBAY_BEST_OFFER_ACTIVE")&&"1"===t.EBAY_BEST_OFFER_ACTIVE,e.ebayBestOfferAutoAccept=!!t.hasOwnProperty("EBAY_BEST_OFFER_AUTO_ACCEPT")&&"1"===t.EBAY_BEST_OFFER_AUTO_ACCEPT,e.ebayBestOfferRelative=t.hasOwnProperty("EBAY_BEST_OFFER_RELATIVE")?parseInt(t.EBAY_BEST_OFFER_RELATIVE):0,e.ebayBestOfferRelativeAutoAccept=t.hasOwnProperty("EBAY_BEST_OFFER_RELATIVE_AUTO_ACCEPT")?parseInt(t.EBAY_BEST_OFFER_RELATIVE_AUTO_ACCEPT):0,e.ebayBestOfferFix=!!t.hasOwnProperty("EBAY_FIX_BEST_OFFER")&&"1"===t.EBAY_FIX_BEST_OFFER,e.ebayLogo=t.hasOwnProperty("EBAY_LOGO")?t.EBAY_LOGO:null,e.ebayPlus=!!t.hasOwnProperty("EBAY_PLUS_SELLER")&&"1"===t.EBAY_PLUS_SELLER,e.sellerZip=t.hasOwnProperty("sellerZip")?t.sellerZip:null,e.sellerCity=t.hasOwnProperty("sellerCity")?t.sellerCity:null,e.feedbackComment=t.hasOwnProperty("FEEDBACK_COMMENT")?t.FEEDBACK_COMMENT:null,e.productSegment=t.hasOwnProperty("productSegment")?t.productSegment:"-",e.productType=t.hasOwnProperty("productType")?t.productType:"-",e.shippingPolicy=!1,e.paymentPolicy=!1,e.returnPolicy=!1,e}}Ae.addServiceProvider("BfSalesChannelService",(e=>{const t=Ae.getContainer("init");return new Ie(t.httpClient,e.loginService,"swagMarkets","https://brickfox.io/api/")}));const{Application:Te}=Shopware;class xe extends r{async getProductErrors(e){const t=e.length>0?e:[[]];return this.get(await this.getSalesChannelType()+"/shops/products-errors",{shopId:await this.getShopId(),shopsProductsIds:t})}async getProductData(e){const t=await this.getSalesChannelType();let n=await this.getConfig();return n="amazon"===t?n.amazon_configuration:n.ebay_configuration,this.get(await this.getSalesChannelType()+"/product-data/load",{shopId:await this.getShopId(),productId:e,marketplaceId:n.marketplace_id})}async saveProductData(e,t){const n=await this.getSalesChannelType();let a=await this.getConfig();return a="amazon"===n?a.amazon_configuration:a.ebay_configuration,this.post(await this.getSalesChannelType()+"/product-data/store",{shopId:await this.getShopId(),bfProductId:e,marketplaceId:a.marketplace_id,productData:t})}async loadProductVariationData(e,t,n){return this.get(await this.getSalesChannelType()+"/product-variation-data/load",{shopId:await this.getShopId(),shopsProductsId:e,limit:t,page:n})}}Te.addServiceProvider("bfProductApiService",(e=>{const t=Te.getContainer("init");return new xe(t.httpClient,e.loginService,"swagMarkets","https://brickfox.io/api/")}));const{Application:Ee}=Shopware;class Be extends r{async storeErpSystemMatchingData(e,t,n=!1){let a=await e.getBfConfigSwagMarketsSystem(),s=await e.getSalesChannelType(),i=t.shippingMethods.get(t.shippingMethodId),o=t.paymentMethods.get(t.paymentMethodId),r=await this.getShopId();if(!0===a.payment_methods_is_set&&!0===a.shipping_methods_is_set&&!1===n||"amazon"!==await e.getSalesChannelType()||0===r.length)return!1;await this.httpClient.put(this.apiUrl+"erpSystems/store-matching",{shopId:r,erpSystemsMatchingShippingMethodsData:[{shippingMethodsId:55,erpShippingMethodsCode:i.name+" ##"+i.id+"##"}],erpSystemsMatchingPaymentMethodsData:[{paymentMethodsId:6,erpPaymentMethodsCode:o.name+" ##"+o.id+"##"}]},{headers:await this.getHeaders()}).then((()=>{e.updateBfConfigSwagMarketsSystem({shops:{[s]:{payment_methods_is_set:!0,shipping_methods_is_set:!0}}})}))}async storeErpSystemsMatchingShippingMethods(e,t,n){await this.httpClient.put(this.apiUrl+"erpSystems/store-matching",{shopId:await this.getShopId(),erpSystemsMatchingShippingMethodsData:[{shippingMethodsId:56,erpShippingMethodsCode:n.fba.code},{shippingMethodsId:57,erpShippingMethodsCode:n.prime.code},{shippingMethodsId:58,erpShippingMethodsCode:n.primeNextDay.code},{shippingMethodsId:59,erpShippingMethodsCode:n.primeSecondDay.code}]},{headers:await this.getHeaders()}).then((async function(){await e.updateBfConfigSwagMarketsSystem({shops:{[t]:{amazonFbaPrimeShippingMethods:{fba:{shippingMethodId:n.fba.shippingMethodId,code:n.fba.code},prime:{shippingMethodId:n.prime.shippingMethodId,code:n.prime.code},primeNextDay:{shippingMethodId:n.primeNextDay.shippingMethodId,code:n.primeNextDay.code},primeSecondDay:{shippingMethodId:n.primeSecondDay.shippingMethodId,code:n.primeSecondDay.code}}}}})}))}async storeShopsConfigurationData(e,t){let n=await e.getSalesChannelType();this.httpClient.post(this.apiUrl+n+"/brickfox/shops/configurations",{shopId:await this.getShopId(),shopsConfigurations:{FBA_SHIPPING_METHODS_CODE:"standard_amazon_fba",FBA_PAYMENT_METHODS_CODE:"amazon",AMAZON_ARE_BATTERIES_REQUIRED:t.hasOwnProperty("needsBatteryItem")?t.needsBatteryItem:"",AMAZON_DANGEROUS_GOODS_DEFAULT:t.hasOwnProperty("dangerousGoodsItem")?t.dangerousGoodsItem:"",DEFAULT_DELIVERY_TIMES:t.processingTime,MERCHANT_SHIPPING_GROUP_NAME:t.merchantShippingGroupName,ENABLE_FBA:t.enableFba?1:0,USE_AMAZON_TAX_CALCULATION_SERVICE:t.useAmazonTaxCalculationService?1:0,productSegment:t.productSegment,productType:t.productType}},{headers:await this.getHeaders()}),t.hasOwnProperty("amazonFbaPrimeShippingMethods")&&await this.storeErpSystemsMatchingShippingMethods(e,n,t.amazonFbaPrimeShippingMethods)}async getAmazonSegmentByName(e){return await this.httpClient.post(this.apiUrl+"amazonSegments/search",{shopId:await this.getShopId(),filter:[{field:"name",type:"=",value:e}]},{headers:await this.getHeaders()}).then((e=>e.data)).catch((e=>{console.log(e)}))}async getProductTypesIdByProductTypesName(e,t,n){return await this.httpClient.post(this.apiUrl+"productTypes/search",{shopId:await this.getShopId(),filter:[{field:"name",type:"=",value:"Clothing"===n?n:e},{field:"amazon_segments_id",type:"=",value:t}]},{headers:await this.getHeaders()}).then((e=>e.data)).catch((e=>{console.log(e)}))}async getProductTypesAttributesByProductType(e,t,n,a){return await this.httpClient.post(this.apiUrl+"productTypesAttributes/search",{shopId:await this.getShopId(),filter:[{field:"amazon_product_types_id",type:"=",value:e},{field:"name",type:"like",value:a+"%"}],order:{field:"name",direction:"asc"},limit:t,page:n},{headers:await this.getHeaders()}).then((e=>e.data)).catch((e=>{console.log(e)}))}async activateDeactivateFbaOrdersCron(e,t){this.httpClient.post(this.apiUrl+"system/single-cron",{shopId:await this.getShopId(),channelType:await e.getSalesChannelType(),action:"importfba",active:t.enableFba&&t.active},{headers:await this.getHeaders()})}async saveAmazonAsin(e){return await this.httpClient.post(this.apiUrl+"amazon/shops-products-variations-offers/save",{shopId:await this.getShopId(),shopsProductsVariationsData:e},{headers:await this.getHeaders()}).then((e=>e.data.data))}}Ee.addServiceProvider("BfAmazonService",(e=>{const t=Ee.getContainer("init");return new Be(t.httpClient,e.loginService,"swagMarkets","https://brickfox.io/api/")}));const{Application:ze,Mixin:De,Component:$e}=Shopware;class Le extends r{async storeErpSystemMatchingData(e,t,n=!1){let a=await e.getBfConfigSwagMarketsSystem(),s=await e.getSalesChannelType(),i=t.shippingMethods.get(t.shippingMethodId),o=await this.getShopId();return(!0!==a.payment_methods_is_set||!0!==a.shipping_methods_is_set||!1!==n)&&"ebay"===s&&0!==o.length&&this.httpClient.put(this.apiUrl+"erpSystems/store-matching",{shopId:o,erpSystemsMatchingShippingMethodsData:[{shippingMethodsId:44,erpShippingMethodsCode:i.name+" ##"+i.id+"##"}],erpSystemsMatchingPaymentMethodsData:t.ebayPaymentMethods},{headers:await this.getHeaders()}).then((()=>{e.updateBfConfigSwagMarketsSystem({shops:{[s]:{payment_methods_is_set:!0,shipping_methods_is_set:!0,payment_methods_matching:t.ebayPaymentMethods}}})}))}storeEbayPolicies(e,t={},n={},a={}){!0!==t.isDirty&&!0!==n.isDirty&&!0!==a.isDirty||e.storeShopsConfigurations({SHIPPING_POLICY:t.profileId,PAYMENT_POLICY:n.profileId,RETURN_POLICY:a.profileId})}async storeShopsConfigurationData(e,t){let n=await e.getSalesChannelType();return this.httpClient.post(this.apiUrl+n+"/brickfox/shops/configurations",{shopId:await this.getShopId(),shopsConfigurations:await this.prepareShopsConfigurationData(t)},{headers:await this.getHeaders()}),{mailIsValid:this.validateEmailAddress(t.payPalEmail),logoUrlIsValid:this.validateLogoUrl(t.ebayLogo)}}async prepareShopsConfigurationData(e){let t={EBAY_BEST_OFFER_ABSOLUTE:e.ebayBestOfferAbsolute,EBAY_BEST_OFFER_ABSOLUTE_AUTO_ACCEPT:e.ebayBestOfferAbsoluteAutoAccept,EBAY_BEST_OFFER_ACTIVE:e.ebayBestOfferActive,EBAY_BEST_OFFER_AUTO_ACCEPT:e.ebayBestOfferAutoAccept,EBAY_BEST_OFFER_RELATIVE:e.ebayBestOfferRelative,EBAY_BEST_OFFER_RELATIVE_AUTO_ACCEPT:e.ebayBestOfferRelativeAutoAccept,EBAY_FIX_BEST_OFFER:e.ebayBestOfferFix,EBAY_PLUS_SELLER:e.ebayPlus,sellerZip:e.sellerZip,sellerCity:e.sellerCity,FEEDBACK_COMMENT:e.feedbackComment};return this.validateEmailAddress(e.payPalEmail)&&(t.PAYPAL_EMAIL=e.payPalEmail),this.validateLogoUrl(e.ebayLogo)&&(t.EBAY_LOGO=e.ebayLogo),t}validateEmailAddress(e=""){return!!e.match(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-]+){1,}$/)}validateLogoUrl(e=""){return 0===e.indexOf("https://")}}ze.addServiceProvider("BfEbayService",(e=>{const t=ze.getContainer("init");return new Le(t.httpClient,e.loginService,"swagMarkets","https://brickfox.io/api/")}));const{Application:Ne}=Shopware;class Fe extends r{async repairIntegrationUser(){return this.httpClient.post("swagMarkets/config/repair-integration-user",{},{headers:this.getBasicHeaders()})}}Ne.addServiceProvider("bfPluginConfigurationService",(e=>{const t=Ne.getContainer("init");return new Fe(t.httpClient,e.loginService,"swagMarkets","https://bfbp-staging.brickfox.net/api/")}));var Oe=n("mWjW"),Re=n.n(Oe);n("laOL");const{Component:He}=Shopware;He.override("sw-category-tree-field",{name:"sw-category-tree-field-override",template:Re.a,props:{showLabelName:{type:Boolean,default:!0}}});var Ue=n("8ki4"),Ve=n.n(Ue);const{Component:Ge}=Shopware;Ge.override("sw-card",{name:"sw-card-override",template:Ve.a,props:{showHelpTextIcon:{type:Boolean,default:()=>!1},helpTextDescription:{type:String,default:()=>""},helpTextWidth:{default:()=>200}}});n("kfQF"),n("XHx6");var qe=n("Tm3G"),Ke=n.n(qe);const{Component:je}=Shopware,{Criteria:We}=Shopware.Data;je.override("sw-sales-channel-modal-grid",{name:"bf-sales-channel-modal-grid",template:Ke.a,inject:["repositoryFactory"],data:()=>({sct:[],salesChannels:[]}),computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")}},created(){this.extendSalesChannelType()},methods:{extendSalesChannelType(){const e=new We;e.setPage(1),e.setLimit(500),e.addSorting(We.sort("sales_channel.name","ASC")),e.addAssociation("type"),this.salesChannelRepository.search(e,Shopware.Context.api).then((e=>{this.salesChannels=e,this.salesChannelTypes.forEach(((e,t)=>{let n=!1;this.salesChannels.filter((t=>{t.typeId!==e.id||"26a9ece25bd14b288b30c3d71e667d2c"!==t.typeId&&"7ff39608fed04e4bbcc62710b7223966"!==t.typeId||(n=!0)})),this.sct.push(Object.assign({},e,{isCreated:n}))})),this.$nextTick((function(){this.salesChannelTypes=this.sct}))}))}}});var Ze=n("gHfu"),Ye=n.n(Ze);n("c+Tf");const{Component:Xe}=Shopware;Xe.extend("bf-sales-channel-product-grid","sw-entity-listing",{template:Ye.a,inject:["BfSalesChannelService"],props:{shopProductData:{type:Array,required:!0},marketplace:{type:Object,required:!0},currentContract:{type:Object,required:!0},marketplaceName:{type:String,required:!0}},data:()=>({clientExists:!1,clientInProgress:!1,selectedProduct:null,showProductDetailModal:!1,showAsinManagement:!1}),created(){this.checkClientState()},computed:{getMarketplaceName(){return this.marketplaceName}},methods:{paginate(e){this.$emit("paginateBf",e),this.$emit("page-change",e)},checkClientState(){this.BfSalesChannelService.checkClientState().then((e=>{this.clientExists=e.clientExists,this.clientInProgress=e.clientInProgress}))},onEditProductClick(e){this.selectedProduct=e,this.showProductDetailModal=!0},onAsinManagement(e){this.selectedProduct=e,this.showAsinManagement=!0},onOpenMarketplaceProductClick:function(e){window.open(this.getMarketplaceUrl()+e.marketplaceProductId)},getMarketplaceUrl(){let e="https://"+this.marketplace.name;return"amazon"===this.marketplace.type?e+="/dp/":e+="/itm/",e}}});var Qe=n("8943"),Je=n.n(Qe);n("cIId");const{Component:et,Mixin:tt}=Shopware,{Criteria:nt}=Shopware.Data;et.register("bf-contract",{template:Je.a,inject:["repositoryFactory","bfContractService"],mixins:[tt.getByName("notification")],props:{salesChannel:{type:Boolean,default:!1},isLoading:{type:Boolean,default:!1},clientExists:{type:Boolean,default:!1},currentContract:{type:Object,required:!0},bookableContracts:{type:Array,default:[]},userAuthorised:{type:Boolean,required:!0,default:!1},subProcessorData:{type:String,required:!0,default:""}},data:()=>({showContractModal:!1,showContractAgbModal:!1,showContractCancelModal:!1,selectedContract:{},confirmedAgb:!1,confirmedPayment:!1,currentLocale:"en",totalProductsByChannel:[],showLoginModal:!1,showPermissions:!1,showSubProcessor:!1}),computed:{productRepository(){return this.repositoryFactory.create("product")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")}},methods:{formatDate(e){let t=new Date(e);return t.getDate()+"."+t.getMonth()+"."+t.getFullYear()},openContractModal(){this.userAuthorised?(this.showContractModal=!0,this.getCountProductsFromBfChannels()):this.showLoginModal=!0},closeLoginModal(){this.showLoginModal=!1,this.$emit("refreshContractData")},openContractAgbModal(){this.showContractAgbModal=!0,this.checkCurrentLocale()},openContractCancelModal(){this.showContractCancelModal=!0},openPermissionModal(){this.onCloseContractModal(),this.showPermissions=!0},closePermissionsModal(e){"subProcessor"===e?this.openSubProcessorModal():this.openContractModal(),this.showPermissions=!1},openSubProcessorModal(){this.onCloseContractModal(),this.showSubProcessor=!0},closeSubProcessorModal(){this.openContractModal(),this.showSubProcessor=!1},onCloseContractModal(){this.showContractModal=!1},onCloseContractAgbModal(){this.showContractAgbModal=!1,this.clearCheckboxes()},onCloseContractCancelModal(){this.showContractCancelModal=!1,this.clearCheckboxes()},clearCheckboxes(){this.confirmedAgb=!1,this.confirmedPayment=!1,this.showPermissions=!1,this.showSubProcessor=!1},onRemoveContract(){this.bfContractService.cancelContract(this.currentContract.identifier).then((()=>{this.createNotificationSuccess({title:this.$tc("bf-sales-channel.contractModal.notification.title"),message:this.$tc("bf-sales-channel.contractModal.notification.canceledMessage")}),this.$emit("onCancelContract"),this.clearCheckboxes(),this.onCloseContractCancelModal()})).catch((e=>{this.handleSbpError(e)}))},showAgbDialog(e,t){if(this.selectedContract=e,this.onCloseContractModal(),"change"===t)this.setNewContract();else{let t=!0;this.totalProductsByChannel.forEach(((e,n)=>{e.productsCount>0&&(t=!1)})),t?this.openContractCancelModal():this.createNotificationError({title:this.$tc("bf-sales-channel.contractModal.notification.errorTitle"),message:this.$tc("bf-sales-channel.contractModal.notification.errorTooMuchProductsAssigned",e,{contractName:e.name})})}},setNewContract(){let e=this.selectedContract.items[0].limit;e>0&&this.totalProductsByChannel.forEach(((t,n)=>{if(t.productsCount>e)return this.createNotificationError({title:this.$tc("bf-sales-channel.contractModal.notification.errorTitle"),message:this.$tc("bf-sales-channel.contractModal.notification.errorSkuLimitAchieved",e,{limit:e,name:t.name})}),void this.clearCheckboxes()})),this.bfContractService.setContract(this.selectedContract.name).then((e=>{this.createNotificationSuccess({title:this.$tc("bf-sales-channel.contractModal.notification.title"),message:this.$tc("bf-sales-channel.contractModal.notification.changedMessage")});let t=e.data;this.bfContractService.setUserShopId(t.customerIdentifier).then((()=>{this.$emit("onSetNewContract",t)})),this.clearCheckboxes()})).catch((e=>{this.handleSbpError(e)}))},checkCurrentLocale(){let e=localStorage.getItem("sw-admin-locale");null!==e&&(this.currentLocale=e.split("-")[0])},getCountProductsFromBfChannels(){const e=new nt;e.addAssociation("type"),this.salesChannelRepository.search(e,Shopware.Context.api).then((e=>{e.forEach(((e,t)=>{"brickfox GmbH"===e.type.manufacturer&&this.getProductsBySalesChannel(e)}))})).catch((e=>{console.log(e)}))},getProductsBySalesChannel(e){const t=new nt;t.addFilter(nt.equals("product.parentId",null)),t.addFilter(nt.equals("product.visibilities.salesChannelId",e.id)),this.productRepository.search(t,Shopware.Context.api).then((t=>{this.totalProductsByChannel.push({name:e.name,productsCount:t.total})})).catch((e=>{console.log(e)}))}}});n("a2BO");var at=n("yR1B"),st=n.n(at);n("sOAc");const{Component:it,Mixin:ot}=Shopware;it.register("bf-plugin-configuration",{template:st.a,inject:["bfPluginConfigurationService"],mixins:[ot.getByName("notification")],props:{isLoading:{type:Boolean,default:!1}},data:()=>({currentLocale:"en"}),computed:{},methods:{repairIntegrationUser(){this.isLoading=!0,this.bfPluginConfigurationService.repairIntegrationUser().then((()=>{this.isLoading=!1,this.createNotificationSuccess({title:this.$tc("bf-plugin-configuration.integration.dialogue.successTitle"),message:this.$tc("bf-plugin-configuration.integration.dialogue.successMessage")})})).catch((e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("bf-plugin-configuration.integration.dialogue.errorTitle"),message:this.$tc("bf-plugin-configuration.integration.dialogue.errorMessage")})}))}}});var rt=n("Qy8E"),lt=n.n(rt),ct=n("Tt8L");n("+wWx");const{Component:dt}=Shopware;dt.register("bf-bookable-contracts",{template:lt.a,props:{bookableContracts:{type:Array,required:!0},currentContract:{type:Object,required:!0}},data:()=>({tableData:[],acceptTermsAndConditions:!1,acceptSubProcessor:!1}),created(){this.prepareTableContractsData()},methods:{openTermsAndConditions(){window.open(this.$tc("bf-sales-channel.contractModal.table.contractTermsAndConditionsLink"),"_blank")},openPermissionModal(){this.$emit("openPermissionModal")},openSubProcessorModal(){this.$emit("openSubProcessorModal")},prepareTableContractsData(){this.tableData.push(this.feelContractFees(),this.feelContractTransactions(),this.feelContractLimits());for(let e in ct)ct.hasOwnProperty(e)&&this.tableData.push(this.feelContractCheckMarksRow(ct[e]))},feelContractFees(){let e=[this.$tc("bf-sales-channel.contractModal.table.feeLabel"),this.$tc("bf-sales-channel.contractModal.table.feeHelpText")];return this.bookableContracts.forEach((t=>{let n=new Intl.NumberFormat("de-DE",{style:"currency",currency:"EUR"}).format(t.items[0].price);e.push(n)})),e},feelContractTransactions(){let e=[this.$tc("bf-sales-channel.contractModal.table.transactionsLabel"),this.$tc("bf-sales-channel.contractModal.table.transactionsHelpText")];return this.bookableContracts.forEach((t=>{e.push(t.items[0].included+"")})),e},feelContractLimits(){let e=[this.$tc("bf-sales-channel.contractModal.table.limitsLabel"),this.$tc("bf-sales-channel.contractModal.table.limitsHelpText")];return this.bookableContracts.forEach((t=>{let n=t.items[0].limit;n<0&&(n=this.$tc("bf-sales-channel.contractModal.table.withoutLimitText")),e.push(n+"")})),e},feelContractCheckMarksRow(e){let t=[this.$tc("bf-sales-channel.contractModal.table."+e[0]),this.$tc("bf-sales-channel.contractModal.table."+e[1])],n=2;return this.bookableContracts.forEach((()=>{t.push(e[n]),n++})),t}}});var ht=n("bPmL"),pt=n.n(ht);const{Component:ut}=Shopware;ut.register("bf-bookable-contracts-permissions",{template:pt.a,methods:{closePermissionModal(){this.$emit("go-to-sub-processor","subProcessor")}}});var mt=n("akOo"),gt=n.n(mt);n("InPZ");const{Component:bt}=Shopware;bt.register("bf-bookable-contracts-sub-processor",{template:gt.a,props:{subProcessorData:{type:String,required:!0,default:""}}});var ft=n("MZ2d"),yt=n.n(ft);const{Component:_t}=Shopware;_t.register("bf-sales-channel-amazon-fba-prime-shipping-methods",{template:yt.a,inject:["BfSalesChannelService"],props:{clientExists:{type:Boolean,required:!0},clientInProgress:{type:Boolean,required:!0},currentContractName:{type:String,default:""},isSalesChannelAmazon:!1,salesChannel:null},data:()=>({isLoading:!0,shippingMethods:[],amazonFbaPrimeShippingMethods:{fba:{shippingMethodId:null,code:""},prime:{shippingMethodId:null,code:""},primeNextDay:{shippingMethodId:null,code:""},primeSecondDay:{shippingMethodId:null,code:""}}}),watch:{salesChannel:function(e,t){null===t&&null!==e&&"amazon"===this.$route.meta.$module.getSalesChannelByTypeId(e.typeId)&&this.loadComponent()},"salesChannel.shippingMethods":function(e,t){null!==e&&null!==t&&void 0!==e&&void 0!==t&&t.getIds().length!==e.getIds().length&&this.loadComponent()}},computed:{isDisabled(){return!this.clientExists||this.clientInProgress||""===this.currentContractName||"SwagMarketsStarter"===this.currentContractName}},methods:{changedItem(e,t){let n=this.salesChannel.shippingMethods.get(e[0]);null!=n&&(this.salesChannel.amazonFbaPrimeShippingMethods[t]={name:n.name,shippingMethodId:n.id,code:n.name+" ##"+n.id+"##"})},sleep:e=>new Promise((t=>setTimeout(t,e))),async loadComponent(){let e=this,t=await this.BfSalesChannelService.getBfConfigSwagMarketsSystem(),n=this.salesChannel.shippingMethods.get(this.salesChannel.shippingMethodId);await this.sleep(1500),this.shippingMethods=[],this.salesChannel.shippingMethods.getIds().length>0&&this.salesChannel.shippingMethods.getIds().forEach((function(t){let n=e.salesChannel.shippingMethods.get(t);e.shippingMethods.push({label:n.name,value:n.id,disabled:!1})})),this.amazonFbaPrimeShippingMethods=t.amazonFbaPrimeShippingMethods,null!==n&&this.setDefaultShippingData(n),this.salesChannel.amazonFbaPrimeShippingMethods=this.amazonFbaPrimeShippingMethods,this.isLoading=!1},setDefaultShippingData(e){let t=e.id,n=e.name+" ##"+e.id+"##";null!==this.amazonFbaPrimeShippingMethods.fba.shippingMethodId&&!1!==this.salesChannel.shippingMethods.getIds().includes(this.amazonFbaPrimeShippingMethods.fba.shippingMethodId)||(this.amazonFbaPrimeShippingMethods.fba.shippingMethodId=t,this.amazonFbaPrimeShippingMethods.fba.code=n),null!==this.amazonFbaPrimeShippingMethods.prime.shippingMethodId&&!1!==this.salesChannel.shippingMethods.getIds().includes(this.amazonFbaPrimeShippingMethods.prime.shippingMethodId)||(this.amazonFbaPrimeShippingMethods.prime.shippingMethodId=t,this.amazonFbaPrimeShippingMethods.prime.code=n),null!==this.amazonFbaPrimeShippingMethods.primeNextDay.shippingMethodId&&!1!==this.salesChannel.shippingMethods.getIds().includes(this.amazonFbaPrimeShippingMethods.primeNextDay.shippingMethodId)||(this.amazonFbaPrimeShippingMethods.primeNextDay.shippingMethodId=t,this.amazonFbaPrimeShippingMethods.primeNextDay.code=n),null!==this.amazonFbaPrimeShippingMethods.primeSecondDay.shippingMethodId&&!1!==this.salesChannel.shippingMethods.getIds().includes(this.amazonFbaPrimeShippingMethods.primeSecondDay.shippingMethodId)||(this.amazonFbaPrimeShippingMethods.primeSecondDay.shippingMethodId=t,this.amazonFbaPrimeShippingMethods.primeSecondDay.code=n)}},created(){null!==this.salesChannel&&this.salesChannel._isNew||this.loadComponent()},beforeCreate(){this.isLoading=!0}});var wt=n("08qX"),Ct=n.n(wt);const{Component:kt}=Shopware;kt.register("bf-sales-channel-amazon-extended-configuration",{template:Ct.a,inject:["BfSalesChannelService"],props:{clientExists:{type:Boolean,required:!0},clientInProgress:{type:Boolean,required:!0},currentContractName:{type:String,default:""},salesChannel:null,isSalesChannelAmazon:!1},data(){return{dangerousGoods:[{label:"Ghs",value:"ghs"},{label:"Storage",value:"storage"},{label:"Waste",value:"waste"},{label:"Not applicable",value:"not_applicable"},{label:"Transportation",value:"transportation"},{label:"Other",value:"other"},{label:"Unknown",value:"unknown"}],dangerousGoodsItem:"",needsBattery:[{label:this.$tc("global.yes"),value:"1"},{label:this.$tc("global.no"),value:"0"}],needsBatteryItem:"",enableFba:!1,isLoading:!0}},watch:{salesChannel:function(e,t){null===t&&null!==e&&"amazon"===this.$route.meta.$module.getSalesChannelByTypeId(e.typeId)&&this.loadComponent()}},computed:{isDisabled(){return!this.clientExists||this.clientInProgress||""===this.currentContractName||"SwagMarketsStarter"===this.currentContractName}},methods:{async loadComponent(){await this.BfSalesChannelService.getShopsConfigurations().then((e=>{if(200===e.status&&!0===e.data.success){let t=e.data.data;t.hasOwnProperty("AMAZON_ARE_BATTERIES_REQUIRED")&&(this.needsBatteryItem=t.AMAZON_ARE_BATTERIES_REQUIRED),t.hasOwnProperty("AMAZON_DANGEROUS_GOODS_DEFAULT")&&(this.dangerousGoodsItem=t.AMAZON_DANGEROUS_GOODS_DEFAULT)}this.enableFba=this.salesChannel.enableFba,this.salesChannel.needsBatteryItem=this.needsBatteryItem,this.salesChannel.dangerousGoodsItem=this.dangerousGoodsItem})),this.isLoading=!1},changedBattery(e){this.needsBatteryItem=e,this.salesChannel.needsBatteryItem=this.needsBatteryItem},changedDangerousGoods(e){this.dangerousGoodsItem=e,this.salesChannel.dangerousGoodsItem=this.dangerousGoodsItem},changedEnableFba(e){this.enableFba=e,this.salesChannel.enableFba=this.enableFba}},created(){null!==this.salesChannel&&this.salesChannel._isNew||this.loadComponent()},beforeCreate(){this.isLoading=!0}});var St=n("BiAB"),vt=n.n(St);const{Component:Pt}=Shopware;Pt.register("bf-sales-channel-ebay-extended-configuration",{template:vt.a,props:{clientExists:{type:Boolean,required:!0},clientInProgress:{type:Boolean,required:!0},currentContractName:{type:String,default:""},salesChannel:null,isSalesChannelEbay:!1},data:()=>({isLoading:!0}),computed:{isDisabled(){return!this.clientExists||this.clientInProgress||""===this.currentContractName||"SwagMarketsStarter"===this.currentContractName}},created(){null!==this.salesChannel&&(this.isLoading=!1)},beforeCreate(){this.isLoading=!0}});var At=n("4kWp"),Mt=n.n(At);n("tFz5");const{Component:It,Mixin:Tt}=Shopware;It.register("bf-sales-channel-ebay-best-offer",{template:Mt.a,mixins:[Tt.getByName("notification")],props:{isGeneralPage:!1,clientExists:{type:Boolean,required:!0},clientInProgress:{type:Boolean,required:!0},currentContractName:{type:String,required:!0,default:""},ebayBestOfferActive:{type:Boolean,required:!0,default:!1},ebayBestOfferAbsolute:{type:Number,required:!0,default:0},ebayBestOfferRelative:{type:Number,required:!0,default:0},ebayBestOfferAutoAccept:{type:Boolean,required:!0,default:!1},ebayBestOfferAbsoluteAutoAccept:{type:Number,required:!0,default:0},ebayBestOfferRelativeAutoAccept:{type:Number,required:!0,default:0},ebayBestOfferFix:{type:Boolean,required:!0,default:!1}},computed:{isDisabled(){return!this.clientExists||this.clientInProgress||""===this.currentContractName||"SwagMarketsStarter"===this.currentContractName}},methods:{changeInput(e,t){"ebayBestOfferAbsoluteAutoAccept"===e&&t<this.ebayBestOfferAbsolute?(this.showErrorNotification("absoluteAutoAcceptMessage"),t=this.ebayBestOfferAbsolute):"ebayBestOfferRelativeAutoAccept"===e&&t<this.ebayBestOfferRelative?(this.showErrorNotification("relativeAutoAcceptMessage"),t=this.ebayBestOfferRelative):"ebayBestOfferAbsolute"===e&&t>this.ebayBestOfferAbsoluteAutoAccept?(this.showErrorNotification("absoluteAutoAcceptMessage"),t=this.ebayBestOfferAbsoluteAutoAccept):"ebayBestOfferRelative"===e&&t>this.ebayBestOfferRelativeAutoAccept&&(this.showErrorNotification("relativeAutoAcceptMessage"),t=this.ebayBestOfferRelativeAutoAccept),this.$emit("change",e,t)},showErrorNotification(e){this.createNotificationError({title:this.$tc("bf-ebay-best-offer.notification.error.title"),message:this.$tc("bf-ebay-best-offer.notification.error."+e)})}}});var xt=n("T9M+"),Et=n.n(xt);const{Component:Bt,Mixin:zt}=Shopware;Bt.register("bf-sales-channel-defaults-select-only",{template:Et.a,mixins:[zt.getByName("notification")],props:{salesChannel:{type:Object,required:!1,default:null},propertyName:{type:String,required:!0},propertyLabel:{type:String,required:!0},defaultPropertyName:{type:String,required:!0},defaultPropertyLabel:{type:String,required:!0},propertyNameInDomain:{type:String,required:!1,default:null},helpText:{type:String,required:!1,default:null},disabled:{type:Boolean,required:!1,default:!1}},computed:{propertyCollection:{get(){return this.salesChannel?this.salesChannel[this.propertyName]:[]},set(e){this.salesChannel&&(this.salesChannel[this.propertyName]=e)}},defaultId:{get(){return this.salesChannel?this.salesChannel[this.defaultPropertyName]:null},set(e){this.salesChannel&&(this.salesChannel[this.defaultPropertyName]=e)}},propertyEntityName(){return this.propertyCollection?this.propertyCollection.entity:null},propertyNameKebabCase(){return Shopware.Utils.string.kebabCase(this.propertyName)},multiSelectClass(){return`sw-sales-channel-detail__select-${this.propertyNameKebabCase}`},singleSelectClass(){return`sw-sales-channel-detail__assign-${this.propertyNameKebabCase}`},defaultsValueError(){return Shopware.State.getters["error/getApiError"](this.salesChannel,this.defaultPropertyName)}},methods:{updateCollection(e){e.length>this.propertyCollection.length?this.addItem(e):this.removeItem(e)},getNotInCollection:(e,t)=>e.find((e=>!t.some((t=>t.id===e.id))))||null,addItem(e){const t=this.getNotInCollection(e,this.propertyCollection);this.propertyCollection=e,1===this.propertyCollection.length&&(this.defaultId=t.id)},removeItem(e){const t=this.getNotInCollection(this.propertyCollection,e);if(null!==t){if(this.propertyNameInDomain){const e=this.getDomainUsingValue(t);if(null!==e)return void this.createNotificationError({message:this.$tc("sw-sales-channel.sw-sales-channel-defaults-select.messageError",0,{url:e.url})})}this.propertyCollection=e,this.defaultId===t.id&&(this.defaultId=null)}},getDomainUsingValue(e){return this.salesChannel.domains.find((t=>t[this.propertyNameInDomain]===e.id))||null},updateDefault(e,t){this.propertyCollection.getIds().forEach((e=>{this.propertyCollection.remove(e)})),this.defaultId=e,e&&!this.propertyCollection.has(e)&&this.propertyCollection.add(t)}}});var Dt=n("PP92"),$t=n.n(Dt);const{Component:Lt,Mixin:Nt,Context:Ft,Defaults:Ot}=Shopware,{Criteria:Rt}=Shopware.Data,{mapGetters:Ht,mapMutations:Ut}=Shopware.Component.getComponentHelper();Lt.register("bf-sales-channel-detail",{template:$t.a,inject:["repositoryFactory","bfPropertyService","BfSalesChannelService","BfAmazonService","BfEbayService","BfCategoryService"],mixins:[Nt.getByName("notification"),Nt.getByName("placeholder")],shortcuts:{"SYSTEMKEY+S":"onSave"},data:()=>({clientExists:!1,clientInProgress:!1,salesChannel:null,isLoading:!1,customFieldSets:[],isSaveSuccessful:!1,shippingPolicy:{profileId:null,isDirty:!1},paymentPolicy:{profileId:null,isDirty:!1},returnPolicy:{profileId:null,isDirty:!1},salesChannelType:null}),metaInfo(){return{title:this.$createTitle(this.identifier)}},...Ut(["setCategoriesMappingStorage"]),...Ht("bfCategoryMapping",["getCategoriesMappingStorage"]),computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},toolTipSave(){return{message:`${this.$device.getSystemKey()} + S`,appearance:"light"}}},created(){this.createdComponent(),this.checkClientState()},watch:{"$route.params.id"(){this.createdComponent()}},methods:{checkClientState(){this.BfSalesChannelService.checkClientState().then((e=>{this.clientExists=e.clientExists,this.clientInProgress=e.clientInProgress}))},createdComponent(){this.loadEntityData()},loadEntityData(){this.$route.params.id&&(this.$route.params.typeId||(this.salesChannel&&(this.salesChannel=null),this.loadSalesChannel()))},loadSalesChannel(){this.isLoading=!0,this.salesChannelRepository.get(this.$route.params.id,Ft.api,this.getLoadSalesChannelCriteria()).then((e=>{this.salesChannel=e,this.salesChannel.maintenanceIpWhitelist||(this.salesChannel.maintenanceIpWhitelist=[]),this.salesChannelType=this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId),this.BfSalesChannelService.setSalesChannelType(this.salesChannelType),this.loadShopsConfigurations(),this.loadErpSystemsConfiguration(),this.isLoading=!1,this.storeApiVersion(),this.setUseAdminApi()}))},getLoadSalesChannelCriteria(){const e=new Rt;return e.addAssociation("paymentMethods"),e.addAssociation("shippingMethods"),e.addAssociation("countries"),e.addAssociation("currencies"),e.addAssociation("languages"),e.addAssociation("marketplaces"),e.addAssociation("domains.language"),e.addAssociation("domains.snippetSet"),e.addAssociation("domains.currency"),e},async loadShopsConfigurations(){await this.BfSalesChannelService.getShopsConfigurations().then((e=>{let t=e.data.data;this.salesChannel=this.BfSalesChannelService.buildShopsConfigurations(this.salesChannel,t)})).catch((e=>{this.isLoading=!1}))},async loadErpSystemsConfiguration(){await this.BfSalesChannelService.getErpSystemsConfiguration().then((e=>{let t=e.data.data,n={};t.forEach((function(e){n[e.configurationKey]=e.configurationValue})),this.salesChannel.useNetPrice=!!n.hasOwnProperty("USE_NET_PRICE")&&"1"===n.USE_NET_PRICE}))},saveFinish(){this.isSaveSuccessful=!1},async onSave(){this.isLoading=!0,this.isSaveSuccessful=!1,this.salesChannel._isNew||"ebay"!==this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)||this.createEbaySalesChannelIsValid()?(this.salesChannel._isNew?(await this.createDomainForSalesChannel(this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)),"amazon"===this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)?(this.salesChannel.paymentMethodId=this.getPaymentMethodIdForAmazon(),this.salesChannel.paymentMethods.push(await this.getPaymentMethodForAmazon())):(this.salesChannel.paymentMethodId=this.getPaymentMethodIdForEbay(),this.salesChannel.paymentMethods.push(await this.getPaymentMethodForEbay()))):("ebay"===this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)?(await this.storeEbayPolicies(),await this.storeEbaySpecificShopsConfigurations()):"amazon"===this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)&&this.storeAmazonSpecificShopsConfigurations().catch((e=>{})),await this.storeCurrencies(),await this.storeLanguages(),await this.storeErpSystemsConfiguration(),await this.storeSegmentMapping(),await this.storeCategoriesMapping()),this.saveSalesChannelData()):this.isLoading=!1},saveSalesChannelData(){this.salesChannelRepository.save(this.salesChannel,Ft.api).then((()=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.salesChannel._isNew||("amazon"===this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)&&this.BfSalesChannelService.updateBfConfigSwagMarketsSystem({shops:{amazon:{processing_time:this.salesChannel.processingTime}}}),!0===this.salesChannel.active?this.BfSalesChannelService.activateDeactivateSalesChannelCronJobs(!0):this.BfSalesChannelService.activateDeactivateSalesChannelCronJobs(!1),this.activateDeactivateFbaOrdersCron()),this.salesChannel.marketplaceId&&(this.BfSalesChannelService.setSalesChannelType(this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)),this.BfSalesChannelService.updateMarketplaceConfiguration({marketplace_id:this.salesChannel.marketplaceId})),this.BfSalesChannelService.storeSalesChannelLanguage(this.salesChannel),this.BfSalesChannelService.storeSalesChannelCountry(this.salesChannel),this.BfSalesChannelService.storeSalesChannelCurrency(this.salesChannel),this.$root.$emit("sales-channel-change"),this.loadEntityData()})).catch((e=>{if(this.isLoading=!1,e.response&&1===e.response.data.errors.length){if(999===e.response.data.errors[0].code){const e=this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId);this.createNotificationError({title:this.$tc("global.titleSaveError"),message:this.$tc("bf-sales-channel.create.duplicateSalesChannel",0,{type:e||this.placeholder(this.salesChannel,"name")})})}}else this.createNotificationError({title:this.$tc("global.titleSaveError"),message:this.$tc("sw-sales-channel.detail.messageSaveError",0,{name:this.salesChannel.name||this.placeholder(this.salesChannel,"name")})})}))},async createDomainForSalesChannel(e){let t=null,n=null,a=null;if(1===this.salesChannel.domains.length&&this.salesChannel.domains.pop(),this.salesChannel.currencyId&&this.salesChannel.languageId){let s=new Rt(1,1);await this.repositoryFactory.create("snippet_set").search(s,Ft.api).then((e=>{t=e.first()})),s.addFilter(Rt.equals("id",this.salesChannel.currencyId)),await this.repositoryFactory.create("currency").search(s,Ft.api).then((e=>{n=e.first()})),s=new Rt(1,1),s.addFilter(Rt.equals("id",this.salesChannel.languageId)),await this.repositoryFactory.create("language").search(s,Ft.api).then((e=>{a=e.first()}));const i=this.repositoryFactory.create("sales_channel_domain").create(Ft.api);i.url="https://"+e+"."+location.hostname,i.language=a,i.languageId=a.id,i.currency=n,i.currencyId=n.id,i.snippetSet=t,i.snippetSetId=t.id,i.hreflangUseOnlyLocale=!1,i._isNew=!0,this.salesChannel.domains.add(i)}},createEbaySalesChannelIsValid(){return 0!==this.salesChannel.paymentMethods.length||(this.createNotificationError({title:this.$tc("global.titleSaveError"),message:this.$tc("ebay.paymentMethodError")}),!1)},async activateDeactivateFbaOrdersCron(){"amazon"===this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)&&await this.BfAmazonService.activateDeactivateFbaOrdersCron(this.BfSalesChannelService,this.salesChannel)},abortOnLanguageChange(){return this.salesChannelRepository.hasChanges(this.salesChannel)},saveOnLanguageChange(){return this.onSave()},onChangeLanguage(){this.loadEntityData()},setPolicy(e,t){this[e].profileId=t,this[e].isDirty=!0,null!==t&&t.length>0&&(this.salesChannel[e]=!0)},storeEbayPolicies(){this.BfEbayService.storeEbayPolicies(this.BfSalesChannelService,this.shippingPolicy,this.paymentPolicy,this.returnPolicy)},async storeAmazonSpecificShopsConfigurations(){await this.BfAmazonService.storeErpSystemMatchingData(this.BfSalesChannelService,this.salesChannel,!0).then((()=>{})),await this.BfAmazonService.storeShopsConfigurationData(this.BfSalesChannelService,this.salesChannel)},async storeEbaySpecificShopsConfigurations(){await this.BfEbayService.storeShopsConfigurationData(this.BfSalesChannelService,this.salesChannel).then((e=>{!e.mailIsValid&&this.ebayNotifications(this.$tc("error.notification.title"),this.$tc("error.ebay.ebayInvalidPayPalMailAddress")),!e.logoUrlIsValid&&this.ebayNotifications(this.$tc("error.notification.title"),this.$tc("error.ebay.ebayInvalidLogoUrl"))})),await this.BfEbayService.storeErpSystemMatchingData(this.BfSalesChannelService,this.salesChannel,!0)},async storeCurrencies(){await this.BfSalesChannelService.storeErpSystemsConfigurationCurrenciesMatching(await this.BfSalesChannelService.getSelectedCurrencyEntity(this.salesChannel.currencyId),!0)},async storeLanguages(){await this.BfSalesChannelService.storeErpSystemsConfigurationLanguagesMatching(await this.BfSalesChannelService.getSelectedLanguagesEntity(this.salesChannel.languageId),!0)},async storeErpSystemsConfiguration(){await this.BfSalesChannelService.storeErpSystemsConfiguration({USE_NET_PRICE:!0===this.salesChannel.useNetPrice?"1":"0"})},async storeApiVersion(){await this.BfSalesChannelService.storeApiVersion()},async setUseAdminApi(){await this.BfSalesChannelService.storeUseAdminApi()},async storeSegmentMapping(){let e=JSON.parse(localStorage.getItem("productSegment"));null!==e&&"null"!==e&&this.BfCategoryService.storeCategorySegmentMapping(e).then((e=>{this.createNotificationSuccess({title:this.$tc("bf-category-segment-mapping.notification.title"),message:this.$tc("bf-category-segment-mapping.notification.messageSuccess")}),localStorage.setItem("productSegment",null),this.isLoading=!1})).catch((e=>{console.log(e),this.createNotificationError({title:this.$tc("bf-category-segment-mapping.notification.title"),message:this.$tc("bf-category-segment-mapping.notification.messageError")}),this.isLoading=!1}))},ebayNotifications(e="",t=""){this.createNotificationError({title:e,message:t})},async getPaymentMethodForAmazon(){return await this.BfSalesChannelService.getSelectedPaymentMethodEntity(this.salesChannel.paymentMethodId)},async getPaymentMethodForEbay(){return await this.BfSalesChannelService.getSelectedPaymentMethodEntity(this.salesChannel.paymentMethodId)},getPaymentMethodIdForAmazon:()=>"ea606c4e4752dd3edd06ee8641e5ef4a",getPaymentMethodIdForEbay:()=>"05d8e3bdac2b4ed7939bf3f8bfd0b94d"}});var Vt=n("XTtD"),Gt=n.n(Vt),qt=(n("cKbu"),n("npkz")),Kt=n.n(qt);const{Component:jt}=Shopware;jt.register("bf-sales-channel-ebay-policy",{template:Kt.a,inject:["BfSalesChannelService"],props:{salesChannel:null,clientRdy:!1},data:()=>({showPolicies:!1,shippingPolicy:{shippingPolicies:[{label:"",value:""}],shippingPoliciesIsLoading:!1,selectedShippingPolicy:null},paymentPolicy:{paymentPolicies:[{label:"",value:""}],paymentPoliciesIsLoading:!1,selectedPaymentPolicy:null},returnPolicy:{returnPolicies:[{label:"",value:""}],returnPoliciesIsLoading:!1,selectedReturnPolicy:null},errorLoadingPolicies:!1}),watch:{salesChannel:function(e,t){null===t&&null!==e&&"ebay"===this.$route.meta.$module.getSalesChannelByTypeId(e.typeId)&&(this.showPolicies=!0)},clientRdy:function(e){!0===e&&null!==this.salesChannel&&"ebay"===this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)&&(this.loadPolicies(),this.loadData())},"shippingPolicy.selectedShippingPolicy":function(e){this.$emit("setPolicy","shippingPolicy",e)},"paymentPolicy.selectedPaymentPolicy":function(e){this.$emit("setPolicy","paymentPolicy",e)},"returnPolicy.selectedReturnPolicy":function(e){this.$emit("setPolicy","returnPolicy",e)}},methods:{loadPolicies(){this.getShippingPolicies(),this.getPaymentPolicies(),this.getReturnPolicies()},async getShippingPolicies(){this.shippingPolicy.shippingPoliciesIsLoading=!0,await this.BfSalesChannelService.getEbayPolicy("shipping").then((e=>{200===e.status&&!0===e.data.success&&e.data.data.length>0&&(this.shippingPolicy.shippingPolicies=this.buildPolicies(e.data.data))})).catch((e=>{this.errorLoadingPolicies=!0})),this.shippingPolicy.shippingPoliciesIsLoading=!1},async getPaymentPolicies(){this.paymentPolicy.paymentPoliciesIsLoading=!0,await this.BfSalesChannelService.getEbayPolicy("payment").then((e=>{200===e.status&&!0===e.data.success&&e.data.data.length>0&&(this.paymentPolicy.paymentPolicies=this.buildPolicies(e.data.data))})).catch((e=>{this.errorLoadingPolicies=!0})),this.paymentPolicy.paymentPoliciesIsLoading=!1},async getReturnPolicies(){this.returnPolicy.returnPoliciesIsLoading=!0,await this.BfSalesChannelService.getEbayPolicy("return").then((e=>{200===e.status&&!0===e.data.success&&e.data.data.length>0&&(this.returnPolicy.returnPolicies=this.buildPolicies(e.data.data))})).catch((e=>{this.errorLoadingPolicies=!0})),this.returnPolicy.returnPoliciesIsLoading=!1},async loadData(){await this.BfSalesChannelService.getShopsConfigurations("ebay").then((e=>{if(200===e.status&&!0===e.data.success){let t=e.data.data;t.hasOwnProperty("SHIPPING_POLICY")&&(this.shippingPolicy.selectedShippingPolicy=t.SHIPPING_POLICY),t.hasOwnProperty("PAYMENT_POLICY")&&(this.paymentPolicy.selectedPaymentPolicy=t.PAYMENT_POLICY),t.hasOwnProperty("RETURN_POLICY")&&(this.returnPolicy.selectedReturnPolicy=t.RETURN_POLICY)}}))},buildPolicies(e){let t=[];return e.forEach((e=>{t.push({label:e.profileName,value:e.profileId})})),t}},created(){null!==this.salesChannel&&"ebay"===this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)&&(this.showPolicies=!0,!0===this.clientRdy&&(this.loadPolicies(),this.loadData()))}});var Wt=n("MVdB"),Zt=n.n(Wt);const{Component:Yt}=Shopware;Yt.register("bf-sales-channel-ebay-token-expires",{template:Zt.a,inject:["BfSalesChannelService","BfConnectionAssistantService"],props:{salesChannel:null,clientRdy:!1},data(){return{showTokenCard:!1,isLoading:!0,oAuthTokenDate:'<span style="color: red">'+this.$tc("bf-sales-channel.detail.ebayExpireTokenOAuthNotAvailable")+"</span>",authTokenDate:'<span style="color: red">'+this.$tc("bf-sales-channel.detail.ebayExpireTokenAuthNotAvailable")+"</span>",errorLoadingTokens:!1,tokenLink:"",oAuthTokenLink:"",errorAuthTokenLink:!1,errorOAuthTokenLink:!1}},watch:{salesChannel:function(e,t){null===t&&null!==e&&"ebay"===this.$route.meta.$module.getSalesChannelByTypeId(e.typeId)&&(this.showTokenCard=!0,this.getEbayTokenLink(),this.getEbayOAuthToken(),this.loadData())}},methods:{async loadData(){await this.BfSalesChannelService.getEbayTokenExpires().then((e=>{if(200===e.status&&!0===e.data.success){let t=e.data.data;t.hasOwnProperty("oauthToken")&&t.oauthToken.tokenExpired.length>0&&(this.oAuthTokenDate='<span style="color: green">'+t.oauthToken.tokenExpired+t.oauthToken.error+"</span>"),t.hasOwnProperty("token")&&t.token.tokenExpired.length>0&&(this.authTokenDate='<span style="color: green">'+t.token.tokenExpired+t.token.error+"</span>")}})).catch((()=>{this.errorLoadingTokens=!0})),this.isLoading=!1},async getEbayTokenLink(){await this.BfConnectionAssistantService.ebayConnectLink().then((e=>{!0===e.data.success&&200===e.status&&(this.tokenLink=decodeURIComponent(e.data.data.irpLink),this.tokenLink=this.tokenLink.replace("mand=","mand%3D"),this.tokenLink=this.tokenLink.replace("&sess=","%26sess%3D"),this.tokenLink=this.tokenLink.replace("&shop=","%26shop%3D"),this.tokenLink=this.tokenLink.replace("&apiKey=","%26apiKey%3D"))})).catch((()=>{this.errorAuthTokenLink=!0}))},authorizeAuthToken(){window.open(this.tokenLink,"_blank")},async getEbayOAuthToken(){await this.BfConnectionAssistantService.ebayOAuthTokenLink().then((e=>{!0===e.data.success&&200===e.status&&(this.oAuthTokenLink=decodeURIComponent(e.data.data.irpLink))})).catch((()=>{this.errorAuthTokenLink=!0}))},authorizeOAuthToken(){window.open(this.oAuthTokenLink,"_blank")}},created(){null!==this.salesChannel&&"ebay"===this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)&&(this.showTokenCard=!0,this.getEbayTokenLink(),this.getEbayOAuthToken(),this.loadData())}});var Xt=n("G8IG"),Qt=n.n(Xt);n("bk2R");const Jt={payPal:13,moneyXferAcceptedInCheckout:2,cashOnPickup:10,cod:3,ebayPayments:61},{Component:en,Context:tn,Mixin:nn}=Shopware,{Criteria:an,EntityCollection:sn}=Shopware.Data;en.extend("bf-sales-channel-ebay-payment-method","sw-sales-channel-defaults-select",{template:Qt.a,inject:["BfSalesChannelService","repositoryFactory"],mixins:[nn.getByName("notification")],props:{clientExists:{type:Boolean,required:!0},clientInProgress:{type:Boolean,required:!0},propertyName:{type:String,required:!0},defaultPropertyName:{type:String,required:!0},salesChannel:{type:Object,required:!0}},data(){return{payments:[{name:this.$tc("bf-sales-channel.detail.ebayPaymentSelectName"),id:"####111111####"}],selectedPayment:{payPal:{id:null},moneyXferAcceptedInCheckout:{id:null},cashOnPickup:{id:null},cod:{id:null},ebayPayments:{id:null}},focusPropName:null,paymentMethodsCreated:!1,paymentMethodObjectCount:0,ebayPayments:[],loadingPaymentMatching:!1}},watch:{salesChannel:function(e,t){null===t&&null!==e&&(this.paymentMethodsCreated=!1,this.loadComponent())}},computed:{paymentMethodRepository(){return this.repositoryFactory.create(this.propertyCollection.entity)},isDisabled(){return!this.clientExists||this.clientInProgress}},methods:{async changedEbayPayment(e,t){let n=this;const a=sn.fromCollection(n.propertyCollection);this.payments.forEach((function(s,i){s.id===e&&(a.remove(n.selectedPayment[t].id),n.removeEbayPaymentData(t),"####111111####"!==s.id&&(n.payments[i].disabled=!0,n.prepareEbayPaymentData(s.name,e,t),a.add(s)),null!==n.selectedPayment[t].id&&n.enableSelectValue(n.selectedPayment[t].id),"####111111####"===e&&(e=null),n.selectedPayment[t].id=e,n.updateCollectionData(a))})),this.salesChannel.ebayPaymentMethods=this.ebayPayments,await this.setNoPaymentMethodMatching()},enableSelectValue(e){let t=this;this.payments.forEach((function(n,a){n.id===e&&(t.payments[a].disabled=!1)}))},async loadComponent(){let e=this;this.loadingPaymentMatching=!0,null!==this.salesChannel&&(this.salesChannel.noPaymentMethodMatching=!0,await this.getPaymentMethods().then((t=>{t.length>0&&!1===this.paymentMethodsCreated&&(this.payments=[{name:this.$tc("bf-sales-channel.detail.ebayPaymentSelectName"),id:"####111111####"}],t.forEach((function(t){e.paymentMethodObjectCount+=1,e.payments.push({name:t.name,id:t.id,disabled:!1})})),this.paymentMethodsCreated=!0,this.loadPaymentMethodsMatching())}))),this.loadingPaymentMatching=!1},async loadPaymentMethodsMatching(){let e=this;await this.BfSalesChannelService.getBfConfigSwagMarketsSystem(!0).then((t=>{null!=t&&t.hasOwnProperty("payment_methods_matching")&&t.payment_methods_matching.length>0&&(this.salesChannel.ebayPaymentMethods=t.payment_methods_matching,this.ebayPayments=t.payment_methods_matching,this.setNoPaymentMethodMatching(),t.payment_methods_matching.forEach((function(t){let n=e.reMapIdToPayment(t.paymentMethodsId);if(null!==n){let a=t.erpPaymentMethodsCode.match(/##(.*?)##/g).map((function(e){return e.replace(/##/g,"")}));e.selectedPayment[n].id=a[0],e.payments.forEach((function(e){e.id===a[0]&&(e.disabled=!0)}))}})))}))},updateCollectionData(e){this.updateCollection(e),this.updateDefaultId(e)},updateDefaultId(e){null===this.defaultId&&(void 0!==e[0]?this.defaultId=e[0].id:this.createNotificationError({title:this.$tc("error.notification.title"),message:this.$tc("bf-sales-channel.detail.noPaymentMethodsSelected")}))},async getPaymentMethods(){return this.paymentMethodRepository.search(new an(1,500),tn.api).then((e=>e))},prepareEbayPaymentData(e,t,n){if(Jt.hasOwnProperty(n))if(this.ebayPayments.length>0){let a=!1;this.ebayPayments.forEach((function(s,i){s.paymentMethodsId===Jt[n]&&(a=!0,s.erpPaymentMethodsCode=e+" ##"+t+"##")})),!1===a&&this.ebayPayments.push({paymentMethodsId:Jt[n],erpPaymentMethodsCode:e+" ##"+t+"##"})}else this.ebayPayments.push({paymentMethodsId:Jt[n],erpPaymentMethodsCode:e+" ##"+t+"##"})},removeEbayPaymentData(e){let t=this;Jt.hasOwnProperty(e)&&this.ebayPayments.length>0&&this.ebayPayments.forEach((function(n,a){n.paymentMethodsId===Jt[e]&&t.ebayPayments.splice(a,1)}))},reMapIdToPayment(e){const t={13:"payPal",2:"moneyXferAcceptedInCheckout",10:"cashOnPickup",3:"cod",61:"ebayPayments"};return t.hasOwnProperty(e)?t[e]:null},async setNoPaymentMethodMatching(){this.salesChannel.noPaymentMethodMatching=0===this.salesChannel.ebayPaymentMethods.length}},created(){null!==this.salesChannel&&this.loadComponent()}});const{Component:on,Mixin:rn,Context:ln,Defaults:cn}=Shopware,{Criteria:dn}=Shopware.Data,{mapPropertyErrors:hn}=on.getComponentHelper();on.register("bf-sales-channel-detail-base",{template:Gt.a,mixins:[rn.getByName("notification"),rn.getByName("placeholder")],inject:["bfPropertyService","salesChannelService","repositoryFactory","BfSalesChannelService","bfContractService","BfAmazonService","BfEbayService"],props:{salesChannel:{required:!0},isLoading:{type:Boolean}},data:()=>({bookableContracts:[],creatingNewSalesChannel:!1,showDeleteModal:!1,defaultSnippetSetId:"71a916e745114d72abafbfdc51cbd9d0",marketplaceSettings:null,isConnected:!1,isSegmentLoading:!1,clientExists:!1,clientInProgress:!1,showNotificationBox:!1,isLoadingBaseData:!0,connectionAssistantRouterLink:{name:""},bfBpUnauthorized:!1,connectionAssistantBtnStartDisabled:!1,intervalId:null,startInterval:!1,isSalesChannelAmazon:!1,isSalesChannelEbay:!1,userAuthorised:!1,currentContract:{},productMigrationRequest:!1,subProcessorData:""}),computed:{currentContractName(){return null===this.currentContract.name||void 0===this.currentContract.name?"":this.currentContract.name},secretAccessKeyFieldType(){return this.showSecretAccessKey?"text":"password"},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},mainNavigationCriteria:()=>new dn(1,10).addFilter(dn.equals("type","page")),async salesChannelType(){const e=new dn;return e.addFilter(dn.equals("id",this.$route.params.id)),await this.salesChannelRepository.search(e,ln.api).then((e=>this.$route.meta.$module.getSalesChannelByTypeId(e.first().typeId)))},maintenanceIpWhitelist:{get(){return this.salesChannel.maintenanceIpWhitelist?this.salesChannel.maintenanceIpWhitelist:[]},set(e){this.salesChannel.maintenanceIpWhitelist=e}},isDomainAware(){return[cn.storefrontSalesChannelTypeId,cn.apiSalesChannelTypeId,"26a9ece25bd14b288b30c3d71e667d2c","7ff39608fed04e4bbcc62710b7223966"].includes(this.salesChannel.typeId)},...hn("salesChannel",["name","customerGroupId","marketplaceId","countryId","currencyId","languageId","shippingMethodId","paymentMethodId","navigationCategoryId"])},watch:{isLoading:function(e){!1===e?(this.checkClientState(),this.getProductMigrationRequestStatus(),this.isLoadingBaseData=e):!0===e&&(this.isLoadingBaseData=!0)},startInterval:function(e){!0===e&&(this.intervalId=setInterval(this.timedClientStateCheck,1e4))},salesChannelType(){Promise.resolve(this.salesChannelType).then((e=>{this.isSalesChannelAmazon="amazon"===e,this.isSalesChannelEbay="ebay"===e}))}},methods:{setCurrentSegment(){let e=this.$refs.segmentDropdown.currentCategorySegment;this.salesChannel.productSegment=e.productSegmentsName,this.salesChannel.productType=e.productTypesName},setSalesChannelAttributeValue(e,t){this.salesChannel[e]=t},getAssignedProductSegmentAndType(){this.isSalesChannelAmazon&&(this.isSegmentLoading=!0,this.$refs.segmentDropdown.setSegment(this.salesChannel,"productSegment","productType")),this.isSegmentLoading=!1},onGenerateKeys(){this.salesChannelService.generateKey().then((e=>{this.salesChannel.accessKey=e.accessKey})).catch((e=>{this.createNotificationError({title:this.$tc("sw-sales-channel.detail.titleAPIError"),message:this.$tc("sw-sales-channel.detail.messageAPIError")})}))},onToggleActive(){this.salesChannel.active||this.salesChannelRepository.get(this.$route.params.id,ln.api).then((e=>{this.salesChannel.active=!1}))},onCloseDeleteModal(){this.showDeleteModal=!1},onConfirmDelete(){this.showDeleteModal=!1,this.$nextTick((()=>{this.deleteSalesChannel(this.salesChannel.id),this.$router.push({name:"sw.dashboard.index"})}))},deleteSalesChannel(e){this.salesChannelRepository.delete(e,ln.api).then((()=>{this.$root.$emit("sales-channel-change")}))},checkClientState(){this.timedClientStateCheck()},timedClientStateCheck(){this.salesChannel._isNew||this.BfSalesChannelService.checkClientState().then((e=>{this.clientExists=e.clientExists,this.clientInProgress=e.clientInProgress,!0===this.clientInProgress?(this.startInterval=!0,this.connectionAssistantBtnStartDisabled=!0):(clearInterval(this.intervalId),this.connectionAssistantBtnStartDisabled=!1,this.sendSystemData(),this.sendErpSystemMatching()),this.BfSalesChannelService.getIsMarketplaceConnected().then((e=>{this.buildConnectionAssistantRouterLink(),this.isConnected=e,this.showNotificationBox=!0,this.isLoadingBaseData=!1})),this.getAssignedProductSegmentAndType()})).catch((e=>{this.isLoadingBaseData=!1,this.bfBpUnauthorized=!0}))},isSalesChannelActivationSwitchEnabled(){if(this.salesChannel){if(this.salesChannel.active)return!0;if(this.isConnected&&this.clientExists&&!this.clientInProgress&&!this.productMigrationRequest)return!this.isSalesChannelEbay||this.salesChannel.shippingPolicy&&this.salesChannel.paymentPolicy&&this.salesChannel.returnPolicy&&!this.salesChannel.noPaymentMethodMatching}return!1},async buildConnectionAssistantRouterLink(){const e=await this.BfSalesChannelService.getSalesChannelType();let t=await this.BfSalesChannelService.getMarketplaceId(e);this.connectionAssistantRouterLink={name:"bf.sales.channel.detail.base."+e+"ConnectionAssistant.start.authorize",params:{marketplaceId:t}}},async sendSystemData(){if(this.salesChannel._isNew)return;const e=await this.BfSalesChannelService.getSalesChannelType();await this.BfSalesChannelService.storeIntegrationUserCredentialsToBf().then((e=>{void 0!==e&&!1!==e&&200===e.status&&!0===e.data.success&&this.BfSalesChannelService.updateBfConfigSwagMarketsSystem({erp_systems:{base_configuration_is_set:!0}})})),await this.BfSalesChannelService.storeSalesChannelDataToBf({API_URL:window.location.origin+"/sales-channel-api/",SHOPWARE_SALES_CHANNEL_ID:this.salesChannel.id,SHOPWARE_SALES_CHANNEL_KEY:this.salesChannel.accessKey,DEFAULT_DELIVERY_TIMES:this.salesChannel.processingTime}).then((t=>{void 0!==t&&!1!==t&&200===t.status&&!0===t.data.success&&this.BfSalesChannelService.updateBfConfigSwagMarketsSystem({shops:{[e]:{base_configuration_is_set:!0}}})}))},async sendErpSystemMatching(){"amazon"===await this.BfSalesChannelService.getSalesChannelType()?await this.BfAmazonService.storeErpSystemMatchingData(this.BfSalesChannelService,this.salesChannel):"ebay"===await this.BfSalesChannelService.getSalesChannelType()&&await this.BfEbayService.storeErpSystemMatchingData(this.BfSalesChannelService,this.salesChannel),await this.BfSalesChannelService.storeErpSystemsConfigurationCurrenciesMatching(await this.BfSalesChannelService.getSelectedCurrencyEntity(this.salesChannel.currencyId)),await this.BfSalesChannelService.storeErpSystemsConfigurationLanguagesMatching(await this.BfSalesChannelService.getSelectedLanguagesEntity(this.salesChannel.languageId))},closeLoginModal(){this.showLoginModal=!1,this.getContract()},handleSbpError(e){if(void 0===e.response)this.userAuthorised=!1;else{let t=e.response.data;this.createNotificationError({title:t.title,message:t.description})}},onSetNewContract(e){this.currentContract=e,this.clientExists=!0},onCancelContract(){this.currentContract={},this.clientExists=!1},getContract(){return this.bfContractService.getUserInformation("user-token").then((e=>null===e.longLifeToken||null===e.shopSecret?(this.userAuthorised=!1,e):this.getContractDetails()))},getProductMigrationRequestStatus(){return this.BfSalesChannelService.setSalesChannelId(this.$route.params.id),this.BfSalesChannelService.getSalesChannelConfiguration().then((e=>{this.productMigrationRequest=e.product_migration_request}))},getContractDetails(){return this.bfContractService.getContracts().then((e=>(null!==e.current&&(this.currentContract=e.current),this.userAuthorised=void 0!==e.bookable,this.bookableContracts=e.bookable,this.subProcessorData=e.subprocessors,e))).catch((e=>{this.handleSbpError(e)}))},setPolicy(e,t){this.$emit("setPolicy",e,t)}},created(){this.BfSalesChannelService.setSalesChannelId(this.$route.params.id),this.getContract(),null!==this.salesChannel&&"bf.sales.channel.create.base"!==this.$route.name?(this.getProductMigrationRequestStatus(),this.checkClientState()):"bf.sales.channel.create.base"===this.$route.name&&(this.creatingNewSalesChannel=!0,this.isLoadingBaseData=!1,Promise.resolve(this.salesChannelType).then((e=>{this.isSalesChannelAmazon="amazon"===e,this.isSalesChannelEbay="ebay"===e})))}});var pn=n("TVv2"),un=n.n(pn);const{Component:mn,StateDeprecated:gn,Context:bn}=Shopware,{Criteria:fn}=Shopware.Data,yn=Shopware.Utils;mn.extend("bf-sales-channel-create","bf-sales-channel-detail",{template:un.a,inject:["repositoryFactory"],data:()=>({navigationCategoryId:null}),beforeRouteEnter(e,t,n){e.name.includes("bf.sales.channel.create")&&!e.params.id&&(e.params.id=yn.createId()),n()},computed:{languageStore:()=>gn.getStore("language"),categoryRepository(){return this.repositoryFactory.create("category")}},methods:{createdComponent(){this.$route.params.typeId&&(Shopware.State.getters["context/isSystemDefaultLanguage"]||Shopware.State.commit("context/resetLanguageToDefault"),this.salesChannel=this.salesChannelRepository.create(bn.api),this.salesChannel.typeId=this.$route.params.typeId,this.salesChannel.type=this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId),this.salesChannel.active=!1,this.getMainCategoryId(),this.$super("createdComponent"))},saveFinish(){this.isSaveSuccessful=!1,this.$router.push({name:"bf.sales.channel.detail",params:{id:this.salesChannel.id}})},onSave(){this.$super("onSave")},getMainCategoryId(){const e=new fn(1,1);e.addFilter(fn.equals("level",1)),this.categoryRepository.search(e,bn.api).then((e=>{this.salesChannel.navigationCategoryId=e.first().id}))}}});var _n=n("kg6g"),wn=n.n(_n);const{Component:Cn}=Shopware,{Criteria:kn}=Shopware.Data;Cn.extend("bf-sales-channel-create-base","bf-sales-channel-detail-base",{template:wn.a,inject:["repositoryFactory","BfSalesChannelService"],data:()=>({marketplaceSettings:null,marketplaces:[],countries:[],currencies:[],languages:[]}),created(){this.createdComponent()},computed:{marketplaceSettingsRepository(){return this.repositoryFactory.create("bf_marketplace_settings")},marketplaceRepository(){return this.repositoryFactory.create("bf_marketplace")},salesChannelType(){return this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)}},methods:{createdComponent(){this.onGenerateKeys();(new kn).addFilter(kn.equals("type",this.salesChannelType)),this.BfSalesChannelService.getMarketplaces(this.salesChannelType).then((e=>{e.forEach((e=>{this.marketplaces.push({value:e.channel_specific_id,label:e.name})}))})).catch((e=>{console.log(e)}))},onUpdateMarketplace(e){},resetAssociationEntities(){this.languages=[],this.currencies=[],this.countries=[]}}});var Sn=n("hcgk"),vn=n.n(Sn);const{Component:Pn}=Shopware;Pn.override("bf-sales-channel-detail",{name:"bf-sales-channel-amazon-fba-prime",template:vn.a,inject:["BfSalesChannelService"],data:()=>({clientExists:!1,clientInProgress:!1,isSalesChannelAmazon:!1}),watch:{salesChannelType(){Promise.resolve(this.salesChannelType).then((e=>{this.isSalesChannelAmazon="amazon"===e}))}},created(){this.BfSalesChannelService.setSalesChannelId(this.$route.params.id),this.checkClientState()},methods:{checkClientState(){null!==this.salesChannel&&this.salesChannel._isNew||this.BfSalesChannelService.checkClientState().then((e=>{this.clientExists=e.clientExists,this.clientInProgress=e.clientInProgress}))}}});var An=n("8LlH"),Mn=n.n(An);const{Component:In,Mixin:Tn,Context:xn}=Shopware,{Criteria:En}=Shopware.Data;In.register("bf-sales-channel-detail-amazon-prime-fba",{template:Mn.a,mixins:[Tn.getByName("notification")],inject:["bfContractService","repositoryFactory","BfSalesChannelService","BfAmazonService"],props:{salesChannel:{required:!0},isLoading:{type:Boolean}},data:()=>({clientExists:!1,clientInProgress:!1,isSalesChannelAmazon:!1,currentContract:{},startInterval:!1,intervalId:null}),computed:{currentContractName(){return null===this.currentContract.name||void 0===this.currentContract.name?"":this.currentContract.name},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},async salesChannelType(){const e=new En;return e.addFilter(En.equals("id",this.$route.params.id)),await this.salesChannelRepository.search(e,xn.api).then((e=>this.$route.meta.$module.getSalesChannelByTypeId(e.first().typeId)))}},watch:{isLoading:function(e){!1===e?(this.checkClientState(),this.isLoadingBaseData=e):!0===e&&(this.isLoadingBaseData=!0)},startInterval:function(e){!0===e&&(this.intervalId=setInterval(this.timedClientStateCheck,1e4))},salesChannelType(){Promise.resolve(this.salesChannelType).then((e=>{this.isSalesChannelAmazon="amazon"===e}))}},methods:{setSalesChannelAttributeValue(e,t){this.salesChannel[e]=t},checkClientState(){this.timedClientStateCheck()},getContractDetails(){return this.bfContractService.getContracts().then((e=>(null!==e.current&&(this.currentContract=e.current),e))).catch((e=>{this.handleSbpError(e)}))},timedClientStateCheck(){this.salesChannel._isNew||this.BfSalesChannelService.checkClientState().then((e=>{this.clientExists=e.clientExists,this.clientInProgress=e.clientInProgress,!0===this.clientInProgress?this.startInterval=!0:(clearInterval(this.intervalId),this.sendSystemData(),this.sendErpSystemMatching())})).catch((e=>{this.isLoadingBaseData=!1}))},async sendSystemData(){if(this.salesChannel._isNew)return;const e=await this.BfSalesChannelService.getSalesChannelType();await this.BfSalesChannelService.storeIntegrationUserCredentialsToBf().then((e=>{void 0!==e&&!1!==e&&200===e.status&&!0===e.data.success&&this.BfSalesChannelService.updateBfConfigSwagMarketsSystem({erp_systems:{base_configuration_is_set:!0}})})),await this.BfSalesChannelService.storeSalesChannelDataToBf({API_URL:window.location.origin+"/sales-channel-api/",SHOPWARE_SALES_CHANNEL_ID:this.salesChannel.id,SHOPWARE_SALES_CHANNEL_KEY:this.salesChannel.accessKey,DEFAULT_DELIVERY_TIMES:this.salesChannel.processingTime}).then((t=>{void 0!==t&&!1!==t&&200===t.status&&!0===t.data.success&&this.BfSalesChannelService.updateBfConfigSwagMarketsSystem({shops:{[e]:{base_configuration_is_set:!0}}})}))},async sendErpSystemMatching(){"amazon"===await this.BfSalesChannelService.getSalesChannelType()&&await this.BfAmazonService.storeErpSystemMatchingData(this.BfSalesChannelService,this.salesChannel),await this.BfSalesChannelService.storeErpSystemsConfigurationCurrenciesMatching(await this.BfSalesChannelService.getSelectedCurrencyEntity(this.salesChannel.currencyId)),await this.BfSalesChannelService.storeErpSystemsConfigurationLanguagesMatching(await this.BfSalesChannelService.getSelectedLanguagesEntity(this.salesChannel.languageId))},handleSbpError(e){if(void 0===e.response)this.userAuthorised=!1;else{let t=e.response.data;this.createNotificationError({title:t.title,message:t.description})}}},created(){this.BfSalesChannelService.setSalesChannelId(this.$route.params.id),null!==this.salesChannel&&"bf.sales.channel.create.base"!==this.$route.name?this.checkClientState():"bf.sales.channel.create.base"===this.$route.name&&(this.isLoadingBaseData=!1)}});var Bn=n("lahC"),zn=n.n(Bn);n("MYV8");const{Component:Dn,Context:$n}=Shopware,{Criteria:Ln}=Shopware.Data,{mapGetters:Nn,mapMutations:Fn}=Shopware.Component.getComponentHelper();Dn.register("bf-sales-channel-category-mapping",{template:zn.a,inject:["repositoryFactory","bfProductApiService","BfSalesChannelService","BfCategoryService"],props:{salesChannelType:{type:String,required:!0},categoriesReloadTriggerEvent:{required:!1}},data:()=>({swCategories:[],categories:[],swCategoriesIds:[],marketplaceCategoriesId:{},marketplaceId:null,channelsId:null,gridItems:[],isLoading:!0,isLoadingMarketplaceCategories:!0,limit:5,page:1,total:0,categoriesMappingStorage:{},shopsCategoriesGroups:{},showModal:!1,toDeleteSwCategoryId:"",showEmptyState:!1}),computed:{categoriesRepository(){return this.repositoryFactory.create("category")},columns(){return this.getColumns()}},watch:{salesChannelType:function(e){e.length>0&&(this.loadMarketplaceId(),this.loadSelectedSwCategories())},categoriesReloadTriggerEvent:function(e,t){this.reset(),this.loadSelectedSwCategories()}},created(){this.BfSalesChannelService.setSalesChannelId(this.$route.params.id)},methods:{...Fn(["setCategoriesMappingStorage"]),...Nn("bfCategoryMapping",["getCategoriesMappingStorage"]),async loadMarketplaceId(){this.marketplaceId=await this.BfSalesChannelService.getMarketplaceId(this.salesChannelType)},async loadSelectedSwCategories(){let e=this;this.isLoading=!0,await this.BfSalesChannelService.getChannelId().then((e=>{this.channelsId=e})),await this.BfCategoryService.getMappedCategories(this.salesChannelType,this.page,this.limit).then((t=>{t&&(e.total=t.totalCount,t.data.some((function(t){if(t.shopsCategoriesGroupsExternShopsCategoriesIds.length>0){let n=t.externGroupsId;t.shopsCategoriesGroupsExternShopsCategoriesIds.forEach((function(t){void 0===e.swCategoriesIds.find((e=>e===n))?(e.swCategoriesIds.push(n),e.marketplaceCategoriesId[n.toString()]=[t.toString()]):e.marketplaceCategoriesId[n.toString()].push(t.toString())}))}})))})),await this.loadShopwareCategories(),this.isLoading=!1},async loadShopwareCategories(){let e=this,t=new Ln(1,this.limit);this.swCategoriesIds.length>0?t.addFilter(Ln.equalsAny("id",this.swCategoriesIds)):t.addFilter(Ln.equals("id","7f52488ee997439ea8e842738cebe5c7")),await this.categoriesRepository.search(t,$n.api).then((t=>{this.swCategories=t,t.length>0&&this.swCategoriesIds.length>0&&t.forEach((async function(t){await e.swSelectionAdd(t,e.marketplaceCategoriesId[t.id.toString()])})),this.sortGridItems()})),0===this.gridItems.length&&(this.showEmptyState=!0)},swSelectionAdd(e,t=[]){if(void 0===this.categoryAlreadyExists(e.id)){let n="",a=1,s=e.breadcrumb.length,i=e.name;e.breadcrumb.forEach((function(e){n+=a<s?e+" / ":e,++a})),this.addToStorage(e.id,t),null===i&&(i=e.translated.name),this.gridItems.push({swCategoriesId:e.id,shopwareCategory:s>1?".../"+i:i,breadCrumb:n,marketplaceCategoriesIds:t}),this.showEmptyState=!1}},categoryAlreadyExists(e){return this.gridItems.find((t=>t.swCategoriesId.toString()===e.toString()))},addToStorage(e,t=[]){let n=this.getCategoriesMappingStorage();n[e.toString()]=t,this.$store.commit("bfCategoryMapping/setCategoriesMappingStorage",n)},showDeleteModal(e){this.toDeleteSwCategoryId=e,this.showModal=!0},closeShowModal(){this.toDeleteSwCategoryId="",this.showModal=!1},removeCategoryAssignment(){let e=this.getCategoriesMappingStorage(),t=0;const n=this;if(this.toDeleteSwCategoryId.length>0){this.gridItems=this.gridItems.filter((function(e){return e.swCategoriesId!==n.toDeleteSwCategoryId})),e[this.toDeleteSwCategoryId]=[],this.$store.commit("bfCategoryMapping/setCategoriesMappingStorage",e);const a=Object.entries(this.getCategoriesMappingStorage());a.forEach((async function(e){++t,await n.BfCategoryService.saveCategoryMapping(e[0],e[1],n.salesChannelType),t===a.length&&(n.reset(),n.loadSelectedSwCategories())})),this.showModal=!1}},pageChange(e){this.page=e.page,this.limit=e.limit,this.reset(),this.loadSelectedSwCategories()},reset(){this.gridItems=[],this.swCategories=[],this.categories=[],this.swCategoriesIds=[],this.marketplaceCategoriesId={},this.$store.commit("bfCategoryMapping/setCategoriesMappingStorage",[])},sortGridItems(){this.gridItems.length>1&&this.gridItems.sort((function(e,t){return e.shopwareCategory>t.shopwareCategory?1:-1}))},getColumns(){return[{property:"shopwareCategory",label:this.$tc("categories.shopware-tree-title"),rawData:!0,height:300},{property:"salesChannelCategories",label:this.createColumnHeaderLabelForMarketplaceColumn(),rawData:!0,height:"300px"}]},createColumnHeaderLabelForMarketplaceColumn(){return"amazon"===this.salesChannelType?this.$tc("categories.amazon-marketplace-title"):this.$tc("categories.ebay-marketplace-title")}}});var On=n("y0X/"),Rn=n.n(On);const{Component:Hn,Context:Un}=Shopware,{EntityCollection:Vn}=Shopware.Data,{mapGetters:Gn,mapMutations:qn}=Shopware.Component.getComponentHelper();Hn.register("bf-grid-column-tree-field",{template:Rn.a,inject:["BfCategoryService"],props:{marketplaceCategories:{type:Object,default:()=>({categories:[],categoryTree:[]})},marketplaceCategoriesIds:{type:Array,default:()=>[]},swCategoryId:{required:!1},channelsId:{required:!0}},data:()=>({isLoadingMarketplaceCategories:!0,categories:[],channelsId:null}),methods:{...qn(["setCategoriesMappingStorage"]),...Gn("bfCategoryMapping",["getCategoriesMappingStorage"]),loadComponent(){this.loadMarketplaceCategoriesData()},loadMarketplaceCategoriesData(){let e=new Vn("/bf-sales-channel","category",Un.api,null,this.categoryCollection),t=[];if(this.marketplaceCategoriesIds.length<=0)return this.marketplaceCategories.categories=e,void(this.isLoadingMarketplaceCategories=!1);this.marketplaceCategoriesIds.forEach((function(e){t.push({external_channels_categories_id:e})})),this.BfCategoryService.findCategoriesById(t,{key:"channels_id",value:this.channelsId}).then((async t=>{await t.forEach((e=>{this.categories.push(e),this.getCategoryTree(e.parent_id).then((()=>{this.categories.length>0&&this.categories.forEach((e=>{this.marketplaceCategories.categoryTree.push(this.toString(e.id))}))}))})),t.forEach((t=>{t.id=this.toString(t.id),e.add({data:t,id:this.toString(t.id),categoryId:t.external_channels_categories_id,name:t.name,translated:{name:t.name},childCount:t.children,parentId:t.parent_id,afterCategoryId:t.parent_id,breadcrumb:t.breadCrumb.split(" > ")})})),this.marketplaceCategories.categories=e})),this.isLoadingMarketplaceCategories=!1},async getCategoryTree(e=null){if(null!=e)return await this.BfCategoryService.getCategoryById(e).then((async e=>(e.id=this.toString(e.id),this.categories.push({data:e,id:this.toString(e.id),categoryId:e.external_channels_categories_id,name:e.name,translated:{name:e.name},childCount:e.children,parentId:this.toString(e.parent_id),afterCategoryId:this.toString(e.parent_id)}),await this.getCategoryTree(e.parent_id),Promise.resolve())))},marketplaceCategorySelectionAdd(e){let t=this.getCategoriesMappingStorage();null!==t&&void 0===t[this.swCategoryId].find((t=>t===e.categoryId))&&(t[this.swCategoryId].push(e.categoryId),this.$store.commit("bfCategoryMapping/setCategoriesMappingStorage",t))},marketplaceCategoriesSelectionRemove(e){let t=this.getCategoriesMappingStorage(),n=null;null!==t&&(n=t[this.swCategoryId].indexOf(e.external_channels_categories_id),-1!==n&&(t[this.swCategoryId].splice(n,1),this.$store.commit("bfCategoryMapping/setCategoriesMappingStorage",t)))},toString:e=>null!==e?e.toString():null},created(){this.loadComponent()}});var Kn=n("lWgC"),jn=n.n(Kn);n("Fonu"),n("C8ME");const{Component:Wn}=Shopware,{sort:Zn}=Shopware.Utils;Wn.extend("bf-sales-channel-category-mapping-tree-field","sw-category-tree-field",{template:jn.a,inject:["BfCategoryService"],props:{marketplaceCategories:{type:Object},parentProperty:{type:String,required:!1,default:"parent_id"}},data:()=>({isLoading:!1,created:0,tagLimit:!0}),watch:{term:{handler(e){0===e.length&&(this.categories=[],this.getTreeItems())}}},computed:{selectedCategoriesPathIds(){return this.categoriesCollection.reduce(((e,t)=>[...e,...this.marketplaceCategories.categoryTree]),[])},visibleTags(){return this.tagLimit?this.categoriesCollection.slice(0,2):this.categoriesCollection}},created(){this.BfCategoryService.setSalesChannelId(this.$route.params.id)},methods:{getTreeItems(e=null){this.BfCategoryService.getCategories(e).then((t=>{if(null===e)return t.forEach((t=>{t.id=t.id.toString(),this.categories.push({data:t,isDeleted:!1,id:t.id,categoryId:t.external_channels_categories_id,translated:{name:t.name},childCount:t.children,parentId:t.parent_id,parentVersionId:t.parent_id,children:[],afterCategoryId:e,afterCategoryVersionId:e,name:t.name,breadCrumb:this.splitBreadCrumb(t.breadCrumb)})})),this.isFetching=!1,Promise.resolve();t.forEach((t=>(this.categories.push({data:t,isDeleted:!1,id:t.id.toString(),categoryId:t.external_channels_categories_id,translated:{name:t.name},childCount:t.children,parentId:t.parent_id.toString(),afterCategoryId:e.toString(),name:t.name,breadcrumb:this.splitBreadCrumb(t.breadCrumb)}),this.isFetching=!1,Promise.resolve())))})).catch((e=>{console.log(e)}))},searchCategories(e){return this.BfCategoryService.findCategoryByName(e).then((e=>(this.categories=[],e.forEach((e=>{e.id=e.id.toString(),this.categories.push({data:e,id:e.id.toString(),categoryId:e.external_channels_categories_id,name:e.name,translated:{name:e.name},childCount:e.children,parentId:e.parent_id,afterCategoryId:e.parent_id,breadcrumb:this.splitBreadCrumb(e.breadCrumb)})})),this.categories)))},splitBreadCrumb:e=>e.split(" > ")}});var Yn=n("8veU"),Xn=n.n(Yn);const{Component:Qn}=Shopware;Qn.override("bf-sales-channel-detail",{name:"bf-sales-channel-product",template:Xn.a});var Jn=n("OLEX"),ea=n.n(Jn);n("tgxC");const{Component:ta,Context:na}=Shopware,{Criteria:aa}=Shopware.Data;ta.register("bf-sales-channel-detail-product-list",{template:ea.a,inject:["BfSalesChannelService","bfContractService","repositoryFactory","bfProductApiService","filterFactory"],metaInfo:()=>({title:"Products"}),props:{filterIsExpanded:{type:Boolean}},data:()=>({products:null,bfProductsErrors:[],dangerZone:!1,warningZone:!1,greenZone:!0,currentContract:{},searchWord:"",shopProductData:[],shopProductsErrors:[],showProductsErrorsModal:!1,salesChannel:null,marketplaceName:"",marketplace:{},sortBy:"productNumber",sortDirection:"DESC",naturalSorting:!0,isLoading:!1,fullPage:!1,channelLimit:1e3,limit:10,license:null,total:0,userAuthorised:!1,showLoginModal:!1,bfFilterCriteria:[],defaultFilters:["active-filter","manufacturer-filter"],storeKey:"bf.product.list",isExpanded:!1,activeFilterNumber:0}),watch:{productCriteria:{handler(){this.getList()},deep:!0}},computed:{columns(){return this.getProductColumns()},productRepository(){return this.repositoryFactory.create("product")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},listFilter(){return this.filterFactory.create("product",{"active-filter":{property:"active",label:this.$tc("sw-product.filters.activeFilter.label"),placeholder:this.$tc("sw-product.filters.activeFilter.placeholder")},"manufacturer-filter":{property:"manufacturer",label:this.$tc("sw-product.filters.manufacturerFilter.label"),placeholder:this.$tc("sw-product.filters.manufacturerFilter.placeholder")}})},productCriteria(){const e=new aa(this.page,this.limit);return this.naturalSorting="productNumber"===this.sortBy,e.addFilter(aa.equals("product.parentId",null)),e.addFilter(aa.equals("product.visibilities.salesChannelId",this.$route.params.id)),e.addSorting(aa.sort(this.sortBy,this.sortDirection,this.naturalSorting)),e.addAssociation("cover"),e.addAssociation("visibilities"),e.addAssociation("categories"),e.addAssociation("manufacturer"),""!==this.searchWord&&(e.setTerm(this.searchWord),e.page=1),this.bfFilterCriteria.forEach((t=>{e.addFilter(t)})),e}},created(){this.bfProductApiService.setSalesChannelId(this.$route.params.id),this.getList(),this.loadSalesChannel()},methods:{closeLoginModal(){this.showLoginModal=!1,this.getContractDetails()},loadMarketplace(){this.isLoading=!0,this.BfSalesChannelService.getMarketplace().then((e=>{this.marketplace=e.data.data,this.isLoading=!1})).catch((e=>{this.isLoading=!1}))},loadSalesChannel(){this.isLoading=!0,this.salesChannelRepository.get(this.$route.params.id,na.api,this.getLoadSalesChannelCriteria()).then((e=>{this.salesChannel=e,this.marketplaceName=this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId),this.loadMarketplace(),this.isLoading=!1}))},getContractDetails(){return this.bfContractService.getContracts().then((e=>(null!==e.current&&(this.currentContract=e.current,this.channelLimit=this.currentContract.items[0].limit,this.channelLimit>0&&(this.dangerZone=this.total>.9*this.channelLimit,this.warningZone=this.total>.6*this.channelLimit,this.greenZone=!this.dangerZone&&!this.warningZone)),this.userAuthorised=void 0!==e.bookable,e))).catch((e=>{this.handleSbpError(e)}))},handleSbpError(e){if(void 0===e.response)this.userAuthorised=!1;else{let t=e.response.data;this.createNotificationError({title:t.title,message:t.description})}},getLoadSalesChannelCriteria(){const e=new aa;return e.addAssociation("marketplaces"),e},async criteriaChanged(e){this.page=1,this.bfFilterCriteria=e},async getList(){this.isLoading=!0;const e=await Shopware.Service("filterService").mergeWithStoredFilters(this.storeKey,this.productCriteria);this.activeFilterNumber=e.filters.length-1,this.productRepository.search(this.productCriteria,Shopware.Context.api).then((e=>{e.getIds().length>0&&this.bfProductApiService.getProductData(e.getIds()).then((t=>{this.getProductErrors(t).then((n=>{!0===t.success&&t.data.forEach((e=>{e.errors=[],!0===n.success&&n.data.length>0&&n.data.forEach((t=>{e.productId===t.shopsProductsData.externProductsId&&e.errors.push(t)})),this.shopProductData[e.productId]=e})),this.total=e.total,this.products=e,this.getContractDetails(),this.isLoading=!1}))})).catch((e=>{console.log(e)}))})).catch((()=>{}))},paginateBf(e){this.page=e.page,this.limit=e.limit,this.getList()},openProductErrorsModal(e){if(this.shopProductsErrors=[],this.shopProductData[e.id]){this.shopProductData[e.id].errors.forEach(((e,t)=>{let n=e.shopsTypesErrorsData.shopsTypesErrorsCode;null===n&&(n="N/A");let a={code:n,description:e.shopsProductsErrorsMessage};this.shopProductsErrors.push(a)}));let t=this.shopProductData[e.id].failedShopsFilter;void 0!==t&&t.length>0&&this.shopProductsErrors.push({code:1,description:this.$tc("products.failedShopsFilter")+t}),""===this.shopProductData[e.id].marketplaceInitialDate&&this.shopProductsErrors.push(this.getProductNotTransferredError(2,"notTransferredProductToMarketplace"))}0===this.shopProductsErrors.length&&this.shopProductsErrors.push(this.getProductNotTransferredError(0,"notTransferredProduct")),this.showProductsErrorsModal=!0},expand(e){this.isExpanded=e},getErrorColumns:()=>[{property:"code",label:"Code",primary:!0,width:"120px"},{property:"description",label:"sw-property.list.columnDescription",width:"auto"}],getProductErrors(e){let t=[];return e.data.length>0&&e.data.forEach((e=>{t.push(e.bfProductId)})),this.bfProductApiService.getProductErrors(t)},getProductNotTransferredError(e,t){return{code:e,description:this.$tc("products."+t)}},getProductColumns(){return[{property:"name",label:this.$tc("products.table-headers.product-name"),allowResize:!0,primary:!0,width:"90px"},{property:"productNumber",label:this.$tc("products.table-headers.product-number"),allowResize:!0,align:"left"},{property:"active",label:this.$tc("products.table-headers.status"),allowResize:!0,align:"center"},{property:"category",label:this.$tc("products.table-headers.category-name"),allowResize:!0,sortable:!1},{property:"online",label:this.$tc("products.table-headers.online-status"),allowResize:!0,align:"center",width:"30px",visible:!0,sortable:!1},{property:"error",label:this.$tc("products.table-headers.error"),allowResize:!0,align:"center",width:"45px",visible:!0,sortable:!1}]}}});var sa=n("0yxm"),ia=n.n(sa);const{Component:oa,Mixin:ra}=Shopware,{EntityCollection:la}=Shopware.Data;oa.register("bf-sales-channel-product-modal",{template:ia.a,inject:["bfProductApiService","BfCategoryService","BfSalesChannelService"],mixins:[ra.getByName("notification")],props:{clientExists:{type:Boolean,required:!0},clientInProgress:{type:Boolean,required:!0},product:{type:Object,required:!0},currentContract:{type:Object,required:!0},shopProductData:{type:Array,required:!0}},data:()=>({allConditions:[],allPolicies:{shipping:[],returns:[],payments:[]},isLoading:!0,salesChannelType:"",activeTab:"general",categories:[],formData:{bfProductId:null,conditionAttribute:null,conditionNote:"",ebayPlus:!1,ebayProposedPrice:{ebayBestOfferActive:!1,ebayBestOfferAbsolute:0,ebayBestOfferRelative:0,ebayBestOfferAutoAccept:!1,ebayBestOfferAbsoluteAutoAccept:0,ebayBestOfferRelativeAutoAccept:0},policies:{shipping:null,returns:null,payments:null},merchantShippingGroupName:"",searchTerms:"",platinumKeywords:"",fbaActive:"",category:""},parentProduct:[],productData:[]}),created(){this.bfProductApiService.setSalesChannelId(this.$route.params.id),this.componentCreated()},computed:{isDisabled(){return!this.clientExists||this.clientInProgress||""===this.currentContract.name||"Starter"===this.currentContract.name}},methods:{async componentCreated(){const e=void 0!==this.shopProductData[this.product.id]?this.shopProductData[this.product.id]:null;if(null!==e){if(e.hasOwnProperty("ebayProposedPrice")&&null!==e.ebayProposedPrice){this.formData.ebayProposedPrice=e.ebayProposedPrice;for(let e in this.formData.ebayProposedPrice)this.formData.ebayProposedPrice[e]=parseInt(this.formData.ebayProposedPrice[e])}this.formData.bfProductId=e.bfProductId,this.formData.merchantShippingGroupName=e.hasOwnProperty("merchantShippingGroupName")&&null!==e.merchantShippingGroupName?e.merchantShippingGroupName:"",this.formData.searchTerms=e.hasOwnProperty("searchTerms")&&null!==e.platinumKeywords?e.searchTerms:"",this.formData.platinumKeywords=e.hasOwnProperty("platinumKeywords")&&null!==e.platinumKeywords?e.platinumKeywords.join(","):"",this.formData.ebayPlus=!(!e.hasOwnProperty("ebayPlus")||null===e.ebayPlus)&&1===e.ebayPlus,this.formData.conditionAttribute=e.hasOwnProperty("conditionId")&&null!==e.conditionId?e.conditionId:null,this.formData.conditionNote=e.hasOwnProperty("conditionNote")&&null!==e.conditionNote?e.conditionNote:"",this.formData.fbaActive=!(!e.hasOwnProperty("fbaActive")||null===e.fbaActive)&&1===e.fbaActive,this.formData.policies.shipping=e.hasOwnProperty("shippingPolicy")&&null!==e.shippingPolicy?e.shippingPolicy:null,this.formData.policies.returns=e.hasOwnProperty("returnsPolicy")&&null!==e.returnsPolicy?e.returnsPolicy:null,this.formData.policies.payments=e.hasOwnProperty("paymentsPolicy")&&null!==e.paymentsPolicy?e.paymentsPolicy:null,this.formData.ebayProposedPrice.ebayBestOfferActive=""!==this.formData.ebayProposedPrice.ebayBestOfferActive&&"1"===this.formData.ebayProposedPrice.ebayBestOfferActive,this.formData.ebayProposedPrice.ebayBestOfferAutoAccept=""!==this.formData.ebayProposedPrice.ebayBestOfferAutoAccept&&"1"===this.formData.ebayProposedPrice.ebayBestOfferAutoAccept}this.isLoading=!0,await this.bfProductApiService.getSalesChannelType().then((e=>{this.salesChannelType=e,this.getAllConditions()})),await this.getProductData(),this.loadPolicies(),this.isLoading=!1},changeFormInputValue(e,t){this.formData.ebayProposedPrice[e]=t},async getProductData(){await this.bfProductApiService.getProductData([this.product.id]).then((e=>{if(e.success){if(this.productData=e.data[0],this.productData.categories.length<=0)return void(this.product.categories=new la("/bf-sales-channel","category",Shopware.Context.api,null,this.categoryCollection));this.BfCategoryService.findCategoriesById(this.productData.categories).then((async e=>{let t=this.productData.categories[0].channels_id;this.product.categoryTree=[],await e.forEach((e=>{e.channels_id===t&&(this.categories.push(e),this.getCategoryTree(e.parent_id).then((e=>{this.categories.length>0&&this.categories.forEach((e=>{this.product.categoryTree.push(e.id.toString())}))})).catch((e=>{console.log(e)})))}));const n=new la("/bf-sales-channel","category",Shopware.Context.api,null,this.categoryCollection);e.forEach((e=>{e.channels_id===t&&(e.id=e.id.toString(),n.add({data:e,id:e.id.toString(),categoryId:e.external_channels_categories_id,name:e.name,translated:{name:e.name},childCount:e.children,parentId:e.parent_id,afterCategoryId:e.parent_id}))})),this.product.categories=n})).catch((e=>{console.log(e)}))}})).catch((e=>{console.log(e)}))},async getCategoryTree(e=null){if(null!=e)return await this.BfCategoryService.getCategoryById(e).then((async e=>(e.id=null===e.id?e.id:e.id.toString(),this.categories.push({data:e,id:e.id,categoryId:e.external_channels_categories_id,name:e.name,translated:{name:e.name},childCount:e.children,parentId:null===e.parent_id?e.parent_id:e.parent_id.toString(),afterCategoryId:null===e.parent_id?e.parent_id:e.parent_id.toString()}),await this.getCategoryTree(e.parent_id),Promise.resolve()))).catch((e=>{console.log(e)}))},saveData(){const e=void 0!==this.shopProductData[this.product.id]?this.shopProductData[this.product.id]:null;null!==e?this.bfProductApiService.saveProductData(e.bfProductId,{merchantShippingGroupName:this.formData.merchantShippingGroupName,searchTerms:this.formData.searchTerms,platinumKeywords:null!==this.formData.platinumKeywords?this.formData.platinumKeywords.split(", "):[],proposedPrice:{EBAY_BEST_OFFER_ACTIVE:this.formData.ebayProposedPrice.ebayBestOfferActive?1:0,EBAY_BEST_OFFER_ABSOLUTE:this.formData.ebayProposedPrice.ebayBestOfferAbsolute,EBAY_BEST_OFFER_RELATIVE:this.formData.ebayProposedPrice.ebayBestOfferRelative,EBAY_BEST_OFFER_AUTO_ACCEPT:this.formData.ebayProposedPrice.ebayBestOfferAutoAccept?1:0,EBAY_BEST_OFFER_ABSOLUTE_AUTO_ACCEPT:this.formData.ebayProposedPrice.ebayBestOfferAbsoluteAutoAccept,EBAY_BEST_OFFER_RELATIVE_AUTO_ACCEPT:this.formData.ebayProposedPrice.ebayBestOfferRelativeAutoAccept},ebayPlus:this.formData.ebayPlus?1:0,conditionAttribute:this.formData.conditionAttribute,conditionNote:this.formData.conditionNote,shippingPolicy:this.formData.policies.shipping,returnsPolicy:this.formData.policies.returns,paymentsPolicy:this.formData.policies.payments,fbaActive:this.formData.fbaActive?1:0,shopsCategories:[...this.product.categories.map((e=>e.categoryId))]}).then((e=>{this.isLoading=!1;let t=e.data;return t.errors=this.shopProductData[this.product.id].errors,this.shopProductData[this.product.id]=t,this.createNotificationSuccess({title:this.$tc("products.edit.notification.title.success"),message:this.$tc("products.edit.notification.message.success")})})).catch((()=>(this.isLoading=!1,this.$emit("modal-close"),this.createNotificationError({title:this.$tc("products.edit.notification.title.error"),message:this.$tc("products.edit.notification.message.error")})))):(this.$emit("modal-close"),this.createNotificationError({title:this.$tc("products.edit.notification.title.error"),message:this.$tc("products.edit.notification.message.error")}))},getAllConditions(){let e="1000";"amazon"===this.salesChannelType?(this.getAllAmazonConditions(),e="New"):this.getAllEbayConditions(),this.formData.conditionAttribute=null===this.formData.conditionAttribute?e:this.formData.conditionAttribute},getAllEbayConditions(){this.allConditions=[{value:"1000",label:this.$tc("products.edit.conditions.ebay.new")},{value:"2750",label:this.$tc("products.edit.conditions.ebay.asNew")},{value:"3000",label:this.$tc("products.edit.conditions.ebay.used")},{value:"4000",label:this.$tc("products.edit.conditions.ebay.veryGood")},{value:"5000",label:this.$tc("products.edit.conditions.ebay.good")},{value:"6000",label:this.$tc("products.edit.conditions.ebay.acceptable")}]},getAllAmazonConditions(){this.allConditions=[{value:"New",label:this.$tc("products.edit.conditions.amazon.new")},{value:"UsedLikeNew",label:this.$tc("products.edit.conditions.amazon.usedLikeNew")},{value:"UsedVeryGood",label:this.$tc("products.edit.conditions.amazon.usedVeryGood")},{value:"UsedGood",label:this.$tc("products.edit.conditions.amazon.usedGood")},{value:"UsedAcceptable",label:this.$tc("products.edit.conditions.amazon.usedAcceptable")},{value:"CollectibleLikeNew",label:this.$tc("products.edit.conditions.amazon.collectibleLikeNew")},{value:"CollectibleVeryGood",label:this.$tc("products.edit.conditions.amazon.collectibleVeryGood")},{value:"CollectibleGood",label:this.$tc("products.edit.conditions.amazon.collectibleGood")},{value:"CollectibleAcceptable",label:this.$tc("products.edit.conditions.amazon.collectibleAcceptable")},{value:"Refurbished",label:this.$tc("products.edit.conditions.amazon.refurbished")},{value:"Club",label:this.$tc("products.edit.conditions.amazon.club")}]},loadPolicies(){this.getShippingPolicies(),this.getPaymentPolicies(),this.getReturnPolicies()},async getShippingPolicies(){await this.BfSalesChannelService.getEbayPolicy("shipping").then((e=>{200===e.status&&!0===e.data.success&&e.data.data.length>0&&(this.allPolicies.shipping=this.buildPolicies(e.data.data))}))},async getPaymentPolicies(){await this.BfSalesChannelService.getEbayPolicy("payment").then((e=>{200===e.status&&!0===e.data.success&&e.data.data.length>0&&(this.allPolicies.payments=this.buildPolicies(e.data.data))}))},async getReturnPolicies(){await this.BfSalesChannelService.getEbayPolicy("return").then((e=>{200===e.status&&!0===e.data.success&&e.data.data.length>0&&(this.allPolicies.returns=this.buildPolicies(e.data.data))}))},buildPolicies(e){let t=[{label:this.$tc("products.edit.noInformation"),value:null}];return e.forEach((e=>{t.push({label:e.profileName,value:e.profileId})})),t}}});var ca=n("qQWA"),da=n.n(ca);const{Component:ha}=Shopware;ha.register("bf-sales-channel-amazon-asin-management",{template:da.a,inject:["bfProductApiService","BfAmazonService"],props:{shopProductData:{type:Array,required:!0},product:{type:Object,required:!0}},data:()=>({dataSource:[],total:0,page:1,limit:5}),computed:{getColumns(){return this.columns()}},created(){this.loadShopsProductsVariationsData()},methods:{loadShopsProductsVariationsData(){const e=this;this.bfProductApiService.loadProductVariationData(this.shopProductData[this.product.id].bfProductId,this.limit,this.page).then((t=>{t.success&&(this.total=t.data.totalCount,t.data.data.forEach((function(t){let n=!1;t.hasOwnProperty("shopsProductsVariationsOffers")&&t.shopsProductsVariationsOffers.length>0&&(n=t.shopsProductsVariationsOffers[0].hasOwnProperty("externShopsProductsVariationsId")),e.dataSource.push({shopsProductsVariationsId:t.bfShopsProductsVariationsId,productNumber:t.productsVariationsItemNumber,externShopsProductsVariationsId:n?t.shopsProductsVariationsOffers[0].externShopsProductsVariationsId:"",shopsProductsVariationsOffersId:n?t.shopsProductsVariationsOffers[0].shopsProductsVariationsOffersId:null})})))}))},async inlineEditSave(e){await this.BfAmazonService.saveAmazonAsin(e).then((e=>{e.success&&this.dataSource.forEach((function(t){t.shopsProductsVariationsId===e.data.shopsProductsVariationsId&&(t.shopsProductsVariationsOffersId=e.data.shopsProductsVariationsOffersId)}))}))},paginate(e){this.page=e.page,this.limit=e.limit,this.dataSource=[],this.loadShopsProductsVariationsData()},columns(){return[{property:"productNumber",label:this.$tc("products.table-headers.product-number"),allowResize:!1,align:"left"},{property:"externShopsProductsVariationsId",label:this.$tc("products.table-headers.asin"),allowResize:!1,allowInlineEdit:!0,inlineEdit:"string"}]}}});var pa=n("07b6"),ua=n.n(pa);const{Component:ma,Mixin:ga,Context:ba}=Shopware,{Criteria:fa}=Shopware.Data;ma.override("sw-product-visibility-select",{template:ua.a,inject:["bfSystemApiService"],mixins:[ga.getByName("notification")],computed:{productRepository(){return this.repositoryFactory.create("product")}},data:()=>({skuLimit:null}),created(){this.criteria.addAssociation("type"),this.getSkuLimit()},methods:{getSkuLimit(){return this.bfSystemApiService.getSkuLimit().then((e=>{if(e.success)return this.skuLimit=e.data.skuLimit})).catch((e=>{console.log(e)}))},addItem(e){if("brickfox GmbH"===e.type.translated.manufacturer){if(this.isSelected(e)){const t=this.currentCollection.find((t=>t.salesChannelId===e.id));return void this.remove(t)}const t=new fa(1,1);return t.addFilter(fa.equals("product.visibilities.salesChannelId",e.id)),t.addAssociation("visibilities"),void this.productRepository.search(t,ba.api).then((t=>{if(t.total>=this.skuLimit)return this.createNotificationError({title:"Error",message:"SKU Limit for this channel was reached"});this.$super("addItem",e)})).catch((e=>{console.log(e)}))}this.$super("addItem",e)}}});var ya=n("HMYG"),_a=n.n(ya);const{Component:wa}=Shopware,{EntityCollection:Ca}=Shopware.Data,{debounce:ka,sort:Sa}=Shopware.Utils;wa.extend("bf-sales-channel-product-category-mapping","sw-category-tree-field",{template:_a.a,inject:["BfCategoryService"],props:{product:{type:Object},parentProperty:{type:String,required:!1,default:"parent_id"}},data:()=>({isLoading:!1,created:0}),computed:{selectedCategoriesPathIds(){return this.categoriesCollection.reduce(((e,t)=>[...e,...this.product.categoryTree]),[])}},methods:{getTreeItems(e=null){this.BfCategoryService.getCategories(e).then((t=>{if(null===e)return t.forEach((t=>{t.id=t.id.toString(),this.categories.push({data:t,id:t.id.toString(),categoryId:t.external_channels_categories_id,translated:{name:t.name},childCount:t.children,parentId:t.parent_id,parentVersionId:t.parent_id,children:[],afterCategoryId:e,afterCategoryVersionId:e,name:t.name})})),this.isFetching=!1,Promise.resolve();t.forEach((t=>(this.categories.push({data:t,isDeleted:!1,id:t.id.toString(),categoryId:t.external_channels_categories_id,translated:{name:t.name},childCount:t.children,parentId:null===t.parent_id?t.parent_id:t.parent_id.toString(),afterCategoryId:null===e?e:e.toString(),name:t.name}),this.isFetching=!1,Promise.resolve())))})).catch((e=>{console.log(e)}))},searchCategories(e){return this.BfCategoryService.findCategoryByName(e).then((e=>(this.categories=[],e.forEach((e=>{e.id=e.id.toString(),this.categories.push({data:e,id:e.id.toString(),categoryId:e.external_channels_categories_id,name:e.name,translated:{name:e.name},childCount:e.children,parentId:e.parent_id,afterCategoryId:e.parent_id})})),this.categories)))}},created(){this.BfCategoryService.setSalesChannelId(this.$route.params.id)}});var va=n("usVR"),Pa=n.n(va);n("Jinz");const{Component:Aa}=Shopware;Aa.extend("bf-filter-panel","sw-filter-panel",{template:Pa.a});var Ma=n("L5YD"),Ia=n.n(Ma);const{Component:Ta}=Shopware;Ta.extend("bf-sales-channel-property-mapping-grid","sw-data-grid",{template:Ia.a});var xa=n("4mTt"),Ea=n.n(xa);const{Component:Ba,State:za}=Shopware;Ba.extend("bf-sales-channel-property-mapping-list","sw-data-grid",{template:Ea.a,props:{attributeMappingData:{type:Array,required:!0}},data:()=>({showPropertyMappingModal:!1,selectedProperty:null}),computed:{currentLocale:()=>za.get("session").currentLocale},methods:{getBfAttributeMappingData(){for(const e of this.attributeMappingData)if(null!==e.internalValue&&e.internalValue.toLowerCase()===this.selectedProperty.productsAttributesCode.toLowerCase())return e;return null},getExternalName(e){for(const t of this.attributeMappingData)if(null!==t.internalValue&&t.internalValue.toLowerCase()===e.productsAttributesCode.toLowerCase())return t.externalValue;return""},onEditPropertyMappingClick(e){this.showPropertyMappingModal=!0,this.selectedProperty=e}}});var Da=n("wCu0"),$a=n.n(Da);const{Component:La,Mixin:Na}=Shopware;La.register("bf-sales-channel-property-mapping-modal",{template:$a.a,inject:["bfPropertyService"],mixins:[Na.getByName("notification")],props:{title:{type:String,required:!0},property:{type:Object,required:!0},bfAttributeMappingData:{type:Object}},data:()=>({isLoading:!1,externalName:null,searchString:"",attributeData:[],columns:[{property:"id",visible:!1,primary:!0},{property:"name",label:"propertyMapping.columns.name"}]}),created(){this.componentCreated()},methods:{componentCreated(){this.loadAttributeData()},getBfMappingId(){return null!==this.bfAttributeMappingData?this.bfAttributeMappingData.bfMappingId:null},saveData(){this.$refs.attributeGrid.selectionCount>1?this.createNotificationWarning({title:this.$tc("propertyMapping.notifications.title.warning"),message:this.$tc("propertyMapping.notifications.message.warningTooManySelected")}):0!==this.$refs.attributeGrid.selectionCount?this.bfPropertyService.saveAttributeMappingData({bfMappingId:this.getBfMappingId(),attributeId:this.property.productsAttributesCode,externalValue:Object.values(this.$refs.attributeGrid.selection)[0].name}).then((()=>{this.$emit("modal-close"),this.createNotificationSuccess({title:this.$tc("propertyMapping.notifications.title.success"),message:this.$tc("propertyMapping.notifications.message.success")})})).catch((()=>{this.$emit("modal-close"),this.createNotificationError({title:this.$tc("propertyMapping.notifications.title.error"),message:this.$tc("propertyMapping.notifications.message.error")})})):this.createNotificationWarning({title:this.$tc("propertyMapping.notifications.title.warning"),message:this.$tc("propertyMapping.notifications.message.warningNoSelection")})},loadAttributeData(){this.isLoading=!0,this.bfPropertyService.loadAttributeData(this.searchString).then((e=>{this.attributeData=this.getUniqueValues(e.data),this.isLoading=!1}))},getUniqueValues:e=>e.filter(((e,t,n)=>n.findIndex((t=>t.id===e.id))===t)),sortList(){}}});var Fa=n("BGZQ"),Oa=n.n(Fa);const{Component:Ra,Context:Ha}=Shopware,{Criteria:Ua}=Shopware.Data;Ra.register("bf-sales-channel-variation-properties-grid",{template:Oa.a,inject:["bfPropertyService","BfSalesChannelService","repositoryFactory"],data:()=>({variationProperties:[],gridColumns:[],showActions:!0,showEmptyStateVariationProperties:!1,isLoading:!1,total:0,limit:5,page:1}),computed:{propertyRepository(){return this.repositoryFactory.create("property_group")},getColumns(){return[{property:"name",label:this.$tc("propertyMapping.variationProperties.swLabel"),dataIndex:"name"},{property:"selectedVariation",dataIndex:"selectedVariation",label:this.$tc("propertyMapping.variationProperties.amazonLabel"),inlineEdit:"string"},{property:"bfMappingId",dataIndex:"bfMappingId",label:"",visible:!1}]}},created(){this.loadComponent()},methods:{async loadComponent(){this.isLoading=!0,this.bfPropertyService.setSalesChannelId(this.$route.params.id),await this.getVariationProperties(),0===this.variationProperties.length&&(this.showEmptyState=!0),this.isLoading=!1},async getVariationProperties(){let e=this,t=[],n=[];await this.bfPropertyService.getVariationsDiffsOptionsMapping(await this.bfPropertyService.getSalesChannelType()).then((e=>{e.success&&e.data.forEach((function(e){n.push(e)}))})),await this.bfPropertyService.getVariationProperties(this.page,this.limit).then((async a=>{if(a.success&&(this.total=a.data.totalCount,a.data.data.forEach((function(e){t.push([e.externProductsVariationsDiffsOptionsId])})),t.length>0)){let a=new Ua;a.addFilter(Ua.equalsAny("id",t)),await this.propertyRepository.search(a,Ha.api).then((t=>{t.length>0&&t.forEach((function(t){let a=e.getMappedInformation(n,t);e.variationProperties.push({id:t.id,name:t.translated.name,selectedVariation:a.selectedVariation,bfMappingId:a.bfMappingId})}))}))}})).catch((e=>{console.log(e)}))},getMappedInformation(e=Array,t={}){let n={selectedVariation:"",bfMappingId:""};if(e.length>0)for(let a=0;a<e.length;a++)if(e[a].internalValue===t.id){n.selectedVariation=e[a].externalValue,n.bfMappingId=e[a].bfMappingId;break}return n},async onInlineEditSave(e){0===e.bfMappingId.length&&(e.bfMappingId=null),this.bfPropertyService.storeVariationsDiffsOptionsMapping(await this.BfSalesChannelService.getSalesChannelType(),{bfMappingId:e.bfMappingId,propertyId:e.id,externalValue:e.selectedVariation})},pageChange(e){this.page=e.page,this.limit=e.limit,this.variationProperties=[],this.loadComponent()},onDbClickCell(e){},onEditCellValue(e){this.$root.$emit("onDbClickCell",e.id)}}});var Va=n("b4Am"),Ga=n.n(Va);n("OVF6");const{Component:qa,Mixin:Ka}=Shopware,{Criteria:ja}=Shopware.Data;qa.register("bf-sales-channel-detail-custom-fields",{template:Ga.a,mixins:[Ka.getByName("notification"),Ka.getByName("listing")],inject:["repositoryFactory","bfPropertyService"],data:()=>({propertyGroup:null,sortBy:"name",isLoading:!1,sortDirection:"ASC",showDeleteModal:!1,transferredCustomFields:[]}),created(){this.getTransferredCustomFields()},computed:{customFieldsRepository(){return this.repositoryFactory.create("custom_field")},defaultCriteria(){const e=new ja(this.page,this.limit);return e.addSorting(ja.sort(this.sortBy,this.sortDirection,this.useNaturalSorting)),e.addFilter(ja.equals("customFieldSet.relations.entityName","product")),e.addFilter(ja.equals("active",1)),e.addAssociation("customFieldSet"),e},useNaturalSorting(){return"property.name"===this.sortBy}},methods:{getList(){return this.isLoading=!0,this.customFieldsRepository.search(this.defaultCriteria,Shopware.Context.api).then((e=>(this.propertyGroup=e,this.isLoading=!1,e))).catch((()=>{this.isLoading=!1}))},getPropertyColumns:()=>[{property:"name",label:"bf-custom-fields-transfer.list.columnName",routerLink:"sw.property.detail",inlineEdit:"string",allowResize:!1,primary:!0},{property:"transfer",label:"bf-custom-fields-transfer.list.columnTransfer",width:"50px",visible:!0,sortable:!1,allowResize:!1}],checked(e){for(let t=0;t<this.transferredCustomFields.length;t++)if(this.createPropertyUniqName(e.name,e.id)===this.transferredCustomFields[t])return!0;return!1},toggleItemCheck(e,t){let n=this.createPropertyUniqName(t.name,t.id);e?this.transferredCustomFields.push(n):this.transferredCustomFields.splice(this.transferredCustomFields.indexOf(n),1),localStorage.setItem("bfTransferredCustomFields",this.transferredCustomFields)},getTransferredCustomFields(){this.bfPropertyService.loadPropertyData().then((e=>{e.data.forEach((e=>{"CUSTOM_FIELDS_TO_IMPORT_AS_ATTRIBUTES"===e.configurationKey&&""!==e.configurationValue&&(this.transferredCustomFields=e.configurationValue.split(","))})),localStorage.setItem("bfTransferredCustomFields",this.transferredCustomFields),this.isLoading=!1})).catch((e=>{this.isLoading=!1}))},createPropertyUniqName:(e,t)=>e+" ##"+t+"##"}});var Wa=n("FeTi"),Za=n.n(Wa);n("3feL");const{Component:Ya,Mixin:Xa}=Shopware,{Criteria:Qa}=Shopware.Data;Ya.register("bf-sales-channel-detail-property-transfer",{template:Za.a,mixins:[Xa.getByName("notification"),Xa.getByName("listing")],inject:["repositoryFactory","bfPropertyService"],data:()=>({propertyGroup:null,sortBy:"name",isLoading:!1,sortDirection:"ASC",showDeleteModal:!1,transferredProperties:[]}),created(){this.getTransferredProperties()},computed:{propertyRepository(){return this.repositoryFactory.create("property_group")},defaultCriteria(){const e=new Qa(this.page,this.limit);return e.addSorting(Qa.sort(this.sortBy,this.sortDirection,this.useNaturalSorting)),e},useNaturalSorting(){return"property.name"===this.sortBy}},methods:{getList(){return this.isLoading=!0,this.propertyRepository.search(this.defaultCriteria,Shopware.Context.api).then((e=>(this.propertyGroup=e,this.isLoading=!1,e))).catch((()=>{this.isLoading=!1}))},getPropertyColumns:()=>[{property:"name",label:"bf-property-transfer.list.columnName",routerLink:"sw.property.detail",inlineEdit:"string",allowResize:!1,primary:!0},{property:"transfer",label:"bf-property-transfer.list.columnTransfer",width:"50px",visible:!0,sortable:!1,allowResize:!1}],checked(e){for(let t=0;t<this.transferredProperties.length;t++)if(this.transferredProperties[t].indexOf(e.id)>0)return!0;return!1},toggleItemCheck(e,t){let n=this.createPropertyUniqName(t.name,t.id);e?this.transferredProperties.push(n):this.transferredProperties.splice(this.transferredProperties.indexOf(n),1),localStorage.setItem("bfTransferredProperties",this.transferredProperties)},getTransferredProperties(){this.bfPropertyService.loadPropertyData().then((e=>{e.data.forEach((e=>{"PROPERTIES_TO_IMPORT_AS_ATTRIBUTES"===e.configurationKey&&""!==e.configurationValue&&(this.transferredProperties=e.configurationValue.split(","))})),localStorage.setItem("bfTransferredProperties",this.transferredProperties),this.isLoading=!1})).catch((e=>{this.isLoading=!1,console.log(e)}))},createPropertyUniqName:(e,t)=>e+" ##"+t+"##"}});var Ja=n("vjzL"),es=n.n(Ja),ts=(n("xjbj"),n("HO8I")),ns=n.n(ts);n("+LxU");const{Component:as}=Shopware;as.register("bf-sales-channel-amazon-segment-dropdown",{template:ns.a,inject:["BfCategoryService"],props:{clientExists:{type:Boolean,required:!0},clientInProgress:{type:Boolean,required:!0},currentContractName:{type:String,required:""}},data:()=>({allProductsSegments:[],productsTypes:[],selectedSegment:"",selectedType:"",productSegmentAndType:null}),created(){this.getAllSegments(),this.selectedSegment&&this.getSegmentTypes()},computed:{currentCategorySegment(){return this.prepareCategorySegmentSaveObject()},isDisabled(){return!this.clientExists||this.clientInProgress||""===this.currentContractName}},methods:{prepareCategorySegmentSaveObject(){return this.selectedSegment||(this.selectedSegment="-"),this.selectedType||(this.selectedType="-"),{productSegmentsName:this.selectedSegment,productTypesName:this.selectedType}},setSegment(e,t,n){this.productSegmentAndType=e,this.selectedSegment=e[t],this.selectedType=e[n],this.feelSegmentTypesField()},feelSegmentTypesField(){this.selectedSegment&&"-"!==this.selectedSegment?this.getSegmentTypes():this.productsTypes=[]},getSegmentTypes(){this.$emit("onStartLoading"),this.BfCategoryService.getSegmentsTypes(this.selectedSegment).then((e=>{this.productsTypes=[],e.forEach(((e,t)=>{this.productsTypes.push({value:e.productTypesName,label:e.productTypesName})})),this.$emit("onStopLoading")})).catch((e=>{console.log(e),this.$emit("onStopLoading")}))},onSelectSegment(){this.feelSegmentTypesField(),this.$emit("onSetCurrentSegment")},onSelectType(e){this.$emit("onSetCurrentSegment")},getAllSegments(){this.BfCategoryService.getSegments().then((e=>{e.forEach(((e,t)=>{this.allProductsSegments.push({value:e.productSegmentsName,label:e.productSegmentsName})})),this.$emit("onStopLoading")})).catch((e=>{console.log(e),this.$emit("onStopLoading")}))},clearMappedData(){this.productsTypes=[],this.selectedSegment="",this.selectedType=""}}});const{Component:ss,Context:is}=Shopware,{Criteria:os}=Shopware.Data;ss.register("bf-sales-channel-segment-mapping",{template:es.a,inject:["repositoryFactory","BfCategoryService","bfContractService","BfSalesChannelService"],props:{clientExists:{type:Boolean,required:!0},clientInProgress:{type:Boolean,required:!0},currentContractName:{type:String,required:!1,default:""}},data:()=>({isSegmentLoading:!1,salesChannel:null,marketplaceName:"",activeCategoryId:""}),created(){this.getSalesChannelInfo()},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")}},methods:{getSalesChannelInfo(){this.isLoading=!0,this.salesChannelRepository.get(this.$route.params.id,is.api,new os).then((e=>{this.salesChannel=e,this.marketplaceName=this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId),this.isLoading=!1})).catch((()=>{this.isLoading=!1}))},setCurrentCategorySegment(){let e=this.$refs.segmentDropdown.currentCategorySegment;e.categoryId=this.activeCategoryId,localStorage.setItem("productSegment",JSON.stringify(e))},onSelectCategory(e){this.isSegmentLoading=!0,this.activeCategoryId=e,this.BfCategoryService.getCategorySegment(this.activeCategoryId).then((e=>{this.$refs.segmentDropdown.setSegment(e,"productSegmentsName","productTypesName"),this.setCurrentCategorySegment(),this.isSegmentLoading=!1})).catch((e=>{console.log(e),this.isSegmentLoading=!1}))}}});var rs=n("iUFa"),ls=n.n(rs);const{Component:cs}=Shopware,{mapGetters:ds,mapMutations:hs}=Shopware.Component.getComponentHelper();cs.override("bf-sales-channel-detail",{name:"bf-sales-channel-mapping",template:ls.a,inject:["BfSalesChannelService"],data:()=>({categoriesReloadTriggerEvent:!1}),computed:{salesChannelTypeId(){return this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId)}},watch:{"$route.params.id"(){this.onSalesChannelChange()}},methods:{...hs(["setCategoriesMappingStorage"]),...ds("bfCategoryMapping",["getCategoriesMappingStorage"]),async storeCategoriesMapping(){let e=this;const t=Object.entries(this.getCategoriesMappingStorage());for(const n of t)await e.BfCategoryService.saveCategoryMapping(n[0],n[1],e.salesChannelTypeId);this.categoriesReloadTriggerEvent=!this.categoriesReloadTriggerEvent},onSalesChannelChange(){this.BfSalesChannelService.setSalesChannelId(this.$route.params.id)}},created(){this.onSalesChannelChange()}});var ps=n("MXRk"),us=n.n(ps);n("GOhG");const{Component:ms,Mixin:gs,State:bs,Context:fs}=Shopware,{Criteria:ys}=Shopware.Data;ms.register("bf-sales-channel-detail-mapping",{template:us.a,inject:["bfContractService","repositoryFactory","BfSalesChannelService"],mixins:[gs.getByName("listing")],props:{categoriesReloadTriggerEvent:{required:!1}},data:()=>({clientExists:!1,clientInProgress:!1,currentContract:{},propertyGroup:null,swPropertyGroup:null,isLoading:!1,attributeMappingData:[],marketplaceName:"",salesChannel:null,amazonSegment:"",amazonProductType:""}),watch:{"$route.params.id"(){this.getSalesChannelInfo()}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},isAmazon(){return"amazon"===this.$attrs.salesChannelType},currentLocale:()=>bs.get("session").currentLocale},created(){this.getContract(),this.getSalesChannelInfo(),this.checkClientState(),this.loadShopsConfigurations()},methods:{async getSalesChannelInfo(){this.isLoading=!0,await this.salesChannelRepository.get(this.$route.params.id,fs.api,new ys).then((e=>{this.salesChannel=e,this.marketplaceName=this.$route.meta.$module.getSalesChannelByTypeId(this.salesChannel.typeId),this.isLoading=!1})).catch((()=>{this.isLoading=!1}))},getContract(){return this.bfContractService.getUserInformation("user-token").then((e=>null===e.longLifeToken||null===e.shopSecret?e:this.getContractDetails()))},getContractDetails(){return this.bfContractService.getContracts().then((e=>(null!==e.current&&(this.currentContract=e.current),e))).catch((e=>{this.handleSbpError(e)}))},checkClientState(){this.BfSalesChannelService.checkClientState().then((e=>{this.clientExists=e.clientExists,this.clientInProgress=e.clientInProgress}))},async loadShopsConfigurations(){await this.BfSalesChannelService.getShopsConfigurations().then((e=>{let t=e.data.data;this.amazonSegment=t.hasOwnProperty("productSegment")?t.productSegment:"-",this.amazonProductType=t.hasOwnProperty("productType")?t.productType:"-"})).catch((e=>{this.isLoading=!1}))}}});var _s=n("opF4"),ws=n.n(_s),Cs=n("HJBI"),ks=n.n(Cs);const{Application:Ss}=Shopware;class vs{async loadSwagMarketsAttributesMapping(e){let t=[];return await e.loadAttributeMappingData().then((e=>{e.success&&(t=e.data)})),t}async getMappedErpSystemsList(e,t="PROPERTIES_TO_IMPORT_AS_ATTRIBUTES"){let n=null;return null!=e&&e.success&&(e.data.forEach((function(e){e.configurationKey===t&&(n=e.configurationValue)})),n=this.extractMappedErpSystemsEntries(n)),n}extractMappedErpSystemsEntries(e){let t=[];if(null!==e&&"string"==typeof e){let n=e.split(",");null!==n&&(t=n)}return t}saveInlineEdit(e,t,n="swProperty"){return 0!==t.length&&void 0!==this.erpSystemMappingExists(t,e.id)||t.push(e[n]+" ##"+e.id+"##"),t}transferErpSystemsConfigurations(e,t,n){let a="";t.forEach((function(e,t,n){t===n.length-1?a+=e:a+=e+","})),e.storePropertyData(n,a).then((()=>{})).catch((e=>{console.log(e)}))}async upsertProductsAttributesResource(e,t,n){let a=null;return await n.loadBfAttributeDataV2({query:{externProductsAttributesId:e}}).then((async s=>{s.success&&(0===s.data.length&&await n.createProductsAttributes(e,t).then((e=>{e.success&&(a=e.data.productsAttributesId)})),1===s.data.length&&await n.updateProductsAttributes(s.data[0].productsAttributesId,t).then((e=>{e.success&&(a=e.data.productsAttributesId)})))})),a}async upsertProductsAttributesMappingResource(e,t,n,a=null){await e.saveAttributeMappingData({bfMappingId:a,attributeId:n,externalValue:t})}async removeAttributesMappingAssignment(e,t){await e.removeAttributeMappingData(t.swagMarketsMappingId)}erpSystemMappingExists(e,t){let n=[];return 0!==e.length&&(e.forEach((function(e,t){null!==(e=e.match(/##([A-Z0-9])+##/gi))&&(n[t]=e[0].replace(/##/g,""))})),n.find((e=>e===t)))}}Ss.addServiceProvider("AttributesMappingUtils",(e=>new vs));var Ps=n("0oAh"),As=n.n(Ps);const{Component:Ms,Mixin:Is}=Shopware;Ms.register("attributes-mapping-modal",{template:As.a,inject:["bfPropertyService","BfAmazonService"],mixins:[Is.getByName("notification")],props:{showAttributesMappingModal:{type:Boolean,default:!1},attributesMappingModalItem:{type:Object,default:()=>({}),required:!0},salesChannelType:{type:String,required:!0},amazonSegment:{type:String,default:""},amazonProductType:{type:String,default:""}},watch:{showAttributesMappingModal:function(e,t){!0===e&&this.loadComponent()}},created(){this.loadComponent()},data:()=>({searchString:"",attributeData:[],isLoading:!1,limit:10,page:1,total:0}),computed:{columns(){return this.getColumns()}},methods:{loadComponent(){this.loadAttributeData()},async loadAttributeData(){this.isLoading=!0,"amazon"===this.salesChannelType&&this.amazonSegment.length>0&&this.amazonProductType.length>0?this.BfAmazonService.getAmazonSegmentByName(this.amazonSegment).then((e=>{e.success&&e.data.length>0&&this.BfAmazonService.getProductTypesIdByProductTypesName(this.amazonProductType,e.data[0].id,e.data[0].name).then((e=>{e.success&&e.data.length>0&&this.BfAmazonService.getProductTypesAttributesByProductType(e.data[0].id,this.limit,this.page,this.searchString).then((e=>{e.success&&(this.total=e.totalCount,this.attributeData=e.data)}))}))})):await this.bfPropertyService.loadAttributeData(this.searchString,this.limit,this.page).then((e=>{this.total=e.totalCount,this.attributeData=e.data,this.isLoading=!1})),this.isLoading=!1},saveData(){this.$refs.attributeGrid.selectionCount>1?this.createNotificationWarning({title:this.$tc("propertyMapping.notifications.title.warning"),message:this.$tc("propertyMapping.notifications.message.warningTooManySelected")}):0!==this.$refs.attributeGrid.selectionCount?(this.attributesMappingModalItem.swagMarketsAttributeName=Object.values(this.$refs.attributeGrid.selection)[0].name,this.$emit("save-attribute-mapping",this.attributesMappingModalItem),this.$emit("modal-close-attr-mapping-win")):this.createNotificationWarning({title:this.$tc("propertyMapping.notifications.title.warning"),message:this.$tc("propertyMapping.notifications.message.warningNoSelection")})},pageChange(e){this.page=e.page,this.limit=e.limit,this.loadComponent()},getColumns(){return[{property:"id",visible:!1,primary:!0},{property:"name",label:this.getMarketplaceColumnsHeader()},{property:"mandatory",label:this.$tc("attributesMapping.mandatory"),width:"100px"}]},getMarketplaceColumnsHeader(){return"amazon"===this.salesChannelType?this.$tc("attributesMapping.amazonColumnName"):this.$tc("attributesMapping.ebayColumnName")}}});const{Component:Ts,Context:xs}=Shopware,{Criteria:Es}=Shopware.Data;Ts.register("properties-mapping",{template:ks.a,inject:["repositoryFactory","bfPropertyService","AttributesMappingUtils"],props:{salesChannelType:{type:String,default:""},amazonSegment:{type:String,default:""},amazonProductType:{type:String,default:""}},data:()=>({propertiesMapping:[],isLoadingPropertiesMapping:!0,page:1,limit:5,total:0,sortBy:"name",sortDirection:"ASC",showEmptyState:!1,swagMarketsAttributesMappingData:{},swagMarketsErpSystemsAttributesMappingData:{},showDeleteModalPropertiesAttributesMapping:!1,toRemoveAssignmentIem:null,showAttributesMappingModal:!1,attributesMappingModalItem:{}}),created(){this.bfPropertyService.setSalesChannelId(this.$route.params.id),this.loadComponent()},computed:{columns(){return this.getColumns()},propertyGroupRepository(){return this.repositoryFactory.create("property_group")},useNaturalSorting(){return"property.swProperty"===this.sortBy}},methods:{async loadComponent(){this.isLoadingPropertiesMapping=!0,this.swagMarketsErpSystemsAttributesMappingData=await this.AttributesMappingUtils.getMappedErpSystemsList(await this.bfPropertyService.loadPropertyData()),await this.loadSwagMarketsAttributesMapping(),await this.loadPropertiesMappingData(),this.isLoadingPropertiesMapping=!1},async loadSwagMarketsAttributesMapping(){this.swagMarketsAttributesMappingData=await this.AttributesMappingUtils.loadSwagMarketsAttributesMapping(this.bfPropertyService)},async loadPropertiesMappingData(){let e=this,t=new Es(this.page,this.limit),n=[];t.addSorting(Es.sort(this.sortBy,this.sortDirection,this.useNaturalSorting)),t.addAssociation("translations.language.locale"),await this.propertyGroupRepository.search(t,xs.api).then((t=>{this.total=t.total,t.length>0&&t.forEach((function(t){let a=[],s="",i=null,o=!1;t.translations.forEach((function(e){a.push({isoCode:e.language.locale.code.split("-")[0],name:e.name})})),null!==e.swagMarketsErpSystemsAttributesMappingData&&e.swagMarketsErpSystemsAttributesMappingData.length>0&&e.swagMarketsAttributesMappingData.length>0&&e.swagMarketsAttributesMappingData.forEach((function(e){t.id===e.internalValue&&(s=e.externalValue,i=e.bfMappingId,o=!0)})),n.push({id:t.id,swProperty:t.name,swagMarketsAttributeName:s,translations:a,swagMarketsMappingId:i,assigned:o})}))})),this.propertiesMapping=n,0===this.propertiesMapping.length&&(this.showEmptyState=!0)},saveInlineEdit(e){this.isLoadingPropertiesMapping=!0,this.saveErpConfiguration(e),this.upsertAndGetProductsAttributes(e)},async saveErpConfiguration(e){this.swagMarketsErpSystemsAttributesMappingData=await this.AttributesMappingUtils.saveInlineEdit(e,this.swagMarketsErpSystemsAttributesMappingData),this.AttributesMappingUtils.transferErpSystemsConfigurations(this.bfPropertyService,this.swagMarketsErpSystemsAttributesMappingData,"property")},async upsertAndGetProductsAttributes(e){await this.AttributesMappingUtils.upsertProductsAttributesResource(e.id,e.translations,this.bfPropertyService)>0&&await this.upsertProductsAttributesMapping(e)},async upsertProductsAttributesMapping(e){await this.AttributesMappingUtils.upsertProductsAttributesMappingResource(this.bfPropertyService,e.swagMarketsAttributeName,e.id,e.swagMarketsMappingId).then((()=>{this.loadComponent()}))},pageChange(e){this.page=e.page,this.limit=e.limit,this.loadComponent()},showRemoveAssignmentModal(e){this.toRemoveAssignmentIem=e,this.showDeleteModalPropertiesAttributesMapping=!0},closeRemoveAssignmentModal(){this.showDeleteModalPropertiesAttributesMapping=!1},async removePropertiesAssignment(){await this.AttributesMappingUtils.removeAttributesMappingAssignment(this.bfPropertyService,this.toRemoveAssignmentIem).then((()=>{this.showDeleteModalPropertiesAttributesMapping=!1,this.loadComponent()}))},showAttributesMappingModalWindow(e){this.attributesMappingModalItem=e,this.showAttributesMappingModal=!0},closeAttributesMappingModalWindow(){this.attributesMappingModalItem={},this.showAttributesMappingModal=!1},getColumns(){return[{property:"swProperty",label:this.$tc("attributesMapping.properties.columnName"),rawData:!0,width:"400px"},{property:"swagMarketsAttributeName",label:this.getMarketplaceColumnsHeader(),rawData:!0,inlineEdit:"string"},{property:"assigned",label:this.$tc("attributesMapping.assigned"),rawData:!0}]},getMarketplaceColumnsHeader(){return"amazon"===this.salesChannelType?this.$tc("attributesMapping.amazonColumnName"):this.$tc("attributesMapping.ebayColumnName")}}});var Bs=n("1X8i"),zs=n.n(Bs);const{Component:Ds,Context:$s}=Shopware,{Criteria:Ls}=Shopware.Data;Ds.register("custom-fields-mapping",{template:zs.a,inject:["repositoryFactory","bfPropertyService","AttributesMappingUtils"],props:{salesChannelType:{type:String,default:""},amazonSegment:{type:String,default:""},amazonProductType:{type:String,default:""}},data:()=>({isLoadingCustomFieldsMapping:!1,showEmptyState:!1,page:1,limit:5,total:0,sortBy:"name",sortDirection:"ASC",customFieldsMapping:[],swagMarketsErpSystemsAttributesMappingData:{},swagMarketsAttributesMappingData:{},toRemoveAssignmentIem:null,showDeleteModalCustomFieldsAttributesMapping:!1,showAttributesMappingModal:!1,attributesMappingModalItem:{}}),created(){this.bfPropertyService.setSalesChannelId(this.$route.params.id),this.loadComponent()},computed:{columns(){return this.getColumns()},customFieldsRepository(){return this.repositoryFactory.create("custom_field")},useNaturalSorting(){return"property.swCustomFields"===this.sortBy}},methods:{async loadComponent(){this.isLoadingCustomFieldsMapping=!0,this.swagMarketsErpSystemsAttributesMappingData=await this.AttributesMappingUtils.getMappedErpSystemsList(await this.bfPropertyService.loadPropertyData(),"CUSTOM_FIELDS_TO_IMPORT_AS_ATTRIBUTES"),await this.loadSwagMarketsAttributesMapping(),await this.loadCustomFieldsMappingData(),this.isLoadingCustomFieldsMapping=!1},async loadSwagMarketsAttributesMapping(){this.swagMarketsAttributesMappingData=await this.AttributesMappingUtils.loadSwagMarketsAttributesMapping(this.bfPropertyService)},async loadCustomFieldsMappingData(){let e=this,t=new Ls(this.page,this.limit),n=[];t.addSorting(Ls.sort(this.sortBy,this.sortDirection,this.useNaturalSorting)),await this.customFieldsRepository.search(t,$s.api).then((t=>{this.total=t.total,t.length>0&&t.forEach((function(t){let a=[],s="",i=null,o=!1;for(const[e,n]of Object.entries(t.config.label))a.push({isoCode:`${e}`.split("-")[0],name:`${n}`});null!==e.swagMarketsErpSystemsAttributesMappingData&&e.swagMarketsErpSystemsAttributesMappingData.length>0&&e.swagMarketsAttributesMappingData.length>0&&e.swagMarketsAttributesMappingData.forEach((function(e){t.name===e.internalValue&&(s=e.externalValue,i=e.bfMappingId,o=!0)})),n.push({id:t.id,swCustomFields:t.name,swagMarketsAttributeName:s,translations:a,swagMarketsMappingId:i,assigned:o})}))})),this.customFieldsMapping=n,0===this.customFieldsMapping.length&&(this.showEmptyState=!0)},saveInlineEdit(e){this.isLoadingPropertiesMapping=!0,this.saveErpConfiguration(e),this.upsertAndGetProductsAttributes(e)},saveErpConfiguration(e){this.swagMarketsErpSystemsAttributesMappingData=this.AttributesMappingUtils.saveInlineEdit(e,this.swagMarketsErpSystemsAttributesMappingData,"swCustomFields"),this.AttributesMappingUtils.transferErpSystemsConfigurations(this.bfPropertyService,this.swagMarketsErpSystemsAttributesMappingData,"custom_field")},async upsertAndGetProductsAttributes(e){await this.AttributesMappingUtils.upsertProductsAttributesResource(e.swCustomFields,e.translations,this.bfPropertyService)>0&&await this.upsertProductsAttributesMapping(e)},async upsertProductsAttributesMapping(e){await this.AttributesMappingUtils.upsertProductsAttributesMappingResource(this.bfPropertyService,e.swagMarketsAttributeName,e.swCustomFields,e.swagMarketsMappingId).then((()=>{this.loadComponent()}))},pageChange(e){this.page=e.page,this.limit=e.limit,this.loadComponent()},showRemoveAssignmentModal(e){this.toRemoveAssignmentIem=e,this.showDeleteModalCustomFieldsAttributesMapping=!0},closeRemoveAssignmentModal(){this.showDeleteModalCustomFieldsAttributesMapping=!1},async removeCustomFieldsAssignment(){await this.AttributesMappingUtils.removeAttributesMappingAssignment(this.bfPropertyService,this.toRemoveAssignmentIem).then((()=>{this.showDeleteModalCustomFieldsAttributesMapping=!1,this.loadComponent()}))},showAttributesMappingModalWindow(e){this.attributesMappingModalItem=e,this.showAttributesMappingModal=!0},closeAttributesMappingModalWindow(){this.attributesMappingModalItem={},this.showAttributesMappingModal=!1},getColumns(){return[{property:"swCustomFields",label:this.$tc("attributesMapping.custom-fields.columnName"),rawData:!0,width:"400px"},{property:"swagMarketsAttributeName",label:this.getMarketplaceColumnsHeader(),rawData:!0,inlineEdit:"string"},{property:"assigned",label:this.$tc("attributesMapping.assigned"),rawData:!0}]},getMarketplaceColumnsHeader(){return"amazon"===this.salesChannelType?this.$tc("attributesMapping.amazonColumnName"):this.$tc("attributesMapping.ebayColumnName")}}});const{Component:Ns,Context:Fs}=Shopware,{Criteria:Os}=Shopware.Data;Ns.register("bf-sales-channel-attributes-mapping",{template:ws.a,inject:["repositoryFactory","bfPropertyService"],props:{salesChannelType:{type:String,default:""},amazonSegment:{type:String,default:""},amazonProductType:{type:String,default:""}}});var Rs=n("/v4i"),Hs=n.n(Rs),Us=n("mnbE"),Vs=n.n(Us);n("26Nu");const{Component:Gs,Context:qs}=Shopware,{Criteria:Ks}=Shopware.Data,{debounce:js,sort:Ws}=Shopware.Utils,{mapMutations:Zs}=Shopware.Component.getComponentHelper();Gs.register("bf-tree",{template:Vs.a,inject:["repositoryFactory","BfCategoryService"],props:{items:{type:Array,required:!0},parentProperty:{type:String,required:!1,default:"parentId"},afterIdProperty:{type:String,required:!1,default:"afterCategoryId"},rootParentId:{type:String,required:!1,default:null},searchable:{type:Boolean,required:!1,default:!0},title:{type:String,required:!1,default:""}},data:()=>({isLoading:!1,treeItems:[],currentTreeSearch:null}),computed:{isSearched(){return null!==this.currentTreeSearch&&this.currentTreeSearch.length>0},hasNoItems(){return!(1!==this.items.length||!this.items[0]||!this.items[0].isDeleted)},categoryMappingRepository(){return this.repositoryFactory.create("bf_category_mapping")}},watch:{items:{immediate:!0,handler(){this.treeItems=this.getTreeItems(this.isSearched?null:this.rootParentId)}}},created(){this.isLoading=!0},methods:{...Zs("bfCategoryMapping",["setSelectedCategories"]),getTreeItems(e){const t=[];return this.items.forEach((n=>{null===e&&void 0!==this.items.find((e=>e.id===n.parentId))||null!==e&&n.parentId!==e||t.push({data:n,id:n.id,parentId:e,childCount:n.childCount,children:this.getTreeItems(n.id),initialOpened:!1,active:!1,name:n.name,[this.afterIdProperty]:n[this.afterIdProperty]})})),this.isLoading=!1,Ws.afterSort(t,this.afterIdProperty)},getItems(e=this.rootParentId,t=null){this.$emit("get-tree-items",e,t)},onChange(e){const t=new Ks(1,500);t.addFilter(new Ks.equals("categoryId",e)),this.categoryMappingRepository.search(t,qs.api).then((e=>{if(e.length<=0)return void this.$store.commit("bfCategoryMapping/setSelectedCategories",null);let t=[];e.forEach((e=>{t.push(e.bfCategoryId)})),this.BfCategoryService.findCategoriesByIds(t).then((t=>{let n=[];t.forEach((t=>{n.push({item:t,mapping:e.find((e=>e.bfCategoryId==t.id))})})),this.$store.commit("bfCategoryMapping/setSelectedCategories",n)}))})),this.$emit("on-change",e)},searchItems:js((function(){this.$emit("search-tree-items",this.currentTreeSearch)}),600)}});var Ys=n("eIIs"),Xs=n.n(Ys);n("4Nzo");const{Component:Qs}=Shopware;Qs.register("bf-tree-item",{template:Xs.a,props:{item:{type:Object,required:!0,default:()=>({})},value:{type:String,required:!1}},data(){return{isLoading:!1,currentSelected:"",active:this.item.active,opened:this.item.initialOpened}},computed:{isOpened(){return this.item.initialOpened&&(this.openTreeItem(!0),this.getTreeItemChildren(this.item),this.item.initialOpened=!1),this.opened},styling(){return{"is--active":this.active,"is--no-children":this.item.childCOunt<=0,"is--opened":this.isOpened}}},updated(){this.componentUpdated()},created(){},methods:{componentUpdated(){this.item.children.length>0&&(this.isLoading=!1)},openTreeItem(e=!this.opened){this.opened=e},getTreeItemChildren(e){e.children.length<=0&&(this.isLoading=!0,this.getItems(e.data.id))},getItems(e){return this.$parent.getItems(e)},emitCheckedItem(e){this.$emit("on-change",e)},onChangeItem(e){this.$emit("on-change",e)}}});const{Component:Js,Context:ei,Collection:ti,State:ni}=Shopware,{Criteria:ai}=Shopware.Data,{mapMutations:si,mapGetters:ii}=Shopware.Component.getComponentHelper();Js.register("bf-sales-channel-shopware-category-tree",{template:Hs.a,inject:["repositoryFactory"],data:()=>({loadedCategories:[],loadedParentIds:[],translationContext:"sw-category",isLoadingInitialData:!0,showDeleteModal:!1,selectedItem:""}),computed:{categoryRepository(){return this.repositoryFactory.create("category")},categories(){return Object.values(this.loadedCategories)}},created(){this.componentCreated()},methods:{...si(["setSelectedCategories","setShopwareCategories","setMarketplaceCategories","setMarketplace"]),...ii("bfCategoryMapping",["getSelectedCategories","getMarketplaceCategories"]),componentCreated(){this.loadRootCategories().then((()=>{this.isLoadingInitialData=!1}))},onGetTreeItems(e){if(this.loadedParentIds.includes(e))return Promise.resolve();this.loadedParentIds.push(e);const t=new ai(1,500);return t.addFilter(ai.equals("parentId",e)),this.categoryRepository.search(t,ei.api).then((e=>{this.addCategories(e)})).catch((()=>{this.loadedParentIds=this.loadedParentIds.filter((t=>t!==e))}))},onChangeItem(e){this.$store.commit("bfCategoryMapping/setShopwareCategories",e),this.selectedItem=this.getSelectedCategories()},loadRootCategories(){const e=new ai(1,500);return e.addFilter(ai.equals("parentId",null)),this.categoryRepository.search(e,ei.api).then((e=>{this.addCategories(e,!0)}))},searchTreeItems(e){if(this.loadedCategories=[],this.loadedParentIds=[],""===e)return this.componentCreated();{const t=new ai(1,500);return t.addFilter(ai.contains("name",e)),this.categoryRepository.search(t,ei.api).then((e=>{this.addCategories(e,!0)}))}},addCategories(e,t=null,n=!1){e.forEach((e=>{this.loadedCategories[e.id]=e})),this.loadedCategories={...this.loadedCategories}}}});var oi=n("prGt"),ri=n.n(oi),li=n("vs/M"),ci=n.n(li);const{Component:di}=Shopware,{sort:hi,debounce:pi}=Shopware.Utils;di.register("bf-segment-category-tree",{template:ci.a,props:{items:{type:Array,required:!0},parentProperty:{type:String,required:!1,default:"parentId"},afterIdProperty:{type:String,required:!1,default:"afterCategoryId"},rootParentId:{type:String,required:!1,default:null},searchable:{type:Boolean,required:!1,default:!0},title:{type:String,required:!1,default:""}},data:()=>({isLoading:!1,treeItems:[],currentTreeSearch:null}),computed:{hasNoItems(){return 1===this.items.length&&this.items[0]&&this.items[0].isDeleted}},watch:{items:{immediate:!0,handler(){this.treeItems=this.getTreeItems(this.isSearched?null:this.rootParentId)}}},created(){this.isLoading=!0},methods:{getTreeItems(e){const t=[];return this.items.forEach((n=>{null!==e||void 0===this.items.find((e=>e.id===n.parentId))?null!==e&&n.parentId!==e||t.push({data:n,id:n.id,parentId:e,childCount:n.childCount,children:this.getTreeItems(n.id),initialOpened:!1,active:!1,name:n.name,[this.afterIdProperty]:n[this.afterIdProperty]}):this.isLoading=!1})),this.isLoading=!1,hi.afterSort(t,this.afterIdProperty)},getItems(e=this.rootParentId,t=null){this.$emit("get-tree-items",e,t)},onChange(e){this.$emit("on-change",e)},searchItems:pi((function(){this.$emit("search-tree-items",this.currentTreeSearch)}),600)}});var ui=n("p1TD"),mi=n.n(ui);const{Component:gi}=Shopware;gi.register("bf-segment-category-tree-item",{template:mi.a,props:{item:{type:Object,required:!0,default:()=>({})},value:{type:String,required:!1}},data(){return{isLoading:!1,currentSelected:"",active:this.item.active,opened:this.item.initialOpened}},computed:{isOpened(){return this.item.initialOpened&&(this.openTreeItem(!0),this.getTreeItemChildren(this.item),this.item.initialOpened=!1),this.opened},styling(){return{"is--active":this.active,"is--no-children":this.item.childCOunt<=0,"is--opened":this.isOpened}}},updated(){this.componentUpdated()},methods:{componentUpdated(){this.item.children.length>0&&(this.isLoading=!1)},openTreeItem(e=!this.opened){this.opened=e},getTreeItemChildren(e){e.children.length<=0&&(this.isLoading=!0,this.getItems(e.data.id))},getItems(e){return this.$parent.getItems(e)},emitCheckedItem(e){this.$emit("on-change",e)},onChangeItem(e){this.$emit("on-change",e)}}});const{Component:bi,Context:fi}=Shopware,{Criteria:yi}=Shopware.Data;bi.register("bf-sales-channel-shopware-segment-category-tree",{template:ri.a,inject:["repositoryFactory"],data:()=>({loadedCategories:[],loadedParentIds:[],isLoadingInitialData:!0}),computed:{categoryRepository(){return this.repositoryFactory.create("category")},categories(){return Object.values(this.loadedCategories)}},created(){this.componentCreated()},methods:{componentCreated(){this.loadRootCategories().then((()=>{this.isLoadingInitialData=!1}))},onGetTreeItems(e){if(this.loadedParentIds.includes(e))return Promise.resolve();this.loadedParentIds.push(e);const t=new yi(1,500);return t.addFilter(yi.equals("parentId",e)),this.categoryRepository.search(t,fi.api).then((e=>{this.addCategories(e)})).catch((()=>{this.loadedParentIds=this.loadedParentIds.filter((t=>t!==e))}))},onChangeCategory(e){this.$emit("onSelectCategory",e)},loadRootCategories(){const e=new yi(1,500);return e.addFilter(yi.equals("parentId",null)),this.categoryRepository.search(e,fi.api).then((e=>{this.addCategories(e,!0)}))},searchTreeItems(e){if(this.loadedCategories=[],this.loadedParentIds=[],""===e)return this.componentCreated();{const t=new yi(1,500);return t.addFilter(yi.contains("name",e)),this.categoryRepository.search(t,fi.api).then((e=>{this.addCategories(e,!0)}))}},addCategories(e,t=null,n=!1){e.forEach((e=>{this.loadedCategories[e.id]=e})),this.loadedCategories={...this.loadedCategories}}}});var _i=n("ceaw"),wi=n.n(_i);n("67Gi");const{Component:Ci,Context:ki,Mixin:Si}=Shopware,{Criteria:vi}=Shopware.Data,{mapMutations:Pi,mapGetters:Ai,mapState:Mi}=Shopware.Component.getComponentHelper();Ci.register("bf-sales-channel-marketplace-category-tree",{template:wi.a,inject:["BfCategoryService","repositoryFactory"],mixins:[Si.getByName("notification")],data(){return{isLoading:!0,categories:[],activeCategories:[],checkedCategories:[],title:this.$tc("categories.marketplace-default-title")}},created(){this.componentCreated()},computed:{...Mi("bfCategoryMapping",["selectedCategories"]),categoryMappingRepository(){return this.repositoryFactory.create("bf_category_mapping")},salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},async salesChannelType(){const e=new vi;return e.addFilter(vi.equals("id",this.$route.params.id)),await this.salesChannelRepository.search(e,ki.api).then((e=>this.$route.meta.$module.getSalesChannelByTypeId(e.first().typeId)))}},watch:{selectedCategories(e,t){null!==e&&(this.activeCategories=e.filter((e=>e.mapping.salesChannelId===this.$route.params.id)))},salesChannelType(){Promise.resolve(this.salesChannelType).then((e=>{this.title="amazon"===e?this.$tc("categories.amazon-marketplace-title"):this.$tc("categories.ebay-marketplace-title")}))}},methods:{...Pi(["setSelectedCategories","setShopwareCategories","setMarketplaceCategories","setMarketplace"]),...Ai("bfCategoryMapping",["getSelectedCategories"]),removeItem(e){this.categoryMappingRepository.delete(e.mapping.id,ki.api).then((t=>{this.activeCategories=this.activeCategories.filter((t=>t.item.id!==e.item.id)),this.createNotificationSuccess({title:"Success !",message:"Category mapping was successful deleted"})})).catch((e=>{this.createNotificationError({title:"Error !",message:"Deleting mapping was not successful. Please try again!"})}))},componentCreated(){this.loadRootCategories().then((()=>{this.isLoading=!1}))},onChangeRoute(e){},getTreeItems(e){return this.loadChildCategories(e)},searchTreeItems(e){this.isLoading=!0,this.categories=[],this.loadRootCategories(e).then((()=>{this.isLoading=!1}))},checkItem(e){e.checked&&this.checkedCategories.push(e),null!==this.activeCategories&&this.activeCategories.length>=1&&(this.isDisabled=!0),e.checked||(this.checkedCategories=this.checkedCategories.filter(((t,n,a)=>t.id!=e.id))),this.$store.commit("bfCategoryMapping/setMarketplaceCategories",this.checkedCategories)},async loadRootCategories(e){let t=[];return t=void 0!==e&&e.length>0?this.BfCategoryService.findCategoryByName(e):this.BfCategoryService.getRootCategories(),t.then((e=>{this.addCategories(e)}))},async loadChildCategories(e){return this.BfCategoryService.getChildCategories(e).then((e=>{this.addCategories(e)}))},addCategories(e){e.forEach((e=>{this.categories.push({data:e,id:e.id,categoryId:e.external_channels_categories_id,name:e.name,childCount:e.children,parentId:e.parent_id,afterId:e.id-1})}))}}});var Ii=n("Hp9A"),Ti=n.n(Ii);const{Component:xi,State:Ei}=Shopware;xi.extend("bf-sales-channel-unit-mapping-grid","sw-data-grid",{template:Ti.a,props:{unitMappings:{type:Array,required:!0}},data:()=>({selectedUnit:null,showUnitMappingModal:!1}),computed:{currentLocale:()=>Ei.get("session").currentLocale},methods:{getCurrentData(e){let t={};return this.unitMappings.forEach((function(n){null!==n.internalValue&&n.internalValue.toLowerCase()===e.externUnitsId.toLowerCase()&&(t=n)})),t},getExternalName(e){let t="";return this.unitMappings.forEach((function(n){null!==n.internalValue&&n.internalValue.toLowerCase()===e.externUnitsId.toLowerCase()&&(t=n.externalValue)})),t},onEditUnitMappingClick(e){this.selectedUnit=e,this.showUnitMappingModal=!0}}});var Bi=n("v1EL"),zi=n.n(Bi);const{Component:Di,Mixin:$i}=Shopware;Di.register("bf-sales-channel-unit-mapping-modal",{template:zi.a,inject:["bfUnitService"],mixins:[$i.getByName("notification")],props:{unit:{type:Object,required:!0},currentData:{type:Object,required:!0},title:{type:String,required:!0}},data:()=>({columns:[],unitData:[],amazonColumns:[{property:"type",label:"unitMapping.column.type"},{property:"name",label:"unitMapping.column.name"}],amazonUnitData:[{id:1,type:"weight",name:"GR"},{id:2,type:"weight",name:"KG"},{id:3,type:"weight",name:"OZ"},{id:4,type:"weight",name:"LB"},{id:5,type:"weight",name:"MG"},{id:6,type:"volume",name:"cubic-cm"},{id:7,type:"volume",name:"cubic-ft"},{id:8,type:"volume",name:"cubic-in"},{id:9,type:"volume",name:"cubic-m"},{id:10,type:"volume",name:"cubic-yd"},{id:11,type:"volume",name:"cup"},{id:12,type:"volume",name:"fluid-oz"},{id:13,type:"volume",name:"gallon"},{id:14,type:"volume",name:"liter"},{id:15,type:"volume",name:"milliliter"},{id:16,type:"volume",name:"ounce"},{id:17,type:"volume",name:"pint"},{id:18,type:"volume",name:"quart"},{id:19,type:"volume",name:"liters"},{id:20,type:"volume",name:"deciliters"},{id:21,type:"volume",name:"centiliters"},{id:22,type:"volume",name:"milliliters"},{id:23,type:"volume",name:"microliters"},{id:24,type:"volume",name:"nanoliters"},{id:25,type:"volume",name:"picoliters"},{id:26,type:"length",name:"MM"},{id:27,type:"length",name:"CM"},{id:28,type:"length",name:"M"},{id:29,type:"length",name:"IN"},{id:30,type:"length",name:"FT"},{id:31,type:"length",name:"inches"},{id:32,type:"length",name:"feet"},{id:33,type:"length",name:"meters"},{id:34,type:"length",name:"decimeters"},{id:35,type:"length",name:"centimeters"},{id:36,type:"length",name:"millimeters"},{id:37,type:"length",name:"micrometers"},{id:38,type:"length",name:"nanometers"},{id:39,type:"length",name:"picometers"}],ebayColumns:[{property:"name",label:"unitMapping.column.name"}],ebayUnitData:[{id:1,name:"Kg"},{id:2,name:"100g"},{id:3,name:"10g"},{id:4,name:"g"},{id:5,name:"L"},{id:6,name:"100ml"},{id:7,name:"10ml"},{id:8,name:"ml"},{id:9,name:"M"},{id:10,name:"M2"},{id:11,name:"M3"},{id:12,name:"Unit"}]}),computed:{gridColumns(){return this.columns},gridUnitData(){return this.unitData}},created(){this.bfUnitService.setSalesChannelId(this.$route.params.id),this.isLoading=!0,this.bfUnitService.getSalesChannelType().then((e=>{"amazon"===e&&(this.columns=this.amazonColumns,this.unitData=this.amazonUnitData),"ebay"===e&&(this.columns=this.ebayColumns,this.unitData=this.ebayUnitData),this.isLoading=!1})).catch((()=>{this.isLoading=!1}))},methods:{saveData(){if(this.$refs.unitGrid.selectionCount>1)return void this.createNotificationWarning({title:this.$tc("unitMapping.notifications.title.warning"),message:this.$tc("unitMapping.notifications.message.warningTooManySelected")});if(0===this.$refs.unitGrid.selectionCount)return void this.createNotificationWarning({title:this.$tc("unitMapping.notifications.title.warning"),message:this.$tc("unitMapping.notifications.message.warningNoSelection")});const e=Object.values(this.$refs.unitGrid.selection)[0];let t=this.currentData;t.unitId=this.unit.externUnitsId,t.externalValue=e.name,e.hasOwnProperty("type")&&(t.measure=e.type),this.bfUnitService.saveUnitMappingData(t).then((e=>{e.success?this.createNotificationSuccess({title:this.$tc("unitMapping.notifications.title.success"),message:this.$tc("unitMapping.notifications.message.success")}):this.createNotificationError({title:this.$tc("unitMapping.notifications.title.error"),message:this.$tc("unitMapping.notifications.message.error")}),this.$emit("modal-close")})).catch((()=>{this.createNotificationError({title:this.$tc("unitMapping.notifications.title.error"),message:this.$tc("unitMapping.notifications.message.error")}),this.$emit("modal-close")}))}}});var Li=n("M+Iy"),Ni=n.n(Li);const{Component:Fi,State:Oi}=Shopware;Fi.register("bf-sales-channel-detail-unit-mapping",{template:Ni.a,inject:["bfUnitService"],data:()=>({units:null,unitMappings:null,sortBy:"name",isLoading:!1,sortDirection:"ASC"}),computed:{columns(){return this.getColumns()},currentLocale:()=>Oi.get("session").currentLocale},created(){this.bfUnitService.setSalesChannelId(this.$route.params.id),this.getList("*")},methods:{getColumns(){return[{property:"unitsDescription."+this.currentLocale+".unitsName",label:"unitMapping.column.name",primary:!0},{property:"external_name",label:"unitMapping.column.externalName"}]},getList(e){this.isLoading=!0,this.bfUnitService.loadUnitMappingData().then((t=>{this.unitMappings=t.data,this.bfUnitService.loadUnitData(e).then((e=>{this.units=e.data,this.isLoading=!1})).catch((()=>{this.isLoading=!1}))}))}}});var Ri=n("oz3m"),Hi=n("wbFH");const{Module:Ui}=Shopware;Ui.register("bf-sales-channel",{type:"plugin",name:"brickfox-sales-channel",description:"Managing marketplace channels",version:"1.0.0",targetVersion:"1.0.0",color:"#0CD70A",icon:"default-action-share",entity:"sales_channel",snippets:{"de-DE":Ri,"en-GB":Hi},routes:{detail:{component:"bf-sales-channel-detail",path:"detail/:id",redirect:{name:"bf.sales.channel.detail.base"},children:{base:{component:"bf-sales-channel-detail-base",path:"base",children:{amazonConnectionAssistant:{component:"bf-amazon-connection-assistant-index",path:"amazonConnectionAssistant",children:{start:{component:"bf-amazon-connection-assistant-start",path:"start",children:{authorize:{component:"bf-amazon-connection-assistant-start-authorize",path:"authorize"}}},account:{component:"bf-amazon-connection-assistant-account",path:"account",children:{marketplace:{component:"bf-amazon-connection-assistant-account-marketplace",path:"marketplace"},"product-check":{component:"bf-amazon-connection-assistant-account-product",path:"product-check"}}}}},ebayConnectionAssistant:{component:"bf-ebay-connection-assistant-index",path:"ebayConnectionAssistant",children:{start:{component:"bf-ebay-connection-assistant-start",path:"start",children:{authorize:{component:"bf-ebay-connection-assistant-start-authorize",path:"authorize"},"authorize-oauth":{component:"bf-ebay-connection-assistant-start-authorize-oauth",path:"authorize-oauth"}}},account:{component:"bf-ebay-connection-assistant-account",path:"account",children:{marketplace:{component:"bf-ebay-connection-assistant-account-marketplace",path:"marketplace"},"product-check":{component:"bf-ebay-connection-assistant-account-product",path:"product-check"}}}}}}},product:{component:"bf-sales-channel-detail-product-list",path:"product",children:{detail:{path:"detail/:productId",component:"bf-sales-channel-detail-product-detail"}}},mapping:{component:"bf-sales-channel-detail-mapping",path:"mapping"},unit:{component:"bf-sales-channel-detail-unit-mapping",path:"unit-mapping"},"amazon-fba-prime":{component:"bf-sales-channel-detail-amazon-prime-fba",path:"amazon-fba-prime"}}},create:{component:"bf-sales-channel-create",path:"create/:typeId",redirect:{name:"bf.sales.channel.create.base"},children:{base:{component:"bf-sales-channel-create-base",path:"base"}}}},getSalesChannelByTypeId:function(e){switch(e){case"26a9ece25bd14b288b30c3d71e667d2c":return"amazon";case"7ff39608fed04e4bbcc62710b7223966":return"ebay";default:return""}}});var Vi=n("F+lb"),Gi=n.n(Vi);const{Component:qi,Mixin:Ki}=Shopware;qi.register("bf-support",{template:Gi.a,inject:["repositoryFactory","bfSupportService"],mixins:[Ki.getByName("notification"),Ki.getByName("salutation")],props:{showSupportModal:{type:Boolean,default:!1},supportTitle:{type:String,default:""},requestType:{type:String,default:""},marketplace:{type:String,default:""}},created(){this.prepareSupportTitle()},data:()=>({isLoading:!1,userForm:{salutationId:"",name:"",company:"",phoneNumber:"",email:"",message:"",requestAccept:!1},errors:{}}),methods:{sendRequest(){this.isLoading=!0,this.getErrorsVariables();let e=this.userForm;e.salesChannelId=this.$route.params.id,e.requestSubject=this.supportTitle,e.marketplace=this.marketplace,e.requestType=this.requestType,e.languageCode=localStorage.getItem("sw-admin-locale"),this.bfSupportService.sendRequest(this.userForm).then((e=>{e&&201===e.status?(this.$emit("closeSupportModal"),this.createNotificationSuccess({title:this.$tc("bf-support.notification.success.title"),message:this.$tc("bf-support.notification.success.message")})):e.data.forEach(((e,t)=>{let n=e.propertyPath,a=n.charAt(0).toUpperCase()+n.slice(1);this.errors["support"+a+"Error"]=this.getErrorCode(e)})),this.isLoading=!1})).catch((e=>{this.createNotificationError({title:this.$tc("bf-support.notification.error.title"),message:this.$tc("bf-support.notification.error.message")}),this.isLoading=!1}))},getModalTitle(){let e=this.supportTitle;return this.marketplace&&(e+=" "+this.marketplace),e},getErrorCode:e=>({code:e.code}),getErrorsVariables(){this.errors={supportSalutationIdError:null,supportNameError:null,supportCompanyError:null,supportEmailError:null,supportPhoneNumberError:null,supportMessageError:null}},prepareSupportTitle(){""===this.supportTitle&&(this.supportTitle=this.$tc("bf-support.modal.titleSupport"))}}});n("S2ph")},"67Gi":function(e,t,n){var a=n("tMpb");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("6fd4af8f",a,!0,{})},"67bG":function(e,t){e.exports='{% block bf_ebay_connection_assistant_page %}\n    <div class="bf-ebay-connection-assistant">\n        {% block bf_ebay_connection_assistant_page_content %}\n            <bf-ebay-connection-assistant-modal />\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"7CDV":function(e,t,n){var a=n("saVA");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("115221fa",a,!0,{})},8943:function(e,t){e.exports='{% block bf_sales_channel_detail_base_contract %}\n<div class="bf-contract">\n    <sw-container\n        v-if="userAuthorised && currentContract.name === undefined"\n        columns="1fr"\n        class="bf-sales-channel-detail-base__connection-assistant-warning">\n        <sw-alert\n            variant="warning"\n            appearance="notification"\n            :closable="false">\n            {{$tc(\'salesChannel-connectionAssistant.connectionNotAvailable\')}} <br><br>\n            <sw-button\n                :disabled="false"\n                variant="ghost"\n                size="small"\n                :square="false"\n                :block="false"\n                :isLoading="false"\n                @click="openContractModal"\n            >\n                {{$tc(\'salesChannel-connectionAssistant.chooseContract\')}}\n            </sw-button>\n        </sw-alert>\n    </sw-container>\n\n    <sw-container\n        v-if="!userAuthorised"\n        columns="1fr"\n        class="bf-sales-channel-detail-base__connection-assistant-warning">\n        <sw-alert\n            variant="warning"\n            appearance="notification"\n            :closable="false">\n            <p>\n                {{ $tc(\'bf-sales-channel.detail.notAuthorisedText\') }}\n            </p>\n\n            <sw-button\n                :disabled="false"\n                variant="ghost"\n                size="small"\n                :square="false"\n                :block="false"\n                :isLoading="false"\n                @click="showLoginModal = true"\n            >\n                {{ $tc(\'global.login\') }}\n            </sw-button>\n        </sw-alert>\n    </sw-container>\n\n    <sw-card v-if="userAuthorised && currentContract.name" :isLoading="isLoading" :title="$tc(\'bf-sales-channel.detail.contractLabel\')">\n        <sw-container columns="1fr 1fr" class="border-bottom">\n            <div>\n                <div v-if="currentContract.name === undefined">\n                    <strong>\n                        {{ $tc(\'bf-sales-channel.detail.withoutContractTitle\') }}\n                    </strong>\n                </div>\n                <div v-else class="sw-sales-channel-detail-base__description-text">\n                    <div>\n                        <sw-icon name="default-basic-checkmark-circle" color="#37D046" :small="true"></sw-icon>\n                        <strong class="active-license-status">\n                            {{ currentContract.label }}\n                        </strong>\n                    </div>\n                    <div class="p-l">\n                        &euro; {{ currentContract.minPricePerMonth ?? 0 }} / {{ $tc(\'bf-sales-channel.contractModal.month\') }}\n                    </div>\n                </div>\n            </div>\n            <div class="contract-status-section text-right">\n                <span class="status active">\n                    <sw-color-badge color="#37D046" rounded></sw-color-badge>\n                    <strong class="capitalize">\n                        {{ $tc(\'bf-sales-channel.detail.labelInputActive\') }}\n                    </strong>\n                </span>\n            </div>\n        </sw-container>\n\n        <sw-container columns="1fr 1fr 1fr 1fr" class="contract-details">\n            <div>\n                <strong>{{ $tc(\'bf-sales-channel.detail.labelActiveSince\') }}</strong></br>\n                {{ formatDate(currentContract.creationDate) }}\n            </div>\n            <div>\n                <strong>{{ $tc(\'bf-sales-channel.detail.labelNextBilling\') }}</strong></br>\n                {{ formatDate(currentContract.facturaDate) }}\n            </div>\n            <div class="text-right">\n                <sw-button @click="showAgbDialog(currentContract, \'cancel\')">\n                    {{ $tc(\'bf-sales-channel.contractModal.buttonRemove\') }}\n                </sw-button>\n            </div>\n            <div class="text-right">\n                <sw-button variant="ghost" @click="openContractModal">\n                    {{ $tc(\'bf-sales-channel.detail.contractButton\') }}\n                </sw-button>\n            </div>\n        </sw-container>\n    </sw-card>\n\n    {% block bf_sales_channel_detail_base_contract_modal %}\n    <sw-modal\n        v-if="showContractModal && userAuthorised"\n        class="bf-sales-channel-detail-base__modal-contract"\n        ref="modal"\n        variant="large"\n        :title="$tc(\'bf-sales-channel.contractModal.title\')"\n        @modal-close="onCloseContractModal"\n    >\n        {% block bf_sales_channel_detail_base_contract_modal_confirm_text %}\n            <bf-bookable-contracts\n                :bookableContracts="bookableContracts"\n                :currentContract="currentContract"\n                @setNewContract="showAgbDialog"\n                @onRemoveContract="showAgbDialog"\n                @openPermissionModal="openPermissionModal"\n                @openSubProcessorModal="openSubProcessorModal"\n            ></bf-bookable-contracts>\n        {% endblock %}\n\n        {% block bf_sales_channel_detail_base_contract_modal_footer %}\n        <template slot="modal-footer">\n            {% block bf_sales_channel_detail_contract_modal_footer_abort %}\n            <sw-button size="small" @click="onCloseContractModal">\n                {{ $tc(\'sw-sales-channel.detail.buttonCloseDeleteModal\') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n\n    {% block bf_sales_channel_detail_base_contract_cancel_modal %}\n    <sw-modal\n        v-if="showContractCancelModal"\n        class="bf-sales-channel-detail-base__modal-contract"\n        ref="modal"\n        :title="$tc(\'bf-sales-channel.contractCancelModal.title\')"\n        @modal-close="onCloseContractCancelModal"\n    >\n        {% block bf_sales_channel_detail_base_contract_cancel_modal_confirm_text %}\n        <p>\n            {{ $tc(\'bf-sales-channel.contractCancelModal.text\', selectedContract.name,{ name: selectedContract.name }) }}\n        </p>\n        <p>\n            <sw-checkbox-field\n                :label="$tc(\'bf-sales-channel.contractCancelModal.agreementWithCancelingLabel\')"\n                @change="confirmedAgb = $event"\n            ></sw-checkbox-field>\n        </p>\n        {% endblock %}\n\n        {% block bf_sales_channel_detail_base_contract_cancel_modal_footer %}\n        <template slot="modal-footer">\n            {% block bf_sales_channel_detail_contract_cancel_modal_footer_abort %}\n            <sw-button size="small" @click="onCloseContractCancelModal">\n                {{ $tc(\'sw-sales-channel.detail.buttonCloseDeleteModal\') }}\n            </sw-button>\n            {% endblock %}\n\n            {% block bf_sales_channel_detail_contract_cancel_modal_footer_confirm %}\n            <sw-button size="small" @click="onRemoveContract" variant="danger" :disabled="!confirmedAgb">\n                {{ $tc(\'bf-sales-channel.contractModal.buttonRemove\') }}\n            </sw-button>\n            {% endblock %}\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n\n    {% block sw_plugin_store_login_status_login_modal %}\n        <sw-modal :title="$tc(\'sw-extension.my-extensions.tabs.shopwareAccount\')" v-if="showLoginModal" @modal-close="closeLoginModal">\n            <sw-extension-my-extensions-account></sw-extension-my-extensions-account>\n        </sw-modal>\n    {% endblock %}\n\n    {% block swag_markets_permissions__modal %}\n        <sw-modal v-if="showPermissions"\n                  @modal-close="closePermissionsModal"\n                  :title="$tc(\'bf-sales-channel.contractModal.permissionsModalTitle\')">\n            <bf-bookable-contracts-permissions @go-to-sub-processor="closePermissionsModal"></bf-bookable-contracts-permissions>\n            {% block swag_markets_permissions_modal_footer %}\n                <template slot="modal-footer">\n                    {% block swag_markets_permissions_modal_footer__close %}\n                        <sw-button size="small" @click="closePermissionsModal" variant="primary">\n                            {{ $tc(\'bf-sales-channel.contractModal.permissionsClose\') }}\n                        </sw-button>\n                    {% endblock %}\n                </template>\n            {% endblock %}\n        </sw-modal>\n    {% endblock %}\n\n    {% block swag_markets_sub_processor__modal %}\n        <sw-modal v-if="showSubProcessor" @modal-close="closeSubProcessorModal" :title="$tc(\'bf-sales-channel.contractModal.subProcessorTitle\')">\n            <bf-bookable-contracts-sub-processor :subProcessorData="subProcessorData"></bf-bookable-contracts-sub-processor>\n            {% block swag_markets_sub_processor_modal_footer %}\n                <template slot="modal-footer">\n                    {% block swag_markets_sub_processor_modal_footer__close %}\n                        <sw-button size="small" @click="closeSubProcessorModal" variant="primary">\n                            {{ $tc(\'bf-sales-channel.contractModal.permissionsClose\') }}\n                        </sw-button>\n                    {% endblock %}\n                </template>\n            {% endblock %}\n        </sw-modal>\n    {% endblock %}\n</div>\n{% endblock %}\n'},"8LlH":function(e,t){e.exports='{% block bf_sales_channel_detail_amazon_prime_fba %}\n    <div>\n        <bf-sales-channel-amazon-extended-configuration\n            :isSalesChannelAmazon="isSalesChannelAmazon"\n            :salesChannel="salesChannel"\n            :currentContractName="currentContractName"\n            :clientExists="clientExists"\n            :clientInProgress="clientInProgress"\n        ></bf-sales-channel-amazon-extended-configuration>\n        <bf-sales-channel-amazon-fba-prime-shipping-methods\n            :isSalesChannelAmazon="isSalesChannelAmazon"\n            :salesChannel="salesChannel"\n            :currentContractName="currentContractName"\n            :clientExists="clientExists"\n            :clientInProgress="clientInProgress"\n        ></bf-sales-channel-amazon-fba-prime-shipping-methods>\n    </div>\n{% endblock %}\n'},"8ki4":function(e,t){e.exports='{% block sw_card_title %}\n    <slot name="title">\n        <div class="sw-card__title" v-if="title">{{ title }}\n            <sw-help-text v-if="showHelpTextIcon" :text="helpTextDescription" :width="helpTextWidth" tooltipPosition="top">\n            </sw-help-text>\n        </div>\n    </slot>\n{% endblock %}\n'},"8veU":function(e,t){e.exports="{% block bf_sales_channel_detail_content_tab %}\n    {% parent %}\n    <sw-tabs-item\n            :disabled=\"!clientExists || clientInProgress\"\n            :route=\"{ name: 'bf.sales.channel.detail.product', params: { id: $route.params.id } }\">\n        {{ $tc('products.tab-title') }}\n    </sw-tabs-item>\n{% endblock %}\n"},"9+V+":function(e,t,n){},A054:function(e,t,n){},BGZQ:function(e,t){e.exports='{% block bf_sales_channel_variation_properties_grid %}\n    <div class="bf-sales-channel-variation-properties-grid--content">\n        <sw-card class="bf-card"\n                 :title="$tc(\'propertyMapping.card-title.variationProperties\')"\n                 :showHelpTextIcon="true"\n                 :helpTextDescription="$tc(\'propertyMapping.information.message\')"\n                 :helpTextWidth="500">\n            <sw-data-grid\n                :dataSource="variationProperties"\n                :columns="getColumns"\n                :showSelection="false"\n                :showActions="showActions"\n                :allowColumnEdit="false"\n                :allowInlineEdit="true"\n                @dblclick="onDbClickCell"\n                @inline-edit-save="onInlineEditSave"\n                identifer="bf-sales-channel-variation-properties-grid"\n                :isLoading="isLoading">\n                {% block sw_data_grid_columns_slot %}\n\n                    <template #column-selectedVariation="{item, isInlineEdit}">\n                        <template v-if="isInlineEdit">\n                            <sw-single-select\n                                v-model="item.selectedVariation"\n                                :options="[\n                                    { value: \'Color\', label: \'Color\'},\n                                    { value: \'Size\', label: \'Size\'}\n                                ]"\n                                :value="item.selectedVariation"\n                                size="small">\n                            </sw-single-select>\n                        </template>\n                        <template v-else>\n                            {{ item.selectedVariation }}\n                        </template>\n                    </template>\n                    <template #actions="{ item }">\n                        {{ $tc(\'propertyMapping.product-variant-properties.edit\') }}\n                    </template>\n                {% endblock %}\n            </sw-data-grid>\n            {% block swag_markets_variation_properties_grid_empty_state %}\n                <sw-empty-state\n                    v-if="showEmptyStateVariationProperties"\n                    :absolute="false"\n                    :title="$tc(\'propertyMapping.variationProperties.emptyState\')"\n                    :showDescription="false">\n                </sw-empty-state>\n            {% endblock %}\n            {% block swag_markets_variations_properties_grid__pagination %}\n                <sw-pagination :total="total"\n                               :limit="limit"\n                               :page="page"\n                               @page-change="pageChange"\n                               :steps="[5, 10]">\n                </sw-pagination>\n            {% endblock %}\n        </sw-card>\n    </div>\n{% endblock %}\n'},BiAB:function(e,t){e.exports='{% block bf_sales_channel_ebay_extended_configuration %}\n<sw-card\n    v-if="isSalesChannelEbay"\n    :title="$tc(\'salesChannelSettings.card.title.extendedSettings\')">\n    <sw-alert v-if="isDisabled" variant="info" appearance="notification" :showIcon="true" :closable="false">\n        {{ $tc(\'salesChannelSettings.invalidContractInfo\') }}\n    </sw-alert>\n\n    <sw-switch-field\n        :label="$tc(\'salesChannelSettings.ebay.label.enableEbayPlus\')"\n        :value="salesChannel && salesChannel.ebayPlus"\n        :ghostValue="false"\n        :noMarginTop="true"\n        :helpText="$tc(\'salesChannelSettings.ebay.helpText.ebayPlus\')"\n        :disabled="isDisabled"\n        size="small"\n        @change="salesChannel.ebayPlus = $event"\n    >\n    </sw-switch-field>\n</sw-card>\n{% endblock %}\n'},C8ME:function(e,t){const{Component:n}=Shopware,{debounce:a,sort:s}=Shopware.Utils;n.extend("bf-product-category-mapping-tree","sw-tree",{methods:{getTreeItems(e){const t=[];return this.items.forEach((n=>{n.isDeleted||null===e&&void 0!==this.items.find((e=>e.id===n.parentId))||null!==e&&n[this.parentProperty]!==e||(n.id=n.id.toString(),t.push({data:n,id:n.id.toString(),parentId:e,childCount:n[this.childCountProperty],children:this.getTreeItems(n.id),initialOpened:!1,active:!1,checked:!!this.checkItemsInitial,[this.afterIdProperty]:n[this.afterIdProperty]}))})),s.afterSort(t,this.afterIdProperty)}}})},C8QM:function(e,t,n){var a=n("gx/M");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("0329c881",a,!0,{})},EK2K:function(e,t){e.exports='{% block bf_amazon_connection_assistant_account_product %}\n    <div class="bf-amazon-connection-assistant-account-product__content">\n        {% block bf_amazon_connection_assistant_account_product_content_information %}\n            <sw-card-section class="bf-amazon-connection-assistant-modal__content-description">\n                {{ $tc(\'amazon.productCheckDescription\') }}\n            </sw-card-section>\n            <div v-if="hasRetailerProducts" class="bf-amazon-connection-assistant-account-product__content-information">\n                {% block bf_amazon_connection_assistant_account_product_content_information_warning %}\n                    <sw-alert variant="warning" v-if="hasRetailerProducts"\n                              class="bf-amazon-connection-assistant-account-product__content-information-warning">\n                        {{ $tc(\'amazon.productCheckAccountHasAlreadyProducts\') }}\n                    </sw-alert>\n                {% endblock %}\n                {% block bf_amazon_connection_assistant_account_product_content_information_takeover %}\n                    <div class="bf-amazon-connection-assistant-account-product__content-information-takeover">\n                        {% block bf_amazon_connection_assistant_account_product_content_information_takeover_title %}\n                            <h6 class="title">{{ $tc(\'amazon.productCheckBookTransferTitle\') }}</h6>\n                        {% endblock %}\n                        {% block bf_amazon_connection_assistant_account_product_content_information_takeover_content %}\n                            <p>{{ $tc(\'amazon.productCheckBookTransferContent\') }}</p>\n                        {% endblock %}\n                        {% block bf_amazon_connection_assistant_account_product_content_information_takeover_link %}\n                        <sw-button\n                            size="small"\n                            variant="contrast"\n                            @click="$emit(\'showSupportModal\')"\n                            class="bf-amazon-connection-assistant-account-product-content-information-delete-button">\n                            {{ $tc(\'amazon.productCheckBookTransfer\') }}\n                        </sw-button>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n                {% block bf_amazon_connection_assistant_account_product_content_information_delete %}\n                    <div class="bf-amazon-connection-assistant-account-product__content-information-delete">\n                        {% block bf_amazon_connection_assistant_account_product_content_information_delete_title %}\n                            <h6 class="title">{{ $tc(\'amazon.productCheckDeleteExistingTitle\') }}</h6>\n                        {% endblock %}\n                        {% block bf_amazon_connection_assistant_account_product_content_information_delete_content %}\n                            <p>{{ $tc(\'amazon.productCheckDeleteExistingContent\') }}</p>\n                        {% endblock %}\n                        {% block bf_amazon_connection_assistant_account_product_content_information_delete_button %}\n                            <sw-button\n                                size="small"\n                                variant="danger"\n                                link="https://sellercentral.amazon.de/"\n                                class="bf-amazon-connection-assistant-account-product-content-information-delete-button">\n                                {{ $tc(\'amazon.productCheckDeleteExistingBtn\') }}\n                            </sw-button>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </div>\n            <div v-if="!hasRetailerProducts && hasRetailerProducts !== null" class="bf-amazon-connection-assistant-account-product__content-information">\n                {% block bf_amazon_connection_assistant_account_product_content_information_success %}\n                    <sw-alert variant="success"\n                              class="bf-amazon-connection-assistant-account-product__content-information-success">\n                        {{ $tc(\'amazon.productCheckCongrats\') }}\n                    </sw-alert>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        <sw-container align="end" justify="end"\n                      class="bf-amazon-connection-assistant-account-product__content-button-check">\n            {% block bf_amazon_connection_assistant_accout_product_check_button %}\n                <sw-button\n                    v-if="hasRetailerProducts || hasRetailerProducts === null"\n                    size="small"\n                    variant="primary"\n                    :block="true"\n                    @click="productCheck"\n                    v-tooltip="tooltip">\n                    {{$tc(\'amazon.productCheckBtn\')}}\n                </sw-button>\n            {% endblock %}\n        </sw-container>\n        {% block bf_amazon_connection_assistant_confirm_finish_modal %}\n        <sw-modal\n            :title="$t(\'amazon.amazonConfirmFinishModalTitle\')"\n            v-if="showConfirmModal"\n            variant="small"\n            @modal-close="closeModal">\n            {% block bf_amazon_connection_assistant_confirm_fnish_modal_content %}\n                <sw-card>\n                    {{ $tc(\'amazon.amazonConfirmFinishModalMessageFirstPart\') }}<br>\n                    {{ $tc(\'amazon.amazonConfirmFinishModalMessageSecondPart\') }}\n                </sw-card>\n            {% endblock %}\n            {% block bf_amazon_connection_assistant_confirm_finish_footer %}\n                <template #modal-footer>\n                    <sw-button size="small" @click="closeModal">\n                        {{ $tc(\'button.cancel\') }}\n                    </sw-button>\n                    <sw-button size="small" variant="primary" @click="confirmFinishModal">\n                        {{ $tc(\'button.finish\') }}\n                    </sw-button>\n                </template>\n            {% endblock %}\n        </sw-modal>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},EQ2f:function(e,t,n){},"F+lb":function(e,t){e.exports='{% block bf_support %}\n<sw-modal\n    v-if="showSupportModal"\n    ref="modal"\n    variant="small"\n    :title="getModalTitle()"\n    :isLoading="isLoading"\n    @modal-close="$emit(\'closeSupportModal\')"\n>\n    {% block bf_support_form %}\n        <sw-container gap="0px 32px">\n            <sw-container columns="150px 1fr" gap="32px">\n                {% block bf_support_form_salutation_field %}\n                    <sw-entity-single-select\n                        required\n                        validation="required"\n                        class="sw-customer-base-form__salutation-select"\n                        entity="salutation"\n                        labelProperty="displayName"\n                        v-model="userForm.salutationId"\n                        :label="$tc(\'sw-customer.baseForm.labelSalutation\')"\n                        :placeholder="$tc(\'sw-customer.baseForm.placeholderSalutation\')"\n                        :error="errors.supportSalutationIdError">\n                    </sw-entity-single-select>\n                {% endblock %}\n\n                {% block bf_support_form_name_field %}\n                    <sw-text-field\n                        required\n                        validation="required"\n                        v-model="userForm.name"\n                        placeholder="Max Mustermann"\n                        :label="$tc(\'bf-support.modal.nameFieldLabel\')"\n                        :error="errors.supportNameError">\n                    </sw-text-field>\n                {% endblock %}\n            </sw-container>\n\n            <sw-container columns="1fr">\n                {% block bf_support_form_company_field %}\n                    <sw-text-field\n                        required\n                        placeholder="Shopware AG"\n                        :label="$tc(\'sw-customer.addressForm.labelCompany\')"\n                        :error="errors.supportCompanyError"\n                        v-model="userForm.company">\n                    </sw-text-field>\n                {% endblock %}\n\n                {% block bf_support_form_email_field %}\n                    <sw-text-field\n                        required\n                        placeholder="example@mail.com"\n                        :label="$tc(\'sw-customer.baseForm.labelEmail\')"\n                        :error="errors.supportEmailError"\n                        v-model="userForm.email">\n                    </sw-text-field>\n                {% endblock %}\n\n                {% block bf_support_form_phone_field %}\n                    <sw-text-field\n                        placeholder="+49 30 343262211"\n                        v-model="userForm.phoneNumber"\n                        :label="$tc(\'sw-customer.addressForm.labelPhoneNumber\')"\n                        :error="errors.supportPhoneNumberError">\n                    </sw-text-field>\n                {% endblock %}\n\n                {% block bf_support_message_field %}\n                    <sw-textarea-field\n                        type="textarea"\n                        v-model="userForm.message"\n                        :label="$tc(\'bf-support.modal.labelMessage\')"\n                        :placeholder="$tc(\'bf-support.modal.messagePlaceholder\')"\n                        :error="errors.supportMessageError"\n                    ></sw-textarea-field>\n                {% endblock %}\n\n                {% block bf_support_accept_checkbox %}\n                    <sw-checkbox-field\n                        :label="$tc(\'bf-support.modal.agreementWithSendToBrickfox\')"\n                        @change="userForm.requestAccept = $event"\n                    ></sw-checkbox-field>\n                {% endblock %}\n            </sw-container>\n        </sw-container>\n    {% endblock %}\n\n    {% block bf_support_modal_footer %}\n    <template slot="modal-footer">\n        {% block bf_support_footer_abort %}\n        <sw-button size="small" @click="$emit(\'closeSupportModal\')">\n            {{ $tc(\'sw-sales-channel.detail.buttonCloseDeleteModal\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block bf_support_footer_send_request %}\n        <sw-button\n            size="small"\n            variant="primary"\n            :disabled="!userForm.requestAccept"\n            :isLoading="isLoading"\n            @click="sendRequest">\n            {{ $tc(\'bf-support.modal.buttonSendRequest\') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-modal>\n{% endblock %}\n'},FeTi:function(e,t){e.exports='{% block bf_sales_channel_detail_property_transfer %}\n<div>\n    <sw-container columns="1fr" class="bf-sales-channel-detail-base__connection-assistant-warning">\n        <sw-alert variant="warning" appearance="notification" :showIcon="true" :closable="false">\n            {{ $tc(\'bf-property-transfer.tab.warningText\') }}\n        </sw-alert>\n        <sw-alert variant="info" appearance="notification" :closable="false">\n            {{ $tc(\'bf-property-transfer.tab.text\') }}\n        </sw-alert>\n    </sw-container>\n\n    <sw-card class="bf-card" :title="$tc(\'bf-property-transfer.tab.label\')">\n        <div class="bf_property_mapping">\n            {% block sw_property_list_grid %}\n            <sw-entity-listing :items="propertyGroup"\n                               :columns="getPropertyColumns()"\n                               :repository="propertyRepository"\n                               ref="propertyList"\n                               :showSelection="false"\n                               :showActions="false"\n                               :fullPage="false"\n                               :sortBy="sortBy"\n                               :sortDirection="sortDirection"\n                               :isLoading="isLoading"\n                               :allowColumnEdit="false"\n                               :compactMode="true"\n                               identifier="sw-properties-list"\n                               @column-sort="onSortColumn">\n\n                {% block sw_property_list_grid_bound %}\n                <template slot="column-transfer" slot-scope="{ item }">\n                    <sw-field\n                        :disabled="false"\n                        @change="toggleItemCheck($event, item)"\n                        type="checkbox"\n                        :value="checked(item)">\n                    </sw-field>\n                </template>\n                {% endblock %}\n\n            </sw-entity-listing>\n            {% endblock %}\n        </div>\n    </sw-card>\n</div>\n{% endblock %}\n\n'},Fh6L:function(e,t,n){},Fonu:function(e,t,n){var a=n("l9XX");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("676d98fe",a,!0,{})},G8IG:function(e,t){e.exports='{% block sw_sales_channel_defaults_select %}\n<sw-container :title="$tc(\'bf-sales-channel.detail.ebayPaymentMethods\')"\n              :isLoading="loadingPaymentMatching"\n              class="bf-sales-channel-ebay-payment-methods">\n    {% block bf_sales_channel_ebay_payment_container__content %}\n    <sw-container columns="1fr 1fr 1fr" gap="2em">\n        {%  block bf_sales_channel_payment_container_selects__PayPal %}\n            <sw-select-field\n                :label="$tc(\'bf-sales-channel.detail.ebayPaymentMethodPayPal\')"\n                :options="payments"\n                @change="changedEbayPayment($event,\'payPal\')"\n                :value="selectedPayment.payPal.id"\n                required>\n            </sw-select-field>\n        {% endblock %}\n        {%  block bf_sales_channel_payment_container_selects__MoneyXferAcceptedInCheckout %}\n            <sw-select-field\n                :label="$tc(\'bf-sales-channel.detail.ebayPaymentMethodMoneyXferAcceptedInCheckout\')"\n                :options="payments"\n                @change="changedEbayPayment($event,\'moneyXferAcceptedInCheckout\')"\n                :value="selectedPayment.moneyXferAcceptedInCheckout.id"\n                required>\n            </sw-select-field>\n        {% endblock %}\n        {%  block bf_sales_channel_payment_container_selects__CashOnPickup %}\n            <sw-select-field\n                :label="$tc(\'bf-sales-channel.detail.ebayPaymentMethodCashOnPickup\')"\n                :options="payments"\n                @change="changedEbayPayment($event,\'cashOnPickup\')"\n                :value="selectedPayment.cashOnPickup.id"\n                required>\n            </sw-select-field>\n        {% endblock %}\n        {%  block bf_sales_channel_payment_container_selects__COD %}\n            <sw-select-field\n                :label="$tc(\'bf-sales-channel.detail.ebayPaymentMethodCod\')"\n                :options="payments"\n                @change="changedEbayPayment($event,\'cod\')"\n                :value="selectedPayment.cod.id"\n                required>\n            </sw-select-field>\n        {% endblock %}\n        {%  block bf_sales_channel_payment_container_selects__EbayPayments %}\n            <sw-select-field\n                :label="$tc(\'bf-sales-channel.detail.ebayPaymentMethodEbayPayments\')"\n                :options="payments"\n                @change="changedEbayPayment($event,\'ebayPayments\')"\n                :value="selectedPayment.ebayPayments.id"\n                required>\n            </sw-select-field>\n        {% endblock %}\n    {% endblock %}\n    </sw-container>\n</sw-container>\n{% endblock %}\n'},GOhG:function(e,t,n){var a=n("n5Uy");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("7005978c",a,!0,{})},H8AE:function(e,t,n){},HJBI:function(e,t){e.exports='{% block swag_markets_properties_mapping %}\n    <div>\n        {% block swag_markets_properties_grid__content %}\n            <sw-data-grid\n                v-if="!showEmptyState"\n                :dataSource="propertiesMapping"\n                :columns="columns"\n                :allowInlineEdit="true"\n                @inline-edit-save="saveInlineEdit"\n                :showSelection="false"\n                :plainAppearance="true"\n                :isLoading="isLoadingPropertiesMapping"\n                :skeletonItemAmount="limit"\n                style="min-height: 300px">\n                <template slot="column-assigned" slot-scope="{ item }">\n                    <sw-icon v-if="item.assigned" name="small-default-checkmark-line-medium" small\n                             class="is--active"></sw-icon>\n                    <sw-icon v-else name="small-default-x-line-medium" small class="is--inactive"></sw-icon>\n                </template>\n                <template #actions="{ item }">\n                    <sw-context-menu-item @click="showAttributesMappingModalWindow(item)">\n                        {{ $tc(\'attributesMapping.selectAttribute\') }}\n                    </sw-context-menu-item>\n                    <sw-context-menu-item\n                        :disabled="!item.assigned"\n                        variant="danger"\n                        @click="showRemoveAssignmentModal(item)">\n                        {{ $tc(\'attributesMapping.removeAssignment\') }}\n                    </sw-context-menu-item>\n                </template>\n            </sw-data-grid>\n        {% endblock %}\n        {% block swag_markets_attributes_mapping_properties_delete_modal %}\n            <sw-modal\n                v-if="showDeleteModalPropertiesAttributesMapping"\n                class="bf-sales-channel-product-errors-modal"\n                :title="$tc(\'bf-category-segment-mapping.deleteModalWarning\')"\n                @modal-close="showDeleteModalPropertiesAttributesMapping = false">\n                {{ $tc(\'attributesMapping.removeWarningMsg\') }}\n                <template slot="modal-footer">\n                    {% block swag_markets_categories_mapping_footer_cancel %}\n                        <sw-button\n                            @click="closeRemoveAssignmentModal"\n                            size="small">\n                            {{ $tc(\'bf-category-segment-mapping.deleteModalCancelBtn\') }}\n                        </sw-button>\n                    {% endblock %}\n                    {% block swag_markets_attributes_mapping_properties_footer_delete %}\n                        <sw-button\n                            @click="removePropertiesAssignment"\n                            variant="danger"\n                            size="small">\n                            {{ $tc(\'bf-category-segment-mapping.deleteModalDeleteBtn\') }}\n                        </sw-button>\n                    {% endblock %}\n                </template>\n            </sw-modal>\n        {% endblock %}\n        {% block swag_markets_properties_mapping_empty_state %}\n            <sw-empty-state\n                v-else-if="showEmptyState"\n                :absolute="false"\n                :title="$tc(\'attributesMapping.properties.emptyStateText\')"\n                :showDescription="false">\n            </sw-empty-state>\n        {% endblock %}\n        {% block swag_markets_attributes_mapping_modal %}\n            <attributes-mapping-modal\n                :showAttributesMappingModal="showAttributesMappingModal"\n                :attributesMappingModalItem="attributesMappingModalItem"\n                :salesChannelType="salesChannelType"\n                :amazonSegment="amazonSegment"\n                :amazonProductType="amazonProductType"\n                @modal-close-attr-mapping-win="closeAttributesMappingModalWindow"\n                @save-attribute-mapping="saveInlineEdit">\n            </attributes-mapping-modal>\n        {% endblock %}\n        {% block swag_markets_properties_grid__pagination %}\n            <sw-pagination :total="total"\n                           :limit="limit"\n                           :page="page"\n                           @page-change="pageChange"\n                           :steps="[5, 10]">\n            </sw-pagination>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},HMYG:function(e,t){e.exports='{#{% block sw_category_tree_field_input_results_tree %}#}\n{#    <bf-product-category-mapping-tree v-if="term.length <= 0 && categories.length > 0"#}\n{#             :items="categories"#}\n{#             after-id-property="afterCategoryId"#}\n{#             ref="swTree"#}\n{#             @get-tree-items="getTreeItems"#}\n{#             :sortable="false">#}\n\n{#        {% block sw_category_tree_field_input_results_tree_headline %}#}\n{#            <template #headline><span></span></template>#}\n{#        {% endblock %}#}\n\n{#        {% block sw_category_tree_field_input_results_tree_search %}#}\n{#            <template #search><span></span></template>#}\n{#        {% endblock %}#}\n\n{#        {% block sw_category_tree_field_input_results_tree_items %}#}\n{#            <template #items="{#}\n{#                                                    treeItems,#}\n{#                                                    sortable,#}\n{#                                                    draggedItem,#}\n{#                                                    newElementId,#}\n{#                                                    checkItem,#}\n{#                                                    translationContext,#}\n{#                                                    onChangeRoute,#}\n{#                                                    disableContextMenu#}\n{#                                                }">#}\n{#                {% block sw_category_tree_field_input_results_tree_item %}#}\n{#                    <sw-tree-item v-for="item in treeItems"#}\n{#                                  :key="item.id"#}\n{#                                  :item="item"#}\n{#                                  :translationContext="translationContext"#}\n{#                                  :draggedItem="draggedItem"#}\n{#                                  :activeParentIds="selectedCategoriesPathIds"#}\n{#                                  :activeItemIds="selectedCategoriesItemsIds"#}\n{#                                  @check-item="onCheckItem"#}\n{#                                  :sortable="false"#}\n{#                                  shouldFocus#}\n{#                                  :activeFocusId="selectedTreeItem.id"#}\n{#                                  :markInactive="true">#}\n\n{#                        {% block sw_category_tree_field_input_results_tree_item_actions %}#}\n{#                            <template #actions><span></span></template>#}\n{#                        {% endblock %}#}\n\n{#                    </sw-tree-item>#}\n{#                {% endblock %}#}\n{#            </template>#}\n{#        {% endblock %}#}\n{#    </bf-product-category-mapping-tree>#}\n{#{% endblock %}#}'},HO8I:function(e,t){e.exports='{% block bf_sales_channel_shopware_segment_dropdown %}\n    <div class="bf-segment-dropdown-container">\n        <sw-alert v-if="isDisabled" variant="info" appearance="notification" :showIcon="true" :closable="false">\n            {{ $tc(\'salesChannelSettings.invalidContractInfo\') }}\n        </sw-alert>\n\n        {% block bf_sales_channel_shopware_segment_dropdown_input_segment %}\n        <sw-single-select\n            :label="$tc(\'bf-category-segment-mapping.amazonProductSegmentLabel\')"\n            :options="allProductsSegments"\n            :disabled="isDisabled"\n            v-model="selectedSegment"\n            @change="onSelectSegment"\n        ></sw-single-select>\n        {% endblock %}\n\n        {% block bf_sales_channel_shopware_segment_dropdown_input_ %}\n        <sw-single-select\n            v-if="productsTypes.length > 1"\n            :label="$tc(\'bf-category-segment-mapping.amazonProductTypeLabel\')"\n            :options="productsTypes"\n            :disabled="isDisabled"\n            v-model="selectedType"\n            @change="onSelectType"\n        ></sw-single-select>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},Hp9A:function(e,t){e.exports='{% block sw_data_grid_columns_slot %}\n    <slot :name="`column-${column.property}`"\n          v-bind="{ item, itemIndex, column, columnIndex, compact }">\n\n        <template v-if="column.property === \'external_name\'">\n            {{ getExternalName(item) }}\n        </template>\n        <template v-else>\n            {{ renderColumn(item, column) }}\n        </template>\n    </slot>\n{% endblock %}\n\n{% block sw_data_grid_slot_actions %}\n<slot name="detail-action" v-bind="{ item }">\n    <sw-context-menu-item class="sw-entity-listing__context-menu-edit-action"\n                          @click="onEditUnitMappingClick(item)">\n        {{ $tc(\'global.default.edit\') }}\n    </sw-context-menu-item>\n</slot>\n{% endblock %}\n\n{% block sw_data_grid_slot_bulk_modals %}\n<bf-sales-channel-unit-mapping-modal\n    v-if="showUnitMappingModal"\n    :title="selectedUnit.unitsDescription[currentLocale].unitsName"\n    :unit="selectedUnit"\n    :currentData="getCurrentData(selectedUnit)"\n    @modal-close="showUnitMappingModal = false; $emit(\'load-unit-mapping\'); $emit(\'modal-close\')">\n</bf-sales-channel-unit-mapping-modal>\n{% endblock %}\n'},IPK3:function(e,t,n){},IWKV:function(e,t,n){var a=n("Rt0r");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("0549028c",a,!0,{})},InPZ:function(e,t,n){var a=n("WlqC");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("586c0c34",a,!0,{})},Jinz:function(e,t,n){var a=n("Qp0S");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("4d92f2bc",a,!0,{})},KGtH:function(e,t,n){},KO17:function(e,t,n){var a=n("pS6h");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("c1d6fe4a",a,!0,{})},KdMB:function(e,t){e.exports='{% block bf_ebay_connection_assistant_logo %}\n    <img class="bf-ebay-connection-assistant__logo"\n         :src="\'swagmarkets/static/img/ebay_logo_final.svg\' | asset"/>\n{% endblock %}\n'},L5YD:function(e,t){e.exports="{% block sw_data_grid_columns_render_value %}\n    <span class=\"sw-data-grid__cell-value\">\n        <template v-if=\"column.property === 'mandatory'\">\n            <sw-color-badge :class=\"item.mandatory ? 'is--success' : 'is--error'\"></sw-color-badge>\n        </template>\n        <template v-else>\n            {{ renderColumn(item, column) }}\n        </template>\n    </span>\n{% endblock %}\n"},LJWa:function(e,t,n){var a=n("A054");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("efc7d2dc",a,!0,{})},LsQ3:function(e,t){e.exports='{% block bf_ebay_connection_assistant_start_authorize_oauth_content %}\n    <sw-container>\n        {% block bf_ebay_connection_assistant_modal_content_description %}\n            <sw-card-section class="bf-ebay-connection-assistant-modal__content-description">\n                {{ $tc(\'ebay.authoriseOAuthDescription\') }}\n            </sw-card-section>\n        {% endblock %}\n        {% block bf_ebay_connection_assistant_start_authorize_oauth_content %}\n        <sw-card-section divider="right">\n            <div class="bf-ebay-connection-assistant-start-authorize__content-left">\n                {% block bf_ebay_connection_assistant_start_authorize_content_left_form %}\n                {% block bf_ebay_connection_assistant_start_authorize_content_left_form_button_connect %}\n                <sw-button\n                    @click="authorizeOAuth"\n                    size="small"\n                    variant="primary"\n                    :block="true">\n                    {{ $tc(\'button.connect\') }}\n                </sw-button>\n                {% endblock %}\n                {% endblock %}\n            </div>\n        </sw-card-section>\n        {% endblock %}\n    </sw-container>\n{% endblock %}\n'},"M+Iy":function(e,t){e.exports='{% block bf_sales_cahnnel_detail_unit_mapping %}\n<div>\n    <sw-card\n        class="bf-card"\n        :title="$tc(\'unitMapping.card-title\')"\n        :showHelpTextIcon="true"\n        :helpTextDescription="$tc(\'unitMapping.infoText\')"\n        :helpTextWidth="500"\n        >\n        {% block bf_sales_cahnnel_detail_property_list_grid %}\n            <bf-sales-channel-unit-mapping-grid\n                v-if="units"\n                :dataSource="units"\n                :columns="columns"\n                ref="unitMappingGrid"\n                identifier="unitMappingGrid"\n                :showSelection="false"\n                :fullPage="false"\n                :sortBy="sortBy"\n                :sortDirection="sortDirection"\n                :isLoading="isLoading"\n                :compactMode="false"\n                :unitMappings="unitMappings"\n                @load-unit-mapping="getList(\'*\')">\n            </bf-sales-channel-unit-mapping-grid>\n        {% endblock %}\n        {% block swag_markets_category_mapping_empty_state %}\n            <sw-empty-state\n                style="position: relative;"\n                v-if="unitMappings == null || unitMappings.length == 0"\n                :title="$tc(\'unitMapping.noScaleUnit\')"\n                :showDescription="false">\n            </sw-empty-state>\n        {% endblock %}\n    </sw-card>\n</div>\n{% endblock %}\n'},MVdB:function(e,t){e.exports='<sw-card v-if="showTokenCard" :title="$tc(\'bf-sales-channel.detail.ebayExpireTokenTitle\')" :isLoading="isLoading">\n    <sw-alert variant="info" appearance="system" :showIcon="true" :closable="false" v-if="!clientRdy && !errorLoadingTokens">\n        {{ $tc(\'bf-sales-channel.detail.ebayTokenSystemInfo\') }}\n    </sw-alert>\n    <sw-alert variant="error" appearance="system" :showIcon="true" :closable="false" v-if="errorLoadingTokens">\n        {{ $tc(\'bf-sales-channel.detail.ebayErrorLoadingTokens\') }}\n    </sw-alert>\n    <sw-container columns="1fr 1fr">\n        <sw-description-list>\n            <dt style="text-align: center">{{ $tc(\'bf-sales-channel.detail.ebayExpireTokenOAuthTitle\') }}\n                <span v-html="oAuthTokenDate" style="color: #2a8844"></span>\n            </dt>\n            <dd>\n                <sw-button\n                    :disabled="!clientRdy || errorLoadingTokens || errorOAuthTokenLink"\n                    variant="ghost" size="small"\n                    :square="false" :block="true"\n                    :isLoading="false"\n                    @click="authorizeOAuthToken">\n                    {{ $tc(\'bf-sales-channel.detail.ebayExtendTokenOAuthBtn\') }}\n                </sw-button>\n            </dd>\n        </sw-description-list>\n        <sw-description-list>\n            <dt style="text-align: center">{{ $tc(\'bf-sales-channel.detail.ebayExpireTokenAuthTitle\') }}\n                <span v-html="authTokenDate"></span>\n            </dt>\n            <dd>\n                <sw-button\n                    :disabled="!clientRdy || errorLoadingTokens || errorAuthTokenLink"\n                    variant="ghost" size="small"\n                    :square="false"\n                    :block="true"\n                    :isLoading="false"\n                    @click="authorizeAuthToken">\n                    {{$tc(\'bf-sales-channel.detail.ebayExtendTokenAuthBtn\')}}\n                </sw-button>\n            </dd>\n        </sw-description-list>\n    </sw-container>\n</sw-card>\n'},MXRk:function(e,t){e.exports='{% block swag_markets_mapping_content %}\n    <div class="bf-sales-channel-detail-mapping-content">\n        {% block swag_markets_mapping_segment %}\n            <bf-sales-channel-segment-mapping\n                :clientExists="clientExists"\n                :clientInProgress="clientInProgress"\n                :currentContractName="currentContract.name">\n            </bf-sales-channel-segment-mapping>\n        {% endblock %}\n\n        {% block swag_markets_category_mapping_grid_component %}\n            <bf-sales-channel-category-mapping :salesChannelType="marketplaceName"\n                                               :categoriesReloadTriggerEvent="categoriesReloadTriggerEvent">\n            </bf-sales-channel-category-mapping>\n        {% endblock %}\n\n        {% block swag_markets_attributes_mapping %}\n            <bf-sales-channel-attributes-mapping\n                :salesChannelType="marketplaceName"\n                :amazonSegment="amazonSegment"\n                :amazonProductType="amazonProductType">\n            </bf-sales-channel-attributes-mapping>\n        {% endblock %}\n        {% block swag_markets_variations_properties %}\n            <bf-sales-channel-variation-properties-grid\n                v-if="marketplaceName == \'amazon\'">\n            </bf-sales-channel-variation-properties-grid>\n        {% endblock %}\n\n        {% block swag_markets_mapping_unit %}\n            <bf-sales-channel-detail-unit-mapping></bf-sales-channel-detail-unit-mapping>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},MYV8:function(e,t,n){var a=n("jpfF");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("0b10282a",a,!0,{})},MZ2d:function(e,t){e.exports='<sw-card :title="$tc(\'bf-sales-channel.detail.amazonFbaPrimeShippingMethodsTitle\')" :isLoading="isLoading">\n    <sw-alert v-if="isDisabled" variant="info" appearance="notification" :showIcon="true" :closable="false">\n        {{ $tc(\'salesChannelSettings.invalidContractInfo\') }}\n    </sw-alert>\n    {% block bf_sales_channel_amazon_fba_shipping_methods_matching %}\n        <sw-container columns="1fr 1fr" gap="0px 30px">\n            <sw-single-select\n                :label="$tc(\'bf-sales-channel.detail.amazonFbaPrimeFbaLabel\')"\n                :options="shippingMethods"\n                v-model="amazonFbaPrimeShippingMethods.fba.shippingMethodId"\n                :helpText="$tc(\'bf-sales-channel.detail.amazonFbaPrimeFbaHelpText\')"\n                :disabled="isDisabled"\n                @change="changedItem(arguments, \'fba\')">\n            </sw-single-select>\n            <sw-single-select\n                :label="$tc(\'bf-sales-channel.detail.amazonFbaPrimePrimeLabel\')"\n                v-model="amazonFbaPrimeShippingMethods.prime.shippingMethodId"\n                :options="shippingMethods"\n                :helpText="$tc(\'bf-sales-channel.detail.amazonFbaPrimePrimeHelpText\')"\n                :disabled="isDisabled"\n                @change="changedItem(arguments, \'prime\')">\n            </sw-single-select>\n            <sw-single-select\n                :label="$tc(\'bf-sales-channel.detail.amazonFbaPrimePrimeNextDayLabel\')"\n                v-model="amazonFbaPrimeShippingMethods.primeNextDay.shippingMethodId"\n                :options="shippingMethods"\n                :helpText="$tc(\'bf-sales-channel.detail.amazonFbaPrimePrimeNextDayHelpText\')"\n                :disabled="isDisabled"\n                @change="changedItem(arguments, \'primeNextDay\')">\n            </sw-single-select>\n            <sw-single-select\n                :label="$tc(\'bf-sales-channel.detail.amazonFbaPrimePrimeSecondDayLabel\')"\n                v-model="amazonFbaPrimeShippingMethods.primeSecondDay.shippingMethodId"\n                :options="shippingMethods"\n                :helpText="$tc(\'bf-sales-channel.detail.amazonFbaPrimePrimeSecondDayHelpText\')"\n                :disabled="isDisabled"\n                @change="changedItem(arguments, \'primeSecondDay\')">\n            </sw-single-select>\n        </sw-container>\n    {% endblock %}\n</sw-card>\n'},Mula:function(e,t,n){var a=n("Ou/O");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("2b435b17",a,!0,{})},MxlZ:function(e,t,n){},NqcO:function(e,t,n){var a=n("dlsN");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("5b3222de",a,!0,{})},Ntwa:function(e,t){Shopware.State.registerModule("bfCategoryMapping",{namespaced:!0,state:{selectedCategories:null,shopwareCategories:null,marketplaceCategories:null,marketplace:null,categoriesMappingStorage:{}},mutations:{setSelectedCategories(e,t){e.selectedCategories=t},setShopwareCategories(e,t){e.shopwareCategories=t},setMarketplaceCategories(e,t){e.marketplaceCategories=t},setMarketplace(e,t){e.marketplace=t},setCategoriesMappingStorage(e,t){e.categoriesMappingStorage=t}},actions:{},getters:{getSelectedCategories:e=>e.selectedCategories,getShopwareCategories:e=>e.shopwareCategories,getMarketplaceCategories:e=>e.marketplaceCategories,getMarketplace:e=>e.marketplace,getCategoriesMappingStorage:e=>e.categoriesMappingStorage}})},O0PL:function(e,t,n){var a=n("KGtH");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("ebf3ca38",a,!0,{})},OLEX:function(e,t){e.exports='{% block bf_sales_channel_product_detail %}\n    <div class="bf-sales-channel-detail-category-content">\n        {% block bf_sales_channel_product_detail_content %}\n            <sw-card class="bf-card" :title="$tc(\'products.title\')" large>\n                <div class="bf-product-detail__toolbar">\n                    <sw-container\n                        columns="1fr"\n                        v-if="!userAuthorised">\n                        <sw-alert\n                            variant="warning"\n                            appearance="notification"\n                            :closable="false">\n                            {{ $tc(\'bf-sales-channel.detail.notAuthorisedText\') }}\n                            <sw-button\n                                :disabled="false"\n                                variant="ghost"\n                                size="small"\n                                :square="false"\n                                :block="false"\n                                :isLoading="false"\n                                @click="showLoginModal = true">\n                                {{ $tc(\'global.login\') }}\n                            </sw-button>\n                        </sw-alert>\n                    </sw-container>\n                    <sw-container\n                        columns="1fr minmax(50px, max-content)"\n                        gap="0 10px"\n                        v-if="userAuthorised && currentContract.name === undefined">\n                        <b>{{ $tc(\'products.no-license\') }}</b>\n                    </sw-container>\n                    <sw-container>\n                        <bf-collapse @item-expand="expand">\n                            <div slot="header">Filter\n                                <sw-icon name="default-action-filter"></sw-icon>\n                                <sw-icon name="default-arrow-head-down" size="10" v-if="!isExpanded"></sw-icon>\n                                <sw-icon name="default-arrow-head-up" size="10" v-else></sw-icon>\n                            </div>\n                            <div slot="content">\n                                <sw-container columns="1fr">\n                                    <bf-filter-panel\n                                        entity="product"\n                                        :storeKey="storeKey"\n                                        :filters="listFilter"\n                                        :defaults="defaultFilters"\n                                        @criteria-changed="criteriaChanged">\n                                    </bf-filter-panel>\n                                </sw-container>\n                            </div>\n                        </bf-collapse>\n                    </sw-container>\n                    <sw-container\n                        columns="1fr"\n                        gap="0 10px"\n                        v-if="userAuthorised && currentContract.name">\n                        <br>\n                        <span :class="dangerZone ? \'danger\' : warningZone ? \'warning\' : \'success\'">\n                            <b style="color: #5a6d80">{{ currentContract.name }}:</b>\n                            {{ total ?? 0 }} <span v-if="channelLimit > 0">/ {{ channelLimit }}</span>\n                        </span>\n                    </sw-container>\n                    <sw-container v-else>\n                        <br><span>&nbsp;</span>\n                    </sw-container>\n                    <sw-container>\n                        <sw-simple-search-field\n                            v-model="searchWord"\n                            variant="form"\n                            :delay="50"\n                            @change="getList"\n                        ></sw-simple-search-field>\n                    </sw-container>\n                </div>\n\n                {% block bf_sales_channel_product_grid %}\n                    <bf-sales-channel-product-grid\n                        :items="products"\n                        :shopProductData="shopProductData"\n                        :columns="columns"\n                        :repository="productRepository"\n                        :showSelection="false"\n                        :isLoading="isLoading"\n                        :fullPage="false"\n                        :sortBy="sortBy"\n                        :sortDirection="sortDirection"\n                        :naturalSorting="naturalSorting"\n                        :criteriaLimit="limit"\n                        :allowColumnEdit="false"\n                        :marketplace="marketplace"\n                        :marketplaceName="marketplaceName"\n                        :currentContract="currentContract"\n                        @onOpenProductErrorsModal="openProductErrorsModal"\n                        @paginateBf="paginateBf"\n                    >\n                    </bf-sales-channel-product-grid>\n                {% endblock %}\n\n                <sw-modal\n                    v-if="showProductsErrorsModal"\n                    class="bf-sales-channel-product-errors-modal"\n                    ref="modal"\n                    variant="large"\n                    :title="$tc(\'products.modalErrors.title\')"\n                    @modal-close="showProductsErrorsModal = false">\n                    {% block bf_sales_channel_product_grid_errors_modal_text %}\n                        <p>\n                            {{ $tc(\'products.modalErrors.text\') }}\n                        </p>\n                    {% endblock %}\n\n                    {% block bf_sales_channel_product_grid_errors_modal_table %}\n                        <sw-data-grid\n                            :dataSource="shopProductsErrors"\n                            :columns="getErrorColumns()"\n                            :showSelection="false"\n                            :showActions="false"\n                        >\n                        </sw-data-grid>\n                    {% endblock %}\n\n                    {% block bf_sales_channel_product_grid_errors_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block bf_sales_channel_product_grid_errors_modal_footer_abort %}\n                                <sw-button size="small" @click="showProductsErrorsModal = false">\n                                    {{ $tc(\'sw-sales-channel.detail.buttonCloseDeleteModal\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n\n            </sw-card>\n        {% endblock %}\n        {% block sw_plugin_store_login_status_login_modal %}\n            <sw-modal :title="$tc(\'sw-extension.my-extensions.tabs.shopwareAccount\')" v-if="showLoginModal"\n                      @modal-close="closeLoginModal">\n                <sw-extension-my-extensions-account></sw-extension-my-extensions-account>\n            </sw-modal>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},"OQ+u":function(e,t){e.exports='{% block bf_amazon_connection_assistant_start_authorize_content %}\n    <sw-container >\n        {% block bf_amazon_connection_assistant_modal_content_descritpion %}\n            <sw-card-section class="bf-amazon-connection-assistant-modal__content-description">\n                {{ $tc(\'amazon.authoriseDescription\') }}\n            </sw-card-section>\n        {% endblock %}\n        {% block bf_amazon_connection_assistant_start_authorize_content_right %}\n            <sw-card-section>\n                <h6 class="bf-amazon-connection-assistant-start-authorize__content-title">{{ $tc(\'amazon.manualConnect\') }}</h6>\n                {% block bf_amazon_connection_assistant_start_authorize_content_right_form %}\n                    <sw-card :hero="true" class="bf-amazon-connection-assistant-start-authorize__content-card">\n                        {% block bf_amazon_connection_assistant_start_authorize_content_righ_form_input_retailer %}\n                            <sw-text-field\n                                :placeholder="$tc(\'amazon.retailerIdPlaceHolderInput\')"\n                                :label="$tc(\'amazon.retailerId\')"\n                                v-model="retailerId"\n                                validation="required"\n                                required\n                            ></sw-text-field>\n                        {% endblock %}\n                        {% block bf_amazon_connection_assistant_start_authorize_content_right_form_input_token %}\n                            <sw-text-field\n                                :placeholder="$tc(\'amazon.mwsTokenPlaceHolderInput\')"\n                                :label="$tc(\'amazon.mwsToken\')"\n                                v-model="mwsToken"\n                                validation="required"\n                                required\n                            ></sw-text-field>\n                        {% endblock %}\n                        {% block bf_amazon_connection_assistant_start_authorize_content_right_form_button_connect %}\n                        <sw-button\n                            @click="authorizeManual"\n                            size="small"\n                            variant="primary"\n                            :block="true">\n                            {{$tc(\'button.connect\')}}\n                        </sw-button>\n                        {% endblock %}\n                        <br>\n                        {% block bf_amazon_connection_assistant_start_authorize_mws_notification %}\n                            <sw-alert variant="info" appearance="notification" :showIcon="true" :closable="false">\n                                <sw-collapse>\n                                    <div slot="header"><strong>{{ $tc(\'amazon.howTo.mwsNotificationHowToTitle\') }}</strong></div>\n                                    <div slot="content">\n                                        <p>\n                                            <span v-html="howToFirstPart"></span><br>\n                                            {{ $tc(\'amazon.howTo.mwsNotificationHowToSecondPart\') }}<br><br>\n                                            <ul>\n                                                    <li><strong>{{ $tc(\'amazon.howTo.mwsNotificationHowToUser\') }}</strong></li>\n                                                    <li><strong>{{ $tc(\'amazon.howTo.mwsNotificationHowToPassword\') }}</strong></li>\n                                            </ul><br>\n                                            {{ $tc(\'amazon.howTo.mwsNotificationHowToLastPart\') }}\n                                        </p>\n                                    </div>\n                                </sw-collapse>\n                            </sw-alert>\n                        {% endblock %}\n                    </sw-card>\n                {% endblock %}\n            </sw-card-section>\n        {% endblock %}\n    </sw-container>\n{% endblock %}\n'},OVF6:function(e,t,n){var a=n("+y/E");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("1aa251dd",a,!0,{})},OeE3:function(e,t){e.exports='{% block bf_ebay_connection_assistant_modal %}\n<div>\n    <sw-modal :title="title"\n              class="bf-ebay-connection-assistant-modal"\n              v-if="showModal"\n              @modal-close="closeModal"\n              :isLoading="isLoading">\n        {% block bf_ebay_connection_assistant_modal_content %}\n            {% block bf_ebay_connection_assistant_modal_content_title %}\n                <bf-ebay-connection-assistant-logo/>\n            {% endblock %}\n            <div class="bf-ebay-connection-assistant-modal__content">\n                {% block bf_ebay_connection_assistant_modal_content_page %}\n                    <div class="bf-ebay-connection-assistant-modal__content-page">\n                        <router-view\n                            @set-title="setTitle"\n                            @ca-redirect="redirect"\n                            @ca-stepsToGetBack="addStepsToGetBack"\n                            @ca-setAccountData="setAccountData"\n                            @ca-setNextBtnState="setNextBtnState"\n                            @ca-isLoading="setIsLoadingState"\n                            @ca-resetNextBtnIsClicked="resetNextBtnIsClicked"\n                            @modal-close="closeModal"\n                            @ca-sleep="sleep"\n                            @ca-startCheckTokenState="startCheckTokenState"\n                            @showSupportModal="showSupportModal = true"\n                            @ca-startCheckOAuthTokenState="startCheckOAuthTokenState"\n                            :showSupportModal="showSupportModal"\n                            :nextBtnIsClicked="nextBtnIsClicked">\n                        </router-view>\n                    </div>\n                {% endblock %}\n            </div>\n        {% endblock %}\n        {% block bf_ebay_connection_assistant_modal_footer %}\n        <template #modal-footer>\n            <sw-button\n                size="small"\n                @click="closeModal">\n                {{ $tc(\'button.cancel\') }}\n            </sw-button>\n            <sw-button :disabled="nextIsDisabled" size="small" variant="primary" @click="onClickNext">\n                {{ $tc(\'button.next\') }}\n            </sw-button>\n        </template>\n        {% endblock %}\n    </sw-modal>\n\n    <bf-support\n        marketplace="ebay"\n        requestType="product_migration_request"\n        :showSupportModal="showSupportModal"\n        :supportTitle="$tc(\'bf-support.modal.titleTransferProducts\')"\n        @closeSupportModal="showSupportModal = false"\n    ></bf-support>\n</div>\n{% endblock %}\n'},OfwT:function(e,t){e.exports='{% block bf_ebay_connection_assistant_account %}\n    <div class="bf-ebay-connection-assistant-account">\n        {% block bf_ebay_connection_assistant_account_content %}\n            <div class="bf-ebay-connection-assistant-account__content">\n                <sw-card title="Account connected" large>\n                    <sw-container columns="auto 1fr auto">\n                        <sw-card-section slim>\n                            {% block bf_ebay_connection_assistant_account_content_avatar %}\n                                <div class="bf-ebay-connection-assistant-account__content-avatar">\n                                    <sw-avatar\n                                        color="#189eff"\n                                        size="40px"\n                                        :firstName="user.firstName"\n                                        :lastName="user.lastName"\n                                        style="margin: 0 10px"></sw-avatar>\n                                </div>\n                            {% endblock %}\n                        </sw-card-section>\n                        <sw-card-section>\n                            {% block bf_ebay_connection_assistant_account_content_user_details %}\n                                <div class="bf-ebay-connection-assistant-account__content-user-details">\n                                    <h6>{{ user.firstName }} {{ user.lastName }}</h6>\n                                    <p>{{ user.email }}</p>\n                                </div>\n                            {% endblock %}\n                        </sw-card-section>\n                        <sw-card-section>\n                            {% block bf_ebay_connection_assistant_account_content_button_group %}\n                                <div class="bf-ebay-connection-assistant-account__content-button-group">\n                                    <sw-button size="small">Disconnect</sw-button>\n                                </div>\n                            {% endblock %}\n                        </sw-card-section>\n                    </sw-container>\n                </sw-card>\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},OgIt:function(e,t){const{Application:n}=Shopware,{ApiService:a}=Shopware.Classes;class s extends a{constructor(e,t,n){super(e,t,n),this.localStorageKey="SwagMarketsBearerToken",this.config={},this.headers={}}getSbpHeaders(e){return{"X-Shopware-Platform-Token":e.longLifeToken,"X-Shopware-Shop-Secret":e.shopSecret}}getSwQueryParams(){return this.getUserInformation("user-information").then((e=>this.serialiseObjectInQueryParameters(e)))}serialiseObjectInQueryParameters(e){let t=[];for(let n in e)e.hasOwnProperty(n)&&t.push(encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return"?"+t.join("&")}getUserInformation(e){return this.httpClient.get("swagMarkets/config/"+e,{headers:this.getBasicHeaders()}).then((e=>e.data.data)).catch((e=>e.response))}setUserShopId(e){return this.httpClient.post("swagMarkets/config/set-shop-id",{shopId:e},{headers:this.getBasicHeaders()}).then((e=>e.data.data)).catch((e=>e.response))}getContracts(){return this.getUserInformation("user-token").then((e=>this.getSwQueryParams().then((t=>this.httpClient.get(e.url+this.apiEndpoint+t,{headers:this.getSbpHeaders(e)}).then((e=>e.data))))))}setContract(e){return this.getUserInformation("user-token").then((t=>this.getSwQueryParams().then((n=>this.httpClient.post(t.url+this.apiEndpoint+n,{contractName:e},{headers:this.getSbpHeaders(t)}).then((e=>e))))))}cancelContract(e){return this.getUserInformation("user-token").then((t=>this.getSwQueryParams().then((n=>this.httpClient.post(t.url+this.apiEndpoint+"/"+e+"/cancellation"+n,{},{headers:this.getSbpHeaders(t)}).then((e=>e))))))}}n.addServiceProvider("bfContractService",(e=>{const t=n.getContainer("init");return new s(t.httpClient,e.loginService,"/swplatform/plugin/SwagMarkets/servicecontracts")}))},Ol78:function(e,t,n){},"Ou/O":function(e,t,n){},PP92:function(e,t){e.exports='{% block bf_sales_channel_detail %}\n    <sw-page class="bf-sales-channel-detail">\n        {% block bf_sales_channel_detail_header %}\n            <template slot="smart-bar-header">\n                {% block bf_sales_channel_detail_header_headline %}\n                    <h2>{{ placeholder(salesChannel, \'name\', $tc(\'sw-sales-channel.detail.textHeadline\')) }}</h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block bf_sales_channel_detail_actions %}\n            <template slot="smart-bar-actions">\n                {% block bf_sales_channel_detail_action_save %}\n                    <sw-button-process\n                        class="bf-sales-channel-detail__save-action"\n                        :isLoading="isLoading"\n                        :processSuccess="isSaveSuccessful"\n                        :disabled="isLoading"\n                        variant="primary"\n                        @process-finish="saveFinish"\n                        v-tooltip.bottom="toolTipSave"\n                        @click.prevent="onSave">\n                        {{ $tc(\'sw-sales-channel.detail.buttonSave\') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block bf_sales_channel_detail_language_switch %}\n            <sw-language-switch\n                slot="language-switch"\n                @on-change="onChangeLanguage"\n                :saveChangesFunction="saveOnLanguageChange"\n                :abortChangeFunction="abortOnLanguageChange">\n            </sw-language-switch>\n        {% endblock %}\n\n        {% block bf_sales_channel_detail_content %}\n            <sw-card-view slot="content">\n\n                {% block bf_saels_channel_detail_content_language_info %}\n                    <sw-language-info\n                        :entityDescription="placeholder(salesChannel, \'name\', $tc(\'sw-sales-channel.detail.textHeadline\'))">\n                    </sw-language-info>\n                {% endblock %}\n\n                {% block bf_sales_channel_detail_content_tabs %}\n                    <sw-tabs class="bf-sales-channel-detail__tabs">\n                        {% block bf_sales_channel_detail_content_tab_general %}\n                            <sw-tabs-item\n                                :route="{name: \'bf.sales.channel.detail\', params: {id: $route.params.id} }">\n                                {{ $tc(\'tabs.general\') }}\n                            </sw-tabs-item>\n                        {% endblock %}\n                        \x3c!-- TODO - the following must inject new elements somehow --\x3e\n                        {% block bf_sales_channel_detail_content_tab %}{% endblock %}\n                    </sw-tabs>\n                {% endblock %}\n\n                {% block bf_sales_channel_detail_content_view %}\n                    <router-view\n                        :salesChannel="salesChannel"\n                        class="bf-sales-channel-detail-content-view"\n                        :isLoading="isLoading"\n                        :key="$route.params.id"\n                        :salesChannelType="salesChannelType"\n                        @setPolicy="setPolicy">\n                    </router-view>\n                {% endblock %}\n            </sw-card-view>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n'},Qp0S:function(e,t,n){},Qy8E:function(e,t){e.exports='{% block bf_bookable_contracts %}\n    <sw-container columns="1fr" gap="20px" class="bf-bookable-contracts">\n        <table>\n            <tr>\n                <td>\n                    {% block swag_markets_terms_and_conditions__content %}\n                        <div>\n                            <sw-checkbox-field\n                                class="swag-markets-contract-checkbox__terms"\n                                v-model="acceptTermsAndConditions">\n                            </sw-checkbox-field>\n                            <div class="swag-markets-contract-terms" style="float: left;">\n                                <span>\n                                    {{ $tc(\'bf-sales-channel.contractModal.table.contractTermsAndConditionsBegin\') }}\n                                </span>\n                                <sw-external-link icon="small-arrow-small-external" @click="openTermsAndConditions">\n                                    {{ $tc(\'bf-sales-channel.contractModal.table.contractTermsAndConditionsEnd\') }}\n                                </sw-external-link>\n                            </div>\n                        </div>\n                        <div style="clear: both;"></div>\n                        <div>\n                            <sw-checkbox-field class="swag-markets-contract-checkbox__terms"\n                                               v-model="acceptSubProcessor"></sw-checkbox-field>\n                            <div class="swag-markets-contract-terms" style="float: left;">\n                                <span>{{ $tc(\'bf-sales-channel.contractModal.table.contractSubProcessorBegin\') }}</span>\n                                <sw-external-link icon="small-arrow-small-external"\n                                                  @click="openPermissionModal">\n                                    {{ $tc(\'bf-sales-channel.contractModal.table.contractSubProcessorLink1\') }}\n                                </sw-external-link>\n                                <span>{{ $tc(\'bf-sales-channel.contractModal.table.contractSubProcessorMiddle\') }}</span>\n                                <sw-external-link\n                                    icon="small-arrow-small-external" @click="openSubProcessorModal">\n                                    {{ $tc(\'bf-sales-channel.contractModal.table.contractSubProcessorLink2\') }}\n                                </sw-external-link>\n                                <span>{{ $tc(\'bf-sales-channel.contractModal.table.contractSubProcessorEnd\') }}</span>\n                            </div>\n                        </div>\n                    {% endblock %}\n                </td>\n                <td v-for="contract in bookableContracts">\n                <span v-if="currentContract.name === contract.name" class="current-contract">\n                    {{ $tc(\'bf-sales-channel.contractModal.currentContractText\') }}\n                </span>\n                    <br>\n                    <strong class="contract-name">{{ contract.label }}</strong>\n                    <br>\n                    <strong class="contract-price">&euro; {{ contract.minPricePerMonth }}</strong>\n                    / {{ $tc(\'bf-sales-channel.contractModal.month\') }}\n\n                    {% block bf_radio_panel_body_actions %}\n                        <sw-button\n                            v-if="currentContract.name === contract.name"\n                            @click="$emit(\'onRemoveContract\', contract.name)">\n                            {{ $tc(\'bf-sales-channel.contractModal.buttonRemove\') }}\n                        </sw-button>\n\n                        <sw-button\n                            v-else\n                            @click="$emit(\'setNewContract\', contract, \'change\')"\n                            variant="primary"\n                            :disabled="!acceptTermsAndConditions || !acceptSubProcessor">\n                            {{ $tc(\'bf-sales-channel.contractModal.buttonChooseContract\') }}\n                        </sw-button>\n                    {% endblock %}\n                </td>\n            </tr>\n\n            <tr v-for="row in tableData">\n                <td>\n                    <div style="float:left;">\n                        {{ row[0] }}\n                    </div>\n                    <div style="float:right;">\n                        <sw-help-text :text="row[1]" :width="200" tooltipPosition="top"></sw-help-text>\n                    </div>\n                </td>\n                <td>\n                    <span v-if="typeof row[2] === \'string\'">{{ row[2] }}</span>\n                    <sw-icon v-else-if="row[2] === 1" name="default-basic-checkmark-line" :small="true"></sw-icon>\n                </td>\n                <td>\n                    <span v-if="typeof row[3] === \'string\'">{{ row[3] }}</span>\n                    <sw-icon v-else-if="row[3] === 1" name="default-basic-checkmark-line" :small="true"></sw-icon>\n                </td>\n                <td>\n                    <span v-if="typeof row[4] === \'string\'">{{ row[4] }}</span>\n                    <sw-icon v-else-if="row[4] === 1" name="default-basic-checkmark-line" :small="true"></sw-icon>\n                </td>\n            </tr>\n        </table>\n\n        <span class="additional-text">{{ $tc(\'bf-sales-channel.contractModal.bfSpecialProposal\') }}</span>\n    </sw-container>\n{% endblock %}\n'},Rt0r:function(e,t,n){},S2ph:function(e,t){},"T9M+":function(e,t){e.exports='{% block bf_sales_channel_defaults_select_only %}\n    <sw-container class="sw-sales-channel-defaults-select">\n        <template v-if="salesChannel">\n            <sw-entity-single-select\n                :disabled="disabled"\n                :class="singleSelectClass"\n                :label="defaultPropertyLabel"\n                :helpText="helpText"\n                required\n                :entity="propertyEntityName"\n                :value="defaultId"\n                :error="defaultsValueError"\n                @change="updateDefault">\n            </sw-entity-single-select>\n        </template>\n    </sw-container>\n{% endblock %}\n'},TVv2:function(e,t){e.exports="{% block bf_sales_channel_detail_content_tabs %}{% endblock %}\n\n{% block bf_sales_channel_detail_language_switch %}\n    <sw-language-switch slot=\"language-switch\" disabled></sw-language-switch>\n{% endblock %}\n\n{% block bf_sales_channel_detail_content_language_info %}\n    <sw-language-info\n        :entityDescription=\"placeholder(salesChannel, 'name', $tc('sw-sales-channel.detail.textHeadline'))\"\n        isNewEntity\n    ></sw-language-info>\n{% endblock %}\n"},Tm3G:function(e,t){e.exports='{% block sw_sales_channel_grid_columns_actions %}\n<sw-grid-column flex="auto"\n                align="center"\n                dataIndex="actions"\n                class="sw-sales-channel-modal-grid__actions"\nv-if="salesChannelTypes">\n    <sw-button\n            class="sw-sales-channel-modal__add-channel-action"\n            size="small"\n            variant="primary"\n            @click="onAddChannel(item.id)"\n            :isLoading="isProductComparisonSalesChannelType(item.id) && productStreamsLoading"\n            :disabled="isProductComparisonSalesChannelType(item.id) && !productStreamsExist || item.isCreated"\n\n            v-tooltip="{\n                            message: $tc(\'sw-sales-channel.modal.messageNoProductStreams\'),\n                            showOnDisabledElements: true,\n                            disabled: !isProductComparisonSalesChannelType(item.id) && !productStreamsExist\n                        }">\n        {{ $tc(\'sw-sales-channel.modal.buttonAddChannel\') }}\n    </sw-button>\n</sw-grid-column>\n{% endblock %}'},Tt8L:function(e){e.exports=JSON.parse('{"singleProductList":["singleProductListLabel","singleProductListHelpText",1,1,1],"assigning":["assigningLabel","assigningHelpText",1,1,1],"generalSettings":["generalSettingsLabel","generalSettingsHelpText",1,1,1],"createNewArticle":["createNewArticleLabel","createNewArticleHelpText",1,1,1],"bulletPoints":["bulletPointsLabel","bulletPointsHelpText",1,1,1],"amazonKeywords":["amazonKeywordsLabel","amazonKeywordsHelpText",1,1,1],"offerExistingItems":["offerExistingItemsLabel","offerExistingItemsHelpText",1,1,1],"channelErrorList":["channelErrorListLabel","channelErrorListHelpText",1,1,1],"deeplinkPossibility":["deeplinkPossibilityLabel","deeplinkPossibilityHelpText",1,1,1],"amazonFba":["amazonFbaLabel","amazonFbaHelpText",0,1,1],"ebayPlus":["ebayPlusLabel","ebayPlusHelpText",0,1,1],"amazonPrime":["amazonPrimeLabel","amazonPrimeHelpText",0,1,1],"ebaySuggestedPrice":["ebaySuggestedPriceLabel","ebaySuggestedPriceHelpText",0,1,1],"optionsTransfer":["optionsTransferLabel","optionsTransferHelpText",1,1,1]}')},UCmK:function(e,t){e.exports='{% block bf_amazon_connection_assistant_logo %}\n    <img class="bf-amazon-connection-assistant__logo"\n         :src="\'swagmarkets/static/img/amazon_logo_final.svg\' | asset"/>\n{% endblock %}\n'},VdUB:function(e,t){e.exports='{% block bf_ebay_connection_assistant_account_marketplace %}\n    <div class="bf-ebay-connection-assistant-account-marketplace__content">\n\n        {% block bf_ebay_connection_assistant_account_marketplace_content_information %}\n            <sw-card-section class="bf-ebay-connection-assistant-modal__content-description">\n                {{ $tc(\'ebay.validateMarketplaceDescription\') }}\n            </sw-card-section>\n            <div class="bf-ebay-connection-assistant-account__content-information">\n                {% block bf_ebay_connection_assistant_account_marketplace_content_information_error %}\n                    <sw-alert variant="error" v-if="canRetailerSell !== null && !canRetailerSell">\n                        {{$tc(\'error.ebay.validateMarketplaceError\')}}\n                    </sw-alert>\n                {% endblock %}\n                {% block bf_ebay_connection_assistant_account_marketplace_content_information_success %}\n                    <sw-alert variant="success" v-if="canRetailerSell !== null && canRetailerSell">\n                        {{$tc(\'success.ebay.validateMarketplaceSuccess\')}}\n                    </sw-alert>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        <sw-container align="end" justify="end"\n                      class="bf-ebay-connection-assistant-account-marketplace__content-button-check">\n            {% block bf_ebay_connection_assistant_accout_marketplace_check_button %}\n                <sw-button\n                    v-if="canRetailerSell === null || !canRetailerSell"\n                    size="small"\n                    variant="primary"\n                    :block="true"\n                    @click="siteIdCheck"\n                    v-tooltip="tooltip">\n                    {{$tc(\'ebay.validateMarketplaceBtnTitle\')}}\n                </sw-button>\n            {% endblock %}\n        </sw-container>\n    </div>\n{% endblock %}\n'},Wj7U:function(e,t,n){},WlqC:function(e,t,n){},XHx6:function(e,t){const{Component:n}=Shopware,{Criteria:a}=Shopware.Data;n.override("sw-sales-channel-modal",{name:"bf-sales-channel-modal",methods:{onAddChannel(e){"26a9ece25bd14b288b30c3d71e667d2c"===e||"7ff39608fed04e4bbcc62710b7223966"===e?this.$router.push({name:"bf.sales.channel.create",params:{typeId:e}}):e&&this.$super("onAddChannel",e),this.onCloseModal()}}})},XTtD:function(e,t){e.exports='{% block bf_sales_channel_detail_base %}\n    <div class="bf-sales-channel-detail-base sw-sales-channel-detail-base">\n        {% block bf_sales_channel_detail_base_general %}\n            <sw-container\n                v-if="clientExists && clientInProgress"\n                columns="1fr"\n                class="bf-sales-channel-detail-base__connection-assistant-warning">\n                {% block bf_sales_channel_base_general_client_system_state %}\n                    <sw-alert\n                        variant="warning"\n                        appearance="system"\n                        :showIcon="true"\n                        :closable="false">\n                        {{ $tc(\'error.global.systemSettingUp\') }}\n                    </sw-alert>\n                {% endblock %}\n            </sw-container>\n            <sw-container\n                v-if="bfBpUnauthorized"\n                columns="1fr"\n                class="bf-sales-channel-detail-base__connection-assistant-warning">\n                <sw-alert\n                    variant="error"\n                    appearance="notification"\n                    :closable="false">\n                    {{ $tc(\'error.global.bfBpUnauthorized\') }}\n                </sw-alert>\n            </sw-container>\n            {% block bf_sales_channel_detail_base_contract %}\n                <bf-contract\n                    v-if="!creatingNewSalesChannel && salesChannel"\n                    ref="bfContract"\n                    :isLoading="isLoading"\n                    :clientExists="clientExists"\n                    :currentContract="currentContract"\n                    :bookableContracts="bookableContracts"\n                    :subProcessorData="subProcessorData"\n                    :userAuthorised="userAuthorised"\n                    @onSetNewContract="onSetNewContract"\n                    @onCancelContract="onCancelContract"\n                    @refreshContractData="getContract"\n                ></bf-contract>\n            {% endblock %}\n            <sw-container\n                v-if="clientExists && !isConnected"\n                columns="1fr"\n                class="bf-sales-channel-detail-base__connection-assistant-warning"\n                v-show="showNotificationBox">\n                {% block bf_sales_channel_base_general_connection_asisstant %}\n                    <sw-alert\n                        variant="info"\n                        appearance="notification"\n                        :closable="false"\n                    >\n                        {{ $tc(\'salesChannel-connectionAssistant.connectionAvailable\') }} <br><br>\n                        <sw-button\n                            :disabled="connectionAssistantBtnStartDisabled"\n                            variant="ghost"\n                            size="small"\n                            :square="false"\n                            :block="false"\n                            :isLoading="false"\n                            :routerLink=connectionAssistantRouterLink\n                        >\n                            {{ $tc(\'salesChannel-connectionAssistant.startConnectionAssistant\') }}\n                        </sw-button>\n                    </sw-alert>\n                {% endblock %}\n            </sw-container>\n\n            {% block bf_sales_channel_detail_base_account %}{% endblock %}\n\n            {% block bf_sales_channel_detail_base_ebay_token_expires %}\n                <bf-sales-channel-ebay-token-expires\n                    v-if="salesChannel && isSalesChannelEbay"\n                    :salesChannel="salesChannel"\n                    :clientRdy="clientExists && !clientInProgress && isConnected">\n                </bf-sales-channel-ebay-token-expires>\n            {% endblock %}\n\n            <sw-card v-if="salesChannel" :isLoading="isLoadingBaseData"\n                     :title="$tc(\'sw-sales-channel.detail.titleGeneralSettings\')">\n                {% block bf_sales_channel_base_general_input_name %}\n                    <sw-field\n                        type="text"\n                        validation="required"\n                        required\n                        :placeholder="placeholder(salesChannel, \'name\')"\n                        :label="$tc(\'sw-sales-channel.detail.labelInputName\')"\n                        :error="salesChannelNameError"\n                        v-model="salesChannel.name"></sw-field>\n                {% endblock %}\n\n                {% block bf_sales_channel_detail_base_general_select_marketplace %}\n                {% endblock %}\n\n                {% block bf_sales_channel_detail_base_general_marketplace_settings %}\n                    <sw-container columns="1fr 1fr" gap="20px">\n\n                        {% block bf_sales_channel_detail_base_general_marketplace_settings_select_currency %}\n                            <sw-entity-single-select\n                                :label="$tc(\'bf-sales-channel.create.labelCurrency\')"\n                                v-model="salesChannel.currencyId"\n                                :error="salesChannelCurrencyIdError"\n                                entity="currency"\n                                validation="required"\n                                required\n                            >\n                            </sw-entity-single-select>\n                        {% endblock %}\n                        {% block bf_sales_channel_detail_base_general_marketplace_settings_select_language %}\n                            <sw-entity-single-select\n                                :label="$tc(\'bf-sales-channel.create.labelLanguage\')"\n                                v-model="salesChannel.languageId"\n                                :error="salesChannelCurrencyIdError"\n                                entity="language"\n                                validation="required"\n                                required\n                            >\n                            </sw-entity-single-select>\n                        {% endblock %}\n                    </sw-container>\n                {% endblock %}\n\n                {% block bf_sales_channel_detail_base_general_marketplace_settings_select_country %}\n                    <sw-sales-channel-defaults-select\n                        :salesChannel="salesChannel"\n                        propertyName="countries"\n                        :propertyLabel="$tc(\'sw-sales-channel.detail.labelInputCountries\')"\n                        :helpText="$tc(\'sw-sales-channel.detail.countryMultiSelectHelpText\')"\n                        defaultPropertyName="countryId"\n                        :defaultPropertyLabel="$tc(\'sw-sales-channel.detail.labelInputDefaultCountry\')">\n                    </sw-sales-channel-defaults-select>\n                {% endblock %}\n\n                {% block bf_sales_channel_detail_base_general_select_payment_method %}\n                    {% block bf_sales_channel_detail_base_ebay_payment_method %}\n                        <bf-sales-channel-ebay-payment-method\n                            v-if="salesChannel && isSalesChannelEbay && !creatingNewSalesChannel"\n                            propertyName="paymentMethods"\n                            defaultPropertyName="paymentMethodId"\n                            :clientExists="clientExists"\n                            :clientInProgress="clientInProgress"\n                            :salesChannel="salesChannel"\n                            :propertyLabel="$tc(\'sw-sales-channel.detail.labelInputPaymentMethods\')"\n                            :defaultPropertyLabel="$tc(\'sw-sales-channel.detail.labelInputDefaultPaymentMethod\')"\n                        ></bf-sales-channel-ebay-payment-method>\n                    {% endblock %}\n\n                    <sw-container\n                        v-if="salesChannel && isSalesChannelAmazon"\n                        columns="1fr"\n                        class="bf-sales-channel-detail-base__connection-assistant-warning"\n                    >\n                        <sw-alert variant="warning" appearance="notification" :showIcon="true" :closable="false">\n                            {{ $tc(\'bf-sales-channel.detail.amazonPaymentMethodInfoText\') }}\n                        </sw-alert>\n                    </sw-container>\n                {% endblock %}\n\n                {% block bf_sales_channel_detail_base_general_select_shippment_method %}\n                    <sw-sales-channel-defaults-select\n                        v-if="isSalesChannelAmazon === false"\n                        :salesChannel="salesChannel"\n                        propertyName="shippingMethods"\n                        :propertyLabel="$tc(\'sw-sales-channel.detail.labelInputShippingMethods\')"\n                        defaultPropertyName="shippingMethodId"\n                        :defaultPropertyLabel="$tc(\'sw-sales-channel.detail.labelInputDefaultShippingMethod\')">\n                    </sw-sales-channel-defaults-select>\n                {% endblock %}\n                {% block bf_sales_channel_details_base_general_select_shipping_method_create_amazon %}\n                    <bf-sales-channel-defaults-select-only\n                            v-if="isSalesChannelAmazon && creatingNewSalesChannel"\n                            :salesChannel="salesChannel"\n                            propertyName="shippingMethods"\n                            :propertyLabel="$tc(\'sw-sales-channel.detail.labelInputShippingMethods\')"\n                            defaultPropertyName="shippingMethodId"\n                            :defaultPropertyLabel="$tc(\'sw-sales-channel.detail.labelInputDefaultShippingMethod\')"\n                    ></bf-sales-channel-defaults-select-only>\n                {% endblock %}\n\n                {% block bf_sales_channel_detail_base_general_select_customer_group %}\n                    <sw-container columns="1fr 1fr 1fr" gap="20px"\n                                  v-if="salesChannel && isSalesChannelAmazon && !creatingNewSalesChannel">\n                            <sw-text-field\n                                type="text"\n                                :label="$tc(\'salesChannelSettings.amazon.label.merchantShippingGroupName\')"\n                                :placeholder="$tc(\'salesChannelSettings.amazon.placeholder.merchantShippingGroupName\')"\n                                :value="salesChannel.merchantShippingGroupName"\n                                :helpText="$tc(\'salesChannelSettings.amazon.helpText.merchantShippingGroup\')"\n                                name="merchantShippingGroupName"\n                                @change="salesChannel.merchantShippingGroupName = $event"\n                            >\n                            </sw-text-field>\n                            <bf-sales-channel-defaults-select-only\n                                :salesChannel="salesChannel"\n                                propertyName="shippingMethods"\n                                :propertyLabel="$tc(\'sw-sales-channel.detail.labelInputShippingMethods\')"\n                                defaultPropertyName="shippingMethodId"\n                                :defaultPropertyLabel="$tc(\'sw-sales-channel.detail.labelInputDefaultShippingMethod\')"\n                            ></bf-sales-channel-defaults-select-only>\n                            <sw-number-field\n                                :label="$tc(\'bf-sales-channel.detail.labelProcessingTime\')"\n                                v-model="salesChannel.processingTime"\n                                placeholder="1"\n                                numberType="int"\n                                :step="1"\n                                :min="1"\n                                :max="99"\n                                :value="1"\n                                :digits="2"\n                            ></sw-number-field>\n                    </sw-container>\n                    <sw-entity-single-select v-else\n                                             :label="$tc(\'sw-sales-channel.detail.customerGroup\')"\n                                             entity="customer_group"\n                                             :error="salesChannelCustomerGroupIdError"\n                                             v-model="salesChannel.customerGroupId"\n                                             validation="required"\n                                             required\n                    >\n                    </sw-entity-single-select>\n\n                    {% block bf_sales_channel_detail_base_general_amazon_settings %}\n                        <sw-container columns="1fr 1fr" gap="20px" v-if="salesChannel && !creatingNewSalesChannel && isSalesChannelAmazon">\n                            <sw-entity-single-select\n                                :label="$tc(\'sw-sales-channel.detail.customerGroup\')"\n                                entity="customer_group"\n                                :error="salesChannelCustomerGroupIdError"\n                                v-model="salesChannel.customerGroupId"\n                                validation="required"\n                                required>\n                            </sw-entity-single-select>\n                            <sw-switch-field\n                                :label="$tc(\'salesChannelSettings.amazon.label.vatCalculationService\')"\n                                :value="salesChannel.useAmazonTaxCalculationService"\n                                :ghostValue="false"\n                                :noMarginTop="true"\n                                :size="\'small\'"\n                                @change="salesChannel.useAmazonTaxCalculationService = $event"\n                                class="vatCalculationService">\n                            </sw-switch-field>\n                        </sw-container>\n                    {% endblock %}\n                {% endblock %}\n            </sw-card>\n            <sw-card :title="$tc(\'bf-sales-channel.detail.prices\')"\n                     v-if="salesChannel && !creatingNewSalesChannel && (isSalesChannelAmazon || isSalesChannelEbay)">\n                {% block bf_sales_channel_net_price_general_settings %}\n                    <sw-alert\n                        variant="info"\n                        appearance="notification"\n                        :closable="false"\n                    >{{ $tc(\'global.globalConfigInfo\') }}</sw-alert>\n                    <sw-switch-field v-if="salesChannel"\n                                     :label="$tc(\'bf-sales-channel.detail.netPriceSwitchLabel\')"\n                                     :ghostValue="false"\n                                     :noMarginTop="true"\n                                     :size="\'small\'"\n                                     :value="salesChannel.useNetPrice"\n                                     @change="salesChannel.useNetPrice = $event">\n                    </sw-switch-field>\n                {% endblock %}\n            </sw-card>\n            <template v-if="salesChannel && !creatingNewSalesChannel && isSalesChannelEbay">\n                <sw-card :title="$tc(\'bf-sales-channel.detail.ebayAccountCardTitle\')" :isLoading="isLoadingBaseData">\n                    <sw-alert variant="info" appearance="system" :showIcon="true" :closable="false"\n                              v-if="!clientExists || clientInProgress">\n                        {{ $tc(\'bf-sales-channel.detail.ebayAccountInfo\') }}\n                    </sw-alert>\n                    {% block bf_sales_channel_detail_base_general_ebay_settings %}\n                    <sw-email-field\n                        :label="$tc(\'salesChannelSettings.ebay.label.payPalEmail\')"\n                        :value="salesChannel.payPalEmail"\n                        @change="salesChannel.payPalEmail = $event"\n                        :disabled="!clientExists || clientInProgress" required>\n                    </sw-email-field>\n                    <sw-text-field\n                        :label="$tc(\'salesChannelSettings.ebay.label.ebayLogo\')"\n                        :value="salesChannel.ebayLogo"\n                        placeholder="https://example.com/logo.jpg"\n                        @change="salesChannel.ebayLogo = $event"\n                        :disabled="!clientExists || clientInProgress" required>\n                    </sw-text-field>\n                    <sw-container columns="auto 1fr" gap="20px">\n                        <sw-text-field\n                            :label="$tc(\'salesChannelSettings.ebay.label.sellerZip\')"\n                            :value="salesChannel.sellerZip"\n                            @change="salesChannel.sellerZip = $event"\n                            :disabled="!clientExists || clientInProgress" required>\n                        </sw-text-field>\n                        <sw-text-field\n                            :label="$tc(\'salesChannelSettings.ebay.label.sellerCity\')"\n                            :value="salesChannel.sellerCity"\n                            @change="salesChannel.sellerCity = $event"\n                            :disabled="!clientExists || clientInProgress" required>\n                        </sw-text-field>\n                    </sw-container>\n                    <sw-text-field\n                        :label="$tc(\'salesChannelSettings.ebay.label.feedbackComment\')"\n                        :value="salesChannel.feedbackComment"\n                        @change="salesChannel.feedbackComment = $event"\n                        :disabled="!clientExists || clientInProgress" required>\n                    </sw-text-field>\n                </sw-card>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block bf_sales_channel_ebay_extended_content %}\n            <bf-sales-channel-ebay-extended-configuration\n                v-if="salesChannel && !creatingNewSalesChannel && isSalesChannelEbay"\n                :salesChannel="salesChannel"\n                :clientExists="clientExists"\n                :clientInProgress="clientInProgress"\n                :currentContractName="currentContractName"\n                :isSalesChannelEbay="isSalesChannelEbay">\n            </bf-sales-channel-ebay-extended-configuration>\n        {% endblock %}\n\n        {% block bf_sales_channel_ebay_best_offer %}\n            <sw-card v-if="salesChannel && !creatingNewSalesChannel && isSalesChannelEbay"\n                     :title="$tc(\'bf-sales-channel.detail.ebayBestOffers\')"\n                     :isLoading="!salesChannel">\n                <bf-sales-channel-ebay-best-offer\n                    v-if="salesChannel"\n                    :isGeneralPage="true"\n                    :clientExists="clientExists"\n                    :clientInProgress="clientInProgress"\n                    :currentContractName="currentContractName"\n                    :ebayBestOfferActive="salesChannel.ebayBestOfferActive"\n                    :ebayBestOfferAbsolute="salesChannel.ebayBestOfferAbsolute"\n                    :ebayBestOfferRelative="salesChannel.ebayBestOfferRelative"\n                    :ebayBestOfferAutoAccept="salesChannel.ebayBestOfferAutoAccept"\n                    :ebayBestOfferAbsoluteAutoAccept="salesChannel.ebayBestOfferAbsoluteAutoAccept"\n                    :ebayBestOfferRelativeAutoAccept="salesChannel.ebayBestOfferRelativeAutoAccept"\n                    :ebayBestOfferFix="salesChannel.ebayBestOfferFix"\n                    @change="setSalesChannelAttributeValue">\n                </bf-sales-channel-ebay-best-offer>\n            </sw-card>\n        {% endblock %}\n\n        {% block bf_sales_channel_ebay_policies %}\n            <bf-sales-channel-ebay-policy\n                v-if="salesChannel && !creatingNewSalesChannel && isSalesChannelEbay"\n                :salesChannel="salesChannel"\n                @setPolicy="setPolicy"\n                :clientRdy="clientExists && !clientInProgress  && isConnected">\n            </bf-sales-channel-ebay-policy>\n        {% endblock %}\n        <sw-card\n            v-if="salesChannel && !creatingNewSalesChannel && isSalesChannelAmazon"\n            :title="$tc(\'bf-category-segment-mapping.title\')"\n            :isLoading="isSegmentLoading">\n            {% block bf_sales_channel_detail_segment_dropdown %}\n                <bf-sales-channel-amazon-segment-dropdown\n                    ref="segmentDropdown"\n                    :clientExists="clientExists"\n                    :clientInProgress="clientInProgress"\n                    :currentContractName="currentContractName"\n                    @onSetCurrentSegment="setCurrentSegment"\n                    @onStartLoading="isSegmentLoading = true"\n                    @onStopLoading="isSegmentLoading = false">\n                </bf-sales-channel-amazon-segment-dropdown>\n            {% endblock %}\n        </sw-card>\n\n        {% block sw_sales_channel_detail_base_options_domains %}\n            {# Kept in the Code for debuging if something not working or we have to check if the Domain setting works #}\n\n{#            <sw-sales-channel-detail-domains#}\n{#                v-if="salesChannel && isDomainAware"#}\n{#                :salesChannel="salesChannel"#}\n{#                :isLoading="isLoading">#}\n{#            </sw-sales-channel-detail-domains>#}\n        {% endblock %}\n\n        {% block sw_sales_channel_detail_base_options_status %}\n            <sw-card\n                :title="$tc(\'sw-sales-channel.detail.titleStatus\')"\n                v-if="!creatingNewSalesChannel && salesChannel"\n                :isLoading="isLoading">\n                {% block bf_sales_channel_deactivate_info_msg %}\n                    <sw-alert variant="info" appearance="notification" :showIcon="true" :closable="false">\n                        {{ $tc(\'bf-sales-channel.detail.infoActivateDeactivateSalesChannel\') }}\n                    </sw-alert>\n                {% endblock %}\n                {% block bf_sales_channel_ebay_activate_alerts__content %}\n                    <sw-alert\n                        v-if="isSalesChannelEbay && !salesChannel.active && salesChannel.noPaymentMethodMatching"\n                        variant="error"\n                        appearance="notification"\n                        :showIcon="true"\n                        :closable="false">\n                        {{ $tc(\'bf-sales-channel.detail.noPaymentMethodsSelected\') }}\n                    </sw-alert>\n                    <sw-alert\n                        v-if="isSalesChannelEbay && !salesChannel.active && !salesChannel.shippingPolicy && (!salesChannel.paymentPolicy || !salesChannel.returnPolicy)"\n                        variant="error"\n                        appearance="notification"\n                        :showIcon="true"\n                        :closable="false">\n                        {{ $tc(\'bf-sales-channel.detail.noPoliciesSelected\') }}\n                    </sw-alert>\n                {% endblock %}\n\n                {% block sw_sales_channel_detail_base_status_input_active %}\n                    <sw-field\n                        type="switch"\n                        :label="$tc(\'sw-sales-channel.detail.labelInputActive\')"\n                        @change="onToggleActive"\n                        v-model="salesChannel.active"\n                        :disabled="!isSalesChannelActivationSwitchEnabled()">\n                    </sw-field>\n                {% endblock %}\n            </sw-card>\n        {% endblock %}\n\n        {% block bf_sales_channel_detail_base_api %}\n            <sw-card v-if="salesChannel" :isLoading="isLoadingBaseData"\n                     :title="$tc(\'sw-sales-channel.detail.titleOptionsApiKey\')">\n                {% block bf_sales_channel_detail_base_api_description %}\n                    <div class="bf-sales-channel-detail-base__description-text"\n                         v-html="$tc(\'sw-sales-channel.detail.textApiAccessDescription\')"></div>\n                {% endblock %}\n\n                {% block bf_sales_channel_detail_base_api_input_access_key %}\n                    <sw-field\n                        :label="$tc(\'sw-sales-channel.detail.labelAccessKeyField\')"\n                        :disabled="true"\n                        v-model="salesChannel.accessKey"\n                    ></sw-field>\n                {% endblock %}\n            </sw-card>\n        {% endblock %}\n\n        {% block bf_sales_channel_detail_base_delete %}\n            <sw-card v-if="salesChannel" :isLoading="isLoadingBaseData"\n                     :title="$tc(\'sw-sales-channel.detail.deleteModalTitle\')">\n                <sw-container columns="1fr 175px" gap="0 30px"\n                              class="bf-sales-channel-detail-base__delete-sales-cahnnel">\n                    {% block bf_sales_channel_detail_base_delete_description %}\n                        <div class="bf-sales-channel-detail-base__description-text">\n                            {{ $tc(\'bf-sales-channel.detail.delete\') }}\n                        </div>\n                    {% endblock %}\n\n                    {% block bf_sales_channel_detail_base_delete_button %}\n                        <sw-button\n                            variant="danger"\n                            size="small"\n                            @click="showDeleteModal=true"\n                        >{{ $tc(\'sw-sales-channel.detail.buttonDelete\') }}\n                        </sw-button>\n                    {% endblock %}\n                </sw-container>\n\n                {% block bf_sales_channel_detail_base_delete_modal %}\n                    <sw-modal\n                        v-if="showDeleteModal"\n                        class="bf-sales-channel-detail-base__delete-modal"\n                        ref="modal"\n                        variant="small"\n                        :title="$tc(\'sw-sales-channel.detail.deleteModalTitle\')"\n                        @modal-close="onCloseDeleteModal"\n                    >\n                        {% block bf_sales_channel_detail_base_delete_modal_confirm_text %}\n                            <p class="bf-sales-channel-detail-base-__delete-modal-confirm-text">\n                                {{ $tc(\'sw-sales-channel.detail.textConfirmDelete\') }}\n                            </p>\n                            <p class="bf-sales-channel-detail-base__delete-modal-name">\n                                <strong>{{ placeholder(salesChannel, \'name\') }}</strong>\n                            </p>\n                            <p>{{ $tc(\'sw-sales-channel.detail.textDeleteInfo\') }}</p>\n                        {% endblock %}\n\n                        {% block bf_sales_channel_detail_base_delete_modal_footer %}\n                            <template slot="modal-footer">\n                                {% block bf_sales_channel_detail_base_modal_footer_abort %}\n                                    <sw-button size="small" @click="onCloseDeleteModal">\n                                        {{ $tc(\'sw-sales-channel.detail.buttonCloseDeleteModal\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block bf_sales_channel_detail_base_modal_footer_confirm %}\n                                    <sw-button size="small" @click="onConfirmDelete" variant="danger">\n                                        {{ $tc(\'sw-sales-channel.detail.buttonConfirmDelete\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </template>\n                        {% endblock %}\n                    </sw-modal>\n                {% endblock %}\n            </sw-card>\n        {% endblock %}\n        <router-view></router-view>\n    </div>\n{% endblock %}\n'},Xljw:function(e,t,n){},Xwqh:function(e,t,n){},Y6BQ:function(e,t,n){var a=n("MxlZ");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("2504183b",a,!0,{})},ZWeD:function(e,t,n){},a2BO:function(e,t){const{Component:n}=Shopware;n.extend("bf-collapse","sw-collapse",{props:{expandOnLoading:{type:Boolean,required:!1,default:!1}},data(){return{expanded:this.expandOnLoading}},methods:{collapseItem(){this.expanded=!this.expanded,this.$emit("item-expand",this.expanded)}}})},akOo:function(e,t){e.exports='{% block swag_markets_sub_processor_modal__content %}\n    <div v-html="subProcessorData" class="swag_markets_sub_processor"></div>\n{% endblock %}\n'},b4Am:function(e,t){e.exports='{% block bf_sales_channel_detail_custom_fields %}\n<div>\n    <sw-container columns="1fr" class="bf-sales-channel-detail-base__connection-assistant-warning">\n        <sw-alert variant="warning" appearance="notification" :showIcon="true" :closable="false">\n            {{ $tc(\'bf-property-transfer.tab.warningText\') }}\n        </sw-alert>\n        <sw-alert variant="info" appearance="notification" :closable="false">\n            {{ $tc(\'bf-custom-fields-transfer.tab.text\') }}\n        </sw-alert>\n    </sw-container>\n\n    <sw-card class="bf-card" title="Custom field transfer">\n        <div class="bf_property_mapping">\n            {% block sw_property_list_grid %}\n            <sw-entity-listing :items="propertyGroup"\n                               :columns="getPropertyColumns()"\n                               :repository="customFieldsRepository"\n                               ref="propertyList"\n                               :showSelection="false"\n                               :showActions="false"\n                               :fullPage="false"\n                               :sortBy="sortBy"\n                               :sortDirection="sortDirection"\n                               :isLoading="isLoading"\n                               :allowColumnEdit="false"\n                               :compactMode="true"\n                               identifier="sw-properties-list"\n                               @column-sort="onSortColumn">\n\n                {% block sw_property_list_grid_bound %}\n                <template slot="column-transfer" slot-scope="{ item }">\n                    <sw-field\n                        :disabled="false"\n                        @change="toggleItemCheck($event, item)"\n                        type="checkbox"\n                        :value="checked(item)">\n                    </sw-field>\n                </template>\n                {% endblock %}\n\n            </sw-entity-listing>\n            {% endblock %}\n        </div>\n    </sw-card>\n</div>\n{% endblock %}\n\n'},bPdj:function(e,t,n){var a=n("xHIF");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("c6ee0cec",a,!0,{})},bPmL:function(e,t){e.exports="{% block swag_markets_permissions_modal__content %}\n    <div>\n        <img style=\"margin: auto;display: block\" :src=\"'swagmarkets/static/img/permission_asset.png' | asset\"/>\n        <div style=\"text-align: center;margin-top: 5px;font-size:0.8rem\">\n            {{ $tc('bf-sales-channel.contractModal.permissionsSharedData.contentText') }}\n            <sw-external-link\n                icon=\"small-arrow-small-external\" @click=\"closePermissionModal\">\n                {{ $tc('bf-sales-channel.contractModal.table.contractSubProcessorLink2') }}\n            </sw-external-link>\n            {{ $tc('bf-sales-channel.contractModal.permissionsSharedData.contentTextEnd') }}\n        </div>\n        <div style=\"margin-top: 60px;\">\n            <sw-description-list>\n                <dt>{{ $tc('bf-sales-channel.contractModal.permissionsSharedData.headLine') }}</dt>\n                <dd>{{ $tc('bf-sales-channel.contractModal.permissionsSharedData.name') }}</dd>\n                <dd>{{ $tc('bf-sales-channel.contractModal.permissionsSharedData.email') }}</dd>\n                <dd>{{ $tc('bf-sales-channel.contractModal.permissionsSharedData.phone') }}</dd>\n                <dd>{{ $tc('bf-sales-channel.contractModal.permissionsSharedData.birthdate') }}</dd>\n                <dd>{{ $tc('bf-sales-channel.contractModal.permissionsSharedData.address') }}</dd>\n            </sw-description-list>\n        </div>\n    </div>\n{% endblock %}\n"},bk2R:function(e,t,n){var a=n("nHCx");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("695ab11a",a,!0,{})},"c+Tf":function(e,t,n){var a=n("v5FY");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("fb119148",a,!0,{})},cIId:function(e,t,n){var a=n("xQ/B");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("79ce0cf3",a,!0,{})},cKbu:function(e,t,n){var a=n("1DfZ");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("70f089e6",a,!0,{})},ceaw:function(e,t){e.exports='{% block bf_sales_channel_marketplace_category_tree %}\n    <sw-tree\n            :searchable="true"\n            :disableContextMenu="true"\n            :items="categories"\n            :sortable="false"\n            @check-item="checkItem"\n            @get-tree-items="getTreeItems"\n            @search-tree-items="searchTreeItems">\n        <template #headline>\n            <div class="sw-tree-actions__headline">\n                <span>{{ title }}</span>\n                <div class="sw-category-tree-field" v-if="activeCategories">\n                    <sw-label v-for="category in activeCategories"\n                              :key="category.item.id"\n                              selected=""\n                              @dismiss="removeItem(category)"\n                              class="sw-category-tree-field__selected-label">\n\n                        {% block sw_category_tree_field_input_labels_property %}\n                            <span class="sw-category-tree-field__label-property">\n                                        <slot name="labelProperty">\n                                            {{ category.item.name }}\n                                        </slot>\n                                    </span>\n                        {% endblock %}\n\n                        {% block sw_category_tree_field_input_labels_dismiss_icon %}\n                            <template slot="dismiss-icon">\n                                <sw-icon name="small-default-x-line-medium"></sw-icon>\n                            </template>\n                        {% endblock %}\n\n                    </sw-label>\n                </div>\n            </div>\n        </template>\n\n        <template slot="items"\n                  slot-scope="{ treeItems, sortable, draggedItem, disableContextMenu, onChangeRoute, clickItem }">\n            {% block sw_tree_slot_items %}\n                <sw-tree-item\n                        v-if="!isLoading"\n                        v-for="item in treeItems"\n                        :key="item.id"\n                        :item="item"\n                        :active="item.active"\n                        :activeItemIds="activeCategories"\n                        :onChangeRoute="onChangeRoute"\n                        :sortable="sortable"\n                        :draggedItem="draggedItem"\n                        :disableContextMenu="disableContextMenu"\n                        @check-item="checkItem">\n                    {% block sw_category_tree_field_input_results_tree_item_actions %}\n                        <template #actions><span></span></template>\n                    {% endblock %}\n                </sw-tree-item>\n            {% endblock %}\n        </template>\n    </sw-tree>\n{% endblock %}\n'},"d2y/":function(e,t,n){},dlsN:function(e,t,n){},dooy:function(e,t,n){var a=n("d2y/");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("644bf328",a,!0,{})},dtJ4:function(e,t,n){},eIIs:function(e,t){e.exports='{% block bf_tree_item %}\n    <div class="sw-tree-item bf-tree-item" :class="styling">\n        {% block bf_tree_item_element %}\n            <div class="sw-tree-item__element bf-tree-item__element">\n                {% block bf_tree_item_leaf_icon %}\n                    <div class="sw-tree-item__leaf" v-if="item.childCount <= 0"></div>\n                {% endblock %}\n\n                {% block bf_tree_item_element_toggle %}\n                    <div class="sw-tree-item__toggle" @click="openTreeItem(); getTreeItemChildren(item)" v-else>\n                        {% block bf_tree_item_element_toggle_loader %}\n                            <sw-loader v-if="isLoading" size="14"></sw-loader>\n                        {% endblock %}\n\n                        {% block bf_tree_item_element_toggle_icon %}\n                            <sw-icon :name="opened ? \'small-arrow-small-down\' : \'small-arrow-small-right\'" size="18"\n                                     v-else></sw-icon>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n\n                {% block bf_tree_item_element_grip %}\n                    <div v-if="item.childCount > 0" class="sw-tree-item__icon">\n                        <sw-icon name="multicolor-folder-tree-open" multicolor small v-if="opened"></sw-icon>\n                        <sw-icon name="multicolor-folder-tree" multicolor small v-else></sw-icon>\n                    </div>\n                    <div v-else class="sw-tree-item__icon">\n                        <sw-icon name="small-default-circle-small" size="18"></sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block bf_tree_item_element_selection %}\n                    <div class="sw-tree-item__selection">\n                        <sw-field type="radio"\n                                  name="category"\n                                  checked="currentSelected == item.id ? \'checked\' : false"\n                                  :options="[{value: item.id, name: item.data.translated.name}]"\n                                  @change="onChangeItem"\n                        ></sw-field>\n                    </div>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n        {% block bf_tree_item_children_transition %}\n            <transition name="fade">\n                {% block bf_tree_item_children_content %}\n                    <div class="sw-tree-item__children" v-if="isOpened && item.children.length > 0">\n                        <bf-tree-item v-for="child in item.children"\n                                      :key="child.id"\n                                      :item="child"\n                                      @on-change="emitCheckedItem"\n                        ></bf-tree-item>\n                    </div>\n                {% endblock %}\n            </transition>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},fnQG:function(e,t,n){var a=n("trjv");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("1766e0b9",a,!0,{})},gHfu:function(e,t){e.exports='{% block sw_data_grid_columns_render_value %}\n    <template v-if="column.property === \'name\'">\n        <sw-media-preview-v2 :source="item.cover ? item.cover.media : null"></sw-media-preview-v2>\n    </template>\n    <span class="sw-data-grid__cell-value">\n        <template v-if="column.property === \'active\'">\n            <sw-icon v-if="item.active" name="small-default-checkmark-line-medium" small class="is--active"></sw-icon>\n            <sw-icon v-else name="small-default-x-line-medium" small class="is--inactive"></sw-icon>\n        </template>\n        <template v-else-if="column.property === \'category\'">\n            <span v-if="shopProductData[item.id]">\n                <span v-for="(category, index) in shopProductData[item.id].categories" :key="category.id">\n                {{ category.name }} <span v-if="index < shopProductData[item.id].categories.length - 1"> | </span>\n                </span>\n            </span>\n{# {{ typeof shopProductData[item.id] !== \'undefined\' ? shopProductData[item.id].category.name : \'\' }} #}\n        </template>\n        <template v-else-if="column.property === \'online\'">\n            <sw-color-badge\n                :class="!shopProductData[item.id] || shopProductData[item.id].marketplaceProductId === \'\' || shopProductData[item.id].stock === 0 ? \'is--error\' : \'is--success\'"></sw-color-badge>\n        </template>\n        <template v-else-if="column.property === \'error\'">\n            <sw-color-badge\n                :class="!shopProductData[item.id] || shopProductData[item.id].errors.length > 0 ? \'is--error\' : \'is--success\'"></sw-color-badge>\n        </template>\n        <template v-else>\n            {{ renderColumn(item, column) }}\n        </template>\n    </span>\n{% endblock %}\n\n{% block sw_data_grid_slot_actions %}\n    <slot name="detail-action" v-bind="{ item }">\n        <sw-context-menu-item\n            :disabled="!shopProductData[item.id]"\n            class="sw-entity-listing__context-menu-edit-action"\n            @click="onEditProductClick(item)">\n            {{ $tc(\'global.default.edit\') }}\n        </sw-context-menu-item>\n\n        <sw-context-menu-item v-if="getMarketplaceName == \'amazon\' && clientExists"\n                              :disabled="!shopProductData[item.id]"\n                              class="sw-entity-listing__context-menu-edit-action"\n                              @click="onAsinManagement(item)">\n            {{ $tc(\'products.table-headers.asinManagement\') }}\n        </sw-context-menu-item>\n\n        <sw-context-menu-item\n            :disabled="shopProductData[item.id] === undefined || shopProductData[item.id].marketplaceProductId === \'\'"\n            class="sw-entity-listing__context-menu-edit-action"\n            @click="onOpenMarketplaceProductClick(shopProductData[item.id])">\n            {{ $tc(\'products.action.openMarketplaceProduct\') }}\n        </sw-context-menu-item>\n\n        <sw-context-menu-item\n            :disabled="shopProductData[item.id] && shopProductData[item.id].errors.length === 0"\n            class="sw-entity-listing__context-menu-edit-action"\n            @click="$emit(\'onOpenProductErrorsModal\', item)">\n            {{ $tc(\'products.showErrorsButton\') }}\n        </sw-context-menu-item>\n    </slot>\n{% endblock %}\n\n{% block sw_data_grid_slot_pagination %}\n    <sw-pagination v-bind="{ page, limit, total }" :total-visible="7" @page-change="paginate"></sw-pagination>\n{% endblock %}\n\n{% block sw_data_grid_slot_bulk_modals %}\n    <bf-sales-channel-product-modal\n        v-if="showProductDetailModal"\n        :product="selectedProduct"\n        :shopProductData="shopProductData"\n        :clientExists="clientExists"\n        :clientInProgress="clientInProgress"\n        :currentContract="currentContract"\n        @modal-close="showProductDetailModal = false"\n    >\n    </bf-sales-channel-product-modal>\n    <bf-sales-channel-amazon-asin-management\n        v-if="showAsinManagement"\n        :shopProductData="shopProductData"\n        :product="selectedProduct"\n        @modal-close="showAsinManagement = false">\n    </bf-sales-channel-amazon-asin-management>\n{% endblock %}\n'},"gx/M":function(e,t,n){},hcgk:function(e,t){e.exports='{% block bf_sales_channel_detail_content_tab %}\n    {% parent() %}\n\n    {% block bf_sales_channel_detail_content_tab_amazon_fba_prime %}\n        <sw-tabs-item\n            v-if="isSalesChannelAmazon"\n            :disabled="!clientExists || clientInProgress"\n            :route="{ name: \'bf.sales.channel.detail.amazon-fba-prime\', params: { id: $route.params.id } }"\n            :title="$tc(\'sw-sales-channel.detail.tabProductComparison\')">\n            {{ $tc(\'amazonFbaPrime.tab-title\') }}\n        </sw-tabs-item>\n    {% endblock %}\n{% endblock %}\n'},iUFa:function(e,t){e.exports='{% block bf_sales_channel_detail_content_tab %}\n    {% parent() %}\n\n    {% block bf_sales_channel_detail_content_tab_mapping %}\n        <sw-tabs-item\n            :disabled="!clientExists || clientInProgress"\n            :route="{ name: \'bf.sales.channel.detail.mapping\', params: { id: $route.params.id } }"\n            :title="$tc(\'sw-sales-channel.detail.tabProductComparison\')">\n            {{ $tc(\'propertyMapping.tab-title\') }}\n        </sw-tabs-item>\n    {% endblock %}\n{% endblock %}\n{% block bf_sales_channel_detail_content_view %}\n    <router-view :salesChannel="salesChannel"\n                 class="bf-sales-channel-detail-content-view"\n                 :isLoading="isLoading"\n                 :key="$route.params.id"\n                 :salesChannelType="salesChannelType"\n                 @setPolicy="setPolicy"\n                 :categoriesReloadTriggerEvent="categoriesReloadTriggerEvent">\n    </router-view>\n{% endblock %}\n'},jJQH:function(e,t,n){},jpfF:function(e,t,n){},k4V0:function(e,t){e.exports='{% block bf_ebay_connection_assistant_start_success_content %}\n    <div class="bf-ebay-connection-assistant-start-success__content">\n        <bf-ebay-connection-assistant-account-status />\n    </div>\n{% endblock %}\n'},kfQF:function(e,t){const{Component:n}=Shopware,a=Shopware.Helper.FlatTreeHelper;n.override("sw-sales-channel-menu",{name:"bf-sales-channel-menu",computed:{buildMenuTree(){this.$super("buildMenuTree");const e=new a;return this.salesChannels.forEach((t=>{"26a9ece25bd14b288b30c3d71e667d2c"!==t.type.id&&"7ff39608fed04e4bbcc62710b7223966"!==t.type.id?"function"==typeof this.getDomainLink?e.add({id:t.id,path:"sw.sales.channel.detail",params:{id:t.id},color:"#D8DDE6",label:{label:t.translated.name,translated:!0},icon:t.type.iconName,children:[],domainLink:this.getDomainLink(t),active:t.active}):e.add({id:t.id,path:"sw.sales.channel.detail",params:{id:t.id},color:"#D8DDE6",label:{label:t.translated.name,translated:!0},icon:t.type.iconName,children:[],active:t.active}):e.add({id:t.id,path:"bf.sales.channel.detail",params:{id:t.id},color:"#8a8f98",label:{label:t.translated.name,translated:!0},icon:t.type.iconName,children:[],manufacturer:t.type.manufacturer})})),e.convertToTree()}}})},kg6g:function(e,t){e.exports='{% block bf_sales_channel_detail_base_delete %}{% endblock %}\n{% block bf_sales_channel_detail_base_ebay_token_expires %}{% endblock %}\n{% block bf_sales_channel_detail_base_general_select_marketplace %}\n    <sw-single-select\n            :label="$tc(\'bf-sales-channel.create.labelMarketplace\')"\n            v-model="salesChannel.marketplaceId"\n            @change="onUpdateMarketplace"\n            :options="marketplaces"\n            required\n            validation="required"\n            :error="salesChannelCountryIdError"\n    >\n    </sw-single-select>\n{% endblock %}\n'},l9XX:function(e,t,n){},lWgC:function(e,t){e.exports='{% block sw_category_tree_field_input_results_search_results %}\n    <ul v-else-if="searchResult.length > 0 && term.length > 0"\n        class="sw-category-tree-field__search-results swag-markets-category-tree-field__search-results">\n        {% block sw_category_tree_field_input_results_search_results_item %}\n            <li v-for="item in searchResult"\n                class="sw-category-tree-field__search-result swag-markets-category-tree-field__search-result"\n                :class="{ \'is--focus\': isSearchResultInFocus(item)}"\n                @click.stop="onCheckSearchItem(item)">\n\n                {% block sw_category_tree_field_input_results_search_results_item_checkbox %}\n                    <sw-field type="checkbox"\n                              :value="isSearchItemChecked(item.id)"\n                              class="sw-category-tree-field__search-results-checkbox">\n                    </sw-field>\n                {% endblock %}\n\n                {% block sw_category_tree_field_input_results_search_results_item_folder %}\n                    <div v-if="item.childCount > 0" class="sw-category-tree-field__search-results-icon">\n                        {% block sw_category_tree_field_input_results_search_results_item_folder_icon %}\n                            <sw-icon name="multicolor-folder-tree" multicolor small></sw-icon>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n\n                {% block sw_category_tree_field_input_results_search_results_item_endpoint %}\n                    <div v-else class="sw-category-tree-field__search-results-icon">\n                        {% block sw_category_tree_field_input_results_search_results_item_endpoint_icon %}\n                            <sw-icon name="small-default-circle-small" size="18"></sw-icon>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n\n                {% block sw_category_tree_field_input_results_search_results_item_name %}\n                    <span class="sw-category-tree-field__search-results-name">\n                        {% block sw_category_tree_field_input_results_search_results_item_name_highlight %}\n                            <sw-highlight-text :searchTerm="term"\n                                               :text="getBreadcrumb(item)">\n                            </sw-highlight-text>\n                        {% endblock %}\n                    </span>\n                {% endblock %}\n            </li>\n        {% endblock %}\n    </ul>\n{% endblock %}\n\n'},laOL:function(e,t,n){var a=n("vnn1");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("ea9c0602",a,!0,{})},lahC:function(e,t){e.exports='{% block swag_markets_category_mapping %}\n<sw-card class="bf-card"\n         :title="$tc(\'bf-category-segment-mapping.categoriesMappingTitle\')"\n         :isLoading="isLoading"\n         :showHelpTextIcon="true"\n         :helpTextDescription="$tc(\'bf-category-segment-mapping.categoriesMappingDescription\')"\n         :helpTextWidth="500">\n    <div class="sw-property-assignment">\n        {% block swag_markets_category_mapping_search_field %}\n            <sw-inherit-wrapper v-model="swCategories"\n                                :inheritedValue="null"\n                                isAssociation>\n                <template #content="{ currentValue, isInherited }">\n                    <sw-category-tree-field\n                        :showLabelName="false"\n                        :categoriesCollection="currentValue ? currentValue : []"\n                        class="sw-product-detail__select-category"\n                        :disabled="isInherited"\n                        :key="isInherited"\n                        :placeholder="$tc(\'sw-product.categoryForm.placeholderCategory\')"\n                        @selection-add="swSelectionAdd">\n                    </sw-category-tree-field>\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n        {% block swag_markets_category_mapping_grid %}\n        <sw-grid\n            class="swag_markets_property_assignment__grid"\n            :selectable="false"\n            :items="gridItems"\n            :isFullpage="false"\n            v-if="!showEmptyState"\n            table>\n            {% block swag_markets_category_mapping_grid_columns %}\n                <template slot="columns" slot-scope="{ item }">\n                    {% block swag_markets_category_mapping_grid_columns_category_name %}\n                        <sw-grid-column flex="200px" dataIndex="item.swCategoriesId" :label="$tc(\'categories.shopware-tree-title\')" class="sw-property-assignment__grid_group_column">\n                            <sw-label size="default" appearance="default" :ghost="false" :caps="false" :dismissable="false" variant="info"\n                                      v-tooltip="{message: item.breadCrumb, width: 300}">\n                                {{ $tc(item.shopwareCategory) }}\n                            </sw-label>\n                        </sw-grid-column>\n                    {% endblock %}\n                    {% block swag_markets_category_mapping_grid_columns_category_marketplace %}\n                        <sw-grid-column\n                            :label="createColumnHeaderLabelForMarketplaceColumn()"\n                            flex="minmax(100px, 1fr)"\n                            class="sw-property-assignment__grid_option_column">\n                            {% block swag_markets_grid_column_tree_field %}\n                                <bf-grid-column-tree-field\n                                    :marketplaceCategoriesIds="item.marketplaceCategoriesIds"\n                                    :swCategoryId="item.swCategoriesId"\n                                    :channelsId="channelsId">\n                                </bf-grid-column-tree-field>\n                            {% endblock %}\n                        </sw-grid-column>\n                    {% endblock %}\n                    {% block swag_markets_category_mapping_asction_column %}\n                        <sw-grid-column flex="minmax(100px, 100px)" align="center">\n                            {% block swag_markets_category_mapping_delete %}\n                                <sw-context-button\n                                    :showMenuOnStartup="false"\n                                    :menuWidth="220"\n                                    menuHorizontalAlign="right"\n                                    menuVerticalAlign="bottom"\n                                    icon="small-more"\n                                    :disabled="false"\n                                    :autoClose="true"\n                                    :zIndex="9000">\n                                    <sw-context-menu-item variant="danger" @click="showDeleteModal(item.swCategoriesId)">{{ $tc(\'bf-category-segment-mapping.deleteCategoryMapping\') }}</sw-context-menu-item>\n                                </sw-context-button>\n                            {% endblock %}\n                        </sw-grid-column>\n                    {% endblock %}\n                </template>\n            {% endblock %}\n        </sw-grid>\n            {% block swag_markets_categories_mapping_pagination %}\n            <sw-pagination :total="total" :limit="limit" :page="page" @page-change="pageChange" :steps="[5]"></sw-pagination>\n            {% endblock %}\n            {% block swag_markets_categories_mapping_delete_modal %}\n            <sw-modal\n                v-if="showModal"\n                class="bf-sales-channel-product-errors-modal"\n                ref="modal"\n                :title="$tc(\'bf-category-segment-mapping.deleteModalWarning\')"\n                @modal-close="showModal = false">\n                {{ $tc(\'bf-category-segment-mapping.deleteModalWarningMsg\') }}\n                <template slot="modal-footer">\n                    {% block swag_markets_categories_mapping_footer_cancel %}\n                        <sw-button\n                            @click="closeShowModal"\n                            size="small">\n                            {{ $tc(\'bf-category-segment-mapping.deleteModalCancelBtn\') }}\n                        </sw-button>\n                    {% endblock %}\n                    {% block swag_markets_categories_mapping_footer_delete %}\n                        <sw-button\n                            @click="removeCategoryAssignment"\n                            variant="danger"\n                            size="small">\n                            {{ $tc(\'bf-category-segment-mapping.deleteModalDeleteBtn\') }}\n                        </sw-button>\n                    {% endblock %}\n                </template>\n            </sw-modal>\n            {% endblock %}\n        {% endblock %}\n        {% block swag_markets_category_mapping_empty_state %}\n            <sw-empty-state\n                v-if="showEmptyState"\n                :title="$tc(\'bf-category-segment-mapping.categoriesMappingEmptyState\')"\n                :showDescription="false">\n            </sw-empty-state>\n        {% endblock %}\n    </div>\n</sw-card>\n{% endblock %}\n'},lsNU:function(e,t){e.exports='{% block bf_amazon_connection_assistant_start %}\n    <div class="bf-amazon-connection-assistant-start">\n        <router-view v-on="$listeners"></router-view>\n    </div>\n{% endblock %}\n'},mWjW:function(e,t){e.exports='{% block sw_category_tree_field_input_labels %}\n    <sw-label v-for="selectedCategory in visibleTags"\n              :key="selectedCategory.id"\n              selected=""\n              @dismiss="removeItem(selectedCategory)"\n              v-tooltip="{\n                                        message: getBreadcrumb(selectedCategory),\n                                        width: 300\n                                    }"\n              class="sw-category-tree-field__selected-label"\n              v-if="showLabelName">\n        {% block sw_category_tree_field_input_labels_property %}\n            <span class="sw-category-tree-field__label-property">\n                <slot name="labelProperty">\n                    {{ getLabelName(selectedCategory) }}\n                </slot>\n            </span>\n        {% endblock %}\n\n        {% block sw_category_tree_field_input_labels_dismiss_icon %}\n            <template slot="dismiss-icon">\n                <sw-icon name="small-default-x-line-medium"></sw-icon>\n            </template>\n        {% endblock %}\n\n    </sw-label>\n{% endblock %}\n{% block sw_category_tree_field_input_labels_hidden_tag %}\n    <sw-label v-if="numberOfHiddenTags > 0 && showLabelName"\n              :dismissAble="true"\n              @selected="removeTagLimit"\n              class="sw-category-tree-field__label-more">\n\n            <span class="sw-category-tree-field__label-more-property">\n                <slot name="labelProperty">+{{ numberOfHiddenTags }}</slot>\n            </span>\n    </sw-label>\n{% endblock %}\n\n{% block sw_category_tree_field_input_field %}\n    <input type="text"\n           class="sw-category-tree__input-field-bf"\n           v-model="term"\n           :placeholder="placeholder"\n           ref="searchInput"\n           :disabled="disabled"\n           @focus="openDropdown({ setFocusClass, removeFocusClass });"\n           @keydown.delete="onDeleteKeyup">\n{% endblock %}\n'},mnbE:function(e,t){e.exports='{% block bf_tree %}\n    <div class="sw-tree">\n        {% block bf_tree_search %}\n            <slot name="search">\n                <div class="sw-tree__search bf-tree-search" v-if="searchable">\n                    <sw-field\n                        name="categoryTreeSearch"\n                        :placeholder="$tc(\'sw-tree.general.placeholderSearch\')"\n                        v-model="currentTreeSearch"\n                        @input="searchItems"\n                        size="small">\n                        <template #prefix>\n                            <sw-icon name="default-action-search"></sw-icon>\n                        </template>\n                    </sw-field>\n                </div>\n            </slot>\n        {% endblock %}\n\n        {% block bf_tree_actions_headline %}\n            <slot name="headline">\n                <div class="sw-tree-actions__headline">\n                    {{ title }}\n                </div>\n            </slot>\n        {% endblock %}\n\n        {% block bf_tree_content %}\n            <div class="sw-tree__content">\n                <div class="tree-items">\n                    {% block bf_tree_items %}\n                        <div class="sw-tree__content-no-items" v-if="hasNoItems">\n                            <p>No categories to show</p>\n                        </div>\n                        <slot v-else\n                              name="items"\n                              :treeItems="treeItems"\n                              :onChangeItem="onChange">\n                            <bf-tree-item\n                                    v-for="item in treeItems"\n                                    :key="item.id"\n                                    :item="item">\n                            </bf-tree-item>\n                        </slot>\n                    {% endblock %}\n\n                    {% block bf_tree_loader %}\n                        <sw-loader v-if="isLoading"></sw-loader>\n                    {% endblock %}\n                </div>\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    {#                    <h1>Items</h1>#}\n    {#                    <pre>{{ items }}</pre>#}\n    {#                    <h1>Tree Items</h1>#}\n    {#                    <pre>{{ treeItems }}</pre>#}\n    {#                    <ul>#}\n    {#                        <li v-for="item in items" :key="item.id">#}\n    {#                            <sw-loader v-if="isLoading" size="14"></sw-loader>#}\n    {#                            <p>#}\n    {#                                {{ item.name }}#}\n    {#                                {{ item.children }}#}\n    {#                                <br>#}\n    {#                                <button type="button" @click="getItems(item.id)" v-if="item.childCount > 0">Load child#}\n    {#                                    categories for {{ item.name }}</button>#}\n    {#                            </p>#}\n    {#                            <p v-if="categories">#}\n    {#                            <pre>{{ categories }}</pre>#}\n    {#                                I am here#}\n    {#                                {{ item.name }}#}\n    {#                            </p>#}\n    {#                            <li v-if="item.children.length > 0">#}\n\n    {#                                <ul>#}\n    {#                                    <li v-for="child in item.children" :key="child.id">#}\n    {#                                        {{ child.name }}#}\n    {#                                        <button type="button" @click="getItems(child.id)" v-if="child.childCount > 0">Load child#}\n    {#                                            categories for {{ child.name }}</button>#}\n    {#                                    </li>#}\n    {#                                </ul>#}\n    {#                            </li>#}\n    {#                        </li>#}\n    {#                    </ul>#}\n    {#                    <ul>#}\n    {#                        <li v-for="item in items">#}\n    {#                        <li class="" v-if="item.children.length > 0">#}\n    {#                            <ul>#}\n    {#                                <li v-for="child in item.children">#}\n    {#                                    <p>{{ child.name }}</p>#}\n    {#                                </li>#}\n    {#                            </ul>#}\n    {#                        </li>#}\n    {#                        </li>#}\n    {#                        #}{#                     <slot v-else#}\n    {#                        #}{#                           name="options"#}\n    {#                        #}{#                           :treeItems="items"#}\n    {#                        #}{#                           :name="name"#}\n    {#                        #}{#                           @check-item="checkItem"#}\n    {#                        #}{#                           @change="changeItem">#}\n    {#                        #}{#                         {% block bf_tree_slot_items %}#}\n    {#                        #}{#                             <bf-tree-item#}\n    {#                        #}{#                                     :items="items"#}\n    {#                        #}{#                                     :disabled="true"#}\n    {#                        #}{#                                     :name="name"#}\n    {#                        #}{#                                     @change="changeItem"#}\n    {#                        #}{#                             ></bf-tree-item>#}\n    {#                        #}{#                         {% endblock %}#}\n    {#                        #}{#                     </slot>#}\n    {#                    </ul>#}\n'},mqDg:function(e,t,n){},n5Uy:function(e,t,n){},nHCx:function(e,t,n){},npkz:function(e,t){e.exports='<sw-card v-if="showPolicies"\n         :title="$tc(\'bf-sales-channel.detail.titleGeneralEbayPolicies\')"\n         :isLoading="shippingPolicy.shippingPoliciesIsLoading ||\n          paymentPolicy.paymentPoliciesIsLoading || returnPolicy.returnPoliciesIsLoading">\n    {% block bf_sales_channel_ebay_policies_info %}\n    <sw-alert variant="info" appearance="system" :showIcon="true" :closable="false" v-if="!clientRdy">\n        {{ $tc(\'bf-sales-channel.detail.ebayPoliciesSystemInfo\') }}\n    </sw-alert>\n    <sw-alert variant="error" appearance="system" :showIcon="true" :closable="false" v-if="errorLoadingPolicies">\n        {{ $tc(\'bf-sales-channel.detail.ebayErrorLoadingPolicies\') }}\n    </sw-alert>\n    <sw-alert variant="info" appearance="notification" :showIcon="true" :closable="false">\n        {{ $tc(\'bf-sales-channel.detail.ebayPoliciesInfo\') }}\n        <a href="https://www.ebay.de/help/selling/business-policies/rahmenbedingungen-fr-ihre-angebote?id=4212" target="_blank">{{ $tc(\'bf-sales-channel.detail.ebayPoliciesLinkName\') }}</a>\n    </sw-alert>\n    {% endblock %}\n    {% block bf_sales_channel_ebay_policies_shipping_single_select %}\n        <sw-single-select\n            :options="shippingPolicy.shippingPolicies"\n            :label="$tc(\'bf-sales-channel.detail.ebayShippingPolicyLabel\')"\n            :value="shippingPolicy.selectedShippingPolicy"\n            v-model="shippingPolicy.selectedShippingPolicy"\n            :disabled="!clientRdy || errorLoadingPolicies"\n            required>\n        </sw-single-select>\n    {% endblock %}\n    {% block bf_sales_channel_ebay_policies_payment_single_select %}\n        <sw-single-select\n            :options="paymentPolicy.paymentPolicies"\n            :label="$tc(\'bf-sales-channel.detail.ebayPaymentPolicyLabel\')"\n            :value="paymentPolicy.selectedPaymentPolicy"\n            v-model="paymentPolicy.selectedPaymentPolicy"\n            :disabled="!clientRdy || errorLoadingPolicies"\n            required>\n        </sw-single-select>\n    {% endblock %}\n    {% block bf_sales_channel_ebay_policies_return_single_select %}\n        <sw-single-select\n            :options="returnPolicy.returnPolicies"\n            :label="$tc(\'bf-sales-channel.detail.ebayReturnPolicyLabel\')"\n            :value="returnPolicy.selectedReturnPolicy"\n            v-model="returnPolicy.selectedReturnPolicy"\n            :disabled="!clientRdy || errorLoadingPolicies"\n            required>\n        </sw-single-select>\n    {% endblock %}\n</sw-card>\n'},oZia:function(e,t,n){var a=n("IPK3");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("5bcaa753",a,!0,{})},odZB:function(e,t){e.exports='{% block bf_ebay_connection_assistant_start_authorize_content %}\n    <sw-container>\n        {% block bf_amazon_connection_assistant_modal_content_descritpion %}\n        <sw-card-section class="bf-ebay-connection-assistant-modal__content-description">\n            {{ $tc(\'ebay.authoriseDescription\') }}\n        </sw-card-section>\n        {% endblock %}\n        {% block bf_ebay_connection_assistant_start_authorize_content_left %}\n            <sw-card-section divider="right">\n                <div class="bf-ebay-connection-assistant-start-authorize__content-left">\n                    {% block bf_ebay_connection_assistant_start_authorize_content_left_form %}\n                        {% block bf_ebay_connection_assistant_start_authorize_content_left_form_button_connect %}\n                            <sw-button\n                                @click="authorize"\n                                size="small"\n                                variant="primary"\n                                :block="true"\n                                :disabled="btnDisabled">\n{#                                :link="irpLink">#}\n                                {{ $tc(\'button.connect\') }}\n                            </sw-button>\n                        {% endblock %}\n                    {% endblock %}\n                </div>\n            </sw-card-section>\n        {% endblock %}\n    </sw-container>\n{% endblock %}\n'},opF4:function(e,t){e.exports='{% block swag_markets_attributes_mapping__container %}\n    <sw-card class="bf-card"\n             :title="$tc(\'propertyMapping.card-title.transferredProperties\')"\n             :showHelpTextIcon="true"\n             :helpTextDescription="$tc(\'propertyMapping.information.message\')"\n             :helpTextWidth="500">\n        {% block swag_markets_properties_mapping_component__container %}\n            <properties-mapping\n                :salesChannelType="salesChannelType"\n                :amazonSegment="amazonSegment"\n                :amazonProductType="amazonProductType">\n            </properties-mapping>\n        {% endblock %}\n        {% block swag_markets_custom_fields_mapping_component__container %}\n            <custom-fields-mapping\n                :salesChannelType="salesChannelType"\n                :amazonSegment="amazonSegment"\n                :amazonProductType="amazonProductType">\n            </custom-fields-mapping>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},oz3m:function(e){e.exports=JSON.parse('{"global":{"error-codes":{"bd79c0ab-ddba-46cc-a703-a7a4b08de310":"Diese Email ist ungültig","d94b19cc-114f-4f44-9cc4-4138e80a87b9":"Die maximale Länge muss 20 Zeichen betragen","9ff3fdc4-b214-49db-8718-39c315e33d45":"Die Mindestlänge muss 8 Zeichen betragen","de1e3db3-5ed4-4941-aae4-59f3667cc3a3":"Telefonnummer ist ungültig"},"titleSaveError":"Fehler","clientNotReady":"Der Mandant ist nicht bereit","notAuthorised":"Benutzer ist nicht autorisiert","yes":"Ja","no":"Nein","globalConfigInfo":"Bitte beachte, dass diese Einstellung für alle Marktplatz Verkaufskanäle gültig ist!","login":"Anmelden"},"bf-ebay-best-offer":{"notification":{"error":{"title":"Ebay Preisvorschlag Fehler","absoluteAutoAcceptMessage":"Das automatische Akzeptieren vom absoluten Rabattwert darf nicht unter Maximale Absolute Rabatt liegen","relativeAutoAcceptMessage":"Das automatische Akzeptieren vom relativen Rabattwert darf nicht unter Maximale Relative Rabatt liegen"}}},"bf-sales-channel":{"create":{"labelMarketplace":"Marktplatz","labelCountry":"Land","labelCurrency":"Währung","labelLanguage":"Sprache","duplicateSalesChannel":"Der Verkaufskanaltyp \\"{type}\\" existiert bereits, mehrere Kanäle von dem typ \\"Amazon\\" oder \\"eBay\\" können nicht angelegt werden."},"detail":{"labelInputActive":"aktiv","labelInputNotActive":"inaktiv","labelActiveSince":"Aktiv seit","labelNextBilling":"Nächste Abrechnung","labelInputProcessingTime":"Bearbeitungszeit","contractLabel":"Vertragsdetails","contractButton":"Vertrag wechseln","withoutContractTitle":"Keine Lizenz","contractContentDescription":"Beschreibung","contractContentPrice":"Preis","labelProcessingTime":"Standard Bearbeitungszeit","notAuthorisedText":"Um zu sehen welche Subscription du gebucht hast, logge dich bitte in den Shopware Account ein ","delete":"Das Entfernen dieses Verkaufskanals kann nicht wieder rückgängig gemacht werden. Sämtliche Einstellungen gehen verloren. Angebote auf dem Verkaufskanal werden deaktiviert und nicht weiter aktualisiert.","titleGeneralEbayPolicies":"Rahmenbedingungen","ebayShippingPolicyLabel":"Versand","ebayPaymentPolicyLabel":"Zahlart","ebayReturnPolicyLabel":"Retouren","ebayPoliciesInfo":"Um die Rahmenbedinungen für eBay zu aktivieren klicke bitte auf folgenden Link: ","ebayPoliciesLinkName":"eBay Rahmenbedinung","ebayPoliciesSystemInfo":"Damit du die Rahmenbedingungen konfigurieren kannst, musst du dein eBay Konto verbinden.","ebayErrorLoadingPolicies":"Beim Laden der Rahmenbedinungen ist ein Fehler aufgetreten. Damit die Rahmenbedingungen angezeigt werden können, muss dein eBay Konto verbunden sein.","ebayExpireTokenTitle":"eBay - Token","ebayExpireTokenOAuthTitle":"Der Oauth-Token ist gültig bis:","ebayExpireTokenAuthTitle":"Der Auth-Token ist gültig bis:","ebayExpireTokenOAuthNotAvailable":"Keine Angaben","ebayExpireTokenAuthNotAvailable":"Keine Angaben","ebayExtendTokenOAuthBtn":"OAuth-Token verlängern","ebayExtendTokenAuthBtn":"Auth-Token verlängern","ebayTokenSystemInfo":"Um neue Tokens zu erzeugen, musst du dein eBay Konto verbinden.","ebayErrorLoadingTokens":"Beim Laden der Tokens ist ein Fehler aufgetreten. Damit du neue Tokens generieren kannst, muss dein eBay Konto verbunden sein.","infoActivateDeactivateSalesChannel":"Bitte beachte, dass nach dem Deaktivieren keine Daten mehr an den Marktplatz übergeben werden. Somit werden keine Bestandsänderungen und Preisänderungen übergeben.","ebayAccountCardTitle":"eBay - Konto","ebayAccountInfo":"Damit du die Konto-Informationen konfigurieren kannst, musst du dein eBay Konto verbinden.","ebayBestOffers":"eBay - Preisvorschläge","ebayBestOfferAbsolute":"Maximaler Absoluter Rabatt","ebayBestOfferAbsoluteHelpText":"Ist der Rabatt des Preisvorschlags höher als der angegebene Wert, wird dieser automatisch abgelehnt","ebayBestOfferAbsoluteAutoAccept":"Automatisch akzeptieren ab absolutem Rabatt","ebayBestOfferAbsoluteAutoAcceptHelpText":"Ist der Rabatt des Preisvorschlags niedriger als der angegebene Wert, wird dieser automatisch akzeptiert","ebayBestOfferActive":"Preisvorschläge Aktiv","ebayBestOfferActiveHelpText":"Der Preisvorschlag ist nur in manchen Kategorien möglich und kann nicht mit Varianten verwendet werden","ebayBestOfferAutoAccept":"Automatisch akzeptieren","ebayBestOfferAutoAcceptHelpText":"Ist der Rabatt des Preisvorschlags niedriger als der maximale Rabatt, wird dieser automatisch akzeptiert","ebayBestOfferRelative":"Maximaler Relativer Rabatt","ebayBestOfferRelativeHelpText":"Ist der Rabatt des Preisvorschlags höher als der angegebene Wert, wird dieser automatisch abgelehnt","ebayBestOfferRelativeAutoAccept":"Automatisch akzeptieren ab relativem Rabatt","ebayBestOfferRelativeAutoAcceptHelpText":"Ist der Rabatt des Preisvorschlags niedriger als der angegebene Wert, wird dieser automatisch akzeptiert","ebayBestOfferFix":"Preisvorschläge automatisch abschalten","ebayBestOfferFixHelpText":"Preisvorschläge automatisch abschalten, falls schon jemand drauf geboten hat. Dafür wird die Auktion beendet und wieder neu eingestellt","ebayPaymentMethods":"eBay - Zahlungsarten","ebayPaymentMethodPayPal":"eBay - PayPal: ","ebayPaymentMethodMoneyXferAcceptedInCheckout":"eBay - Vorkasse: ","ebayPaymentMethodCashOnPickup":"eBay - Barzahlung bei Abholung: ","ebayPaymentMethodCod":"eBay - Nachname: ","ebayPaymentMethodEbayPayments":"eBay - Payments: ","ebayPaymentSelectName":"Auswählen...","showPaymentChangedNotificationMsg":"Die Zahlarten am Saleschannel wurden geändert, bitte speichere diese Änderungen zuerst.","noPaymentMethodsSelected":"Damit du den Saleschannel aktiv schalten kannst, musst du mindestens eine Zahlart matchen.","noPoliciesSelected":"Damit du den Saleschannel aktiv schalten kannst, musst du alle Ebay - Rahmenbedinungen ausgewählt haben.","amazonFbaPrimeShippingMethodsTitle":"FBA / Prime Versandarten","amazonFbaPrimeFbaLabel":"FBA","amazonFbaPrimeFbaHelpText":"Wenn du für Amazon FBA Bestellungen eine andere Versandart verwenden willst, wähle diese hier aus.","amazonFbaPrimePrimeHelpText":"Wenn du für Amazon Prime Bestellungen eine andere Versandart verwenden willst, wähle diese hier aus.","amazonFbaPrimePrimeNextDayHelpText":"Wenn du für Amazon Prime next day Bestellungen eine andere Versandart verwenden willst, wähle diese hier aus.","amazonFbaPrimePrimeSecondDayHelpText":"Wenn du für Amazon Prime second day Bestellungen eine andere Versandart verwenden willst, wähle diese hier aus.","amazonFbaPrimePrimeLabel":"Prime","amazonFbaPrimePrimeNextDayLabel":"Prime next day","amazonFbaPrimePrimeSecondDayLabel":"Prime second day","amazonDangerousGoodsLabel":"Wert für Gefahrengut","amazonNeedsBatteryLabel":"Batterien werden benötigt?","amazonFbaRequiredInfo":"Für eine korrekte Übertragung deiner FBA Artikel braucht Amazon folgende Informationen.","netPriceSwitchLabel":"Produkte sollen mit Nettopreisen verkauft werden","amazonPaymentMethodInfoText":"Der Verkaufskanal ist mit der Zahlungsart \\"Shopware Markets - Amazon\\" verknüpft. Alle Bestellungen werden auf diese Zahlungsart geschrieben. Diese darf nicht gelöscht werden, andernfalls können Bestellungen nicht an Shopware übertragen werden.","prices":"Preise"},"contractModal":{"title":"Vertragsdetails","text":"Wenn du deinen Vertrag ändern möchtest, wähle eine andere Option und klicke auf die Speichern-Taste.","chooseButton":"Auswählen","currentContractText":"Aktiver Vertrag","month":"Monat","buttonRemove":"Lizenz kündigen","buttonChooseContract":"Buchen","perChannel":"Produkte pro Vertriebskanal","includedText":"Verkäufe inklusive*","extraPriceText":"* jeder weitere Verkauf","bfSpecialProposal":"* Nach Prüfung durch die brickfox GmbH erhalten Sie hier ein separates Angebot","permissionsModalTitle":"Shopware Markets Berechtigungen","permissionsClose":"Schließen","permissionsSharedData":{"contentText":"Shopware Markets wird einige der folgenden Daten mit unserem Unterauftragsnehmer","contentTextEnd":"teilen","headLine":"Geteilte Kundendaten","name":"Kundennamen","email":"Kunden Email-Adressen","phone":"Kunden Telefonnummern","birthdate":"Kunden Geburtsdatum","address":"Kunden Rechnungs- und Lieferadressen"},"subProcessorTitle":"Unterauftragnehmer von Shopware","table":{"withoutLimitText":"Ohne Limit","feeLabel":"Gebühr je Transaktion","feeHelpText":"Kosten je zusätzlichem Verkauf","transactionsLabel":"Transaktionen inkl.","transactionsHelpText":"Anzahl der Verkäufe ohne Aufpreis","limitsLabel":"SKU-Limit je Kanal","limitsHelpText":"Maximum der zugewiesenen Artikel je Verkaufskanal","singleProductListLabel":"Einzelprodukt listen","singleProductListHelpText":"Möglichkeit einen Einzelartikel eBay oder Amazon zuzuweisen. Dieser wird dann wenn alle Voraussetzungen erfüllt sind, an den Verkaufskanal exportiert.","assigningLabel":"Kategorieverknüpfung","assignHelpText":"Möglichkeit eine Shopware-Shopkategorie / Unterkategorie auf einmal einer Marktplatzkategorie zuweisen. Alle mit der Shopkategorie verknüften Artikel werden somit der Marktplatzkategorie zugewiesen.","generalSettingsLabel":"Allgemeine Konfiguration","generalSettingsHelpText":"In diesem Bereich werden übergreifende Einstellungen vorgenommen, wie z.B. Versand- und Zahlungsarten.","createNewArticleLabel":"Anlegen neuer Artikel","createNewArticleHelpText":"Ein Artikel, welcher noch nicht auf Amazon oder eBay gelistet ist, wird automatisch als neues Marktplatzangebot angelegt.","bulletPointsLabel":"Anlegen von Bulletpoints","bulletPointsHelpText":"Attribute können als Bulletpoints direkt auf die Marktplatzfelder zugewiesen und übertragen werden.","amazonKeywordsLabel":"Amazon Keywords","amazonKeywordsHelpText":"Suchbegriffe können vergeben und direkt auf die Marktplatzfelder zugewiesen und übertragen werden.","offerExistingItemsLabel":"Aufschalten auf bestehende Amazon Angebote","offerExistingItemsHelpText":"Ein Artikel aus dem Sortiment, zu dem es bereits ein Angebot auf dem Marktplatz gibt, wird automatisch diesem Angebot zugewiesen.","channelErrorListLabel":"Anzeige Fehlerliste","channelErrorListHelpText":"Artikel die auf Fehler laufen, werden entsprechend markiert und die Fehlerliste kann aufgerufen werden. Ein Einloggen in das Seller Central / Mein eBay ist nicht erforderlich.","deeplinkPossibilityLabel":"Deeplink auf Artikel im Verkaufskanal","deeplinkPossibilityHelpText":"Es kann über einen im Sales Channel angezeigten Link direkt der gelistete Marktplatzartikel aufgerufen und im einem separaten Browserfenster angesehen und geprüft werden.","amazonFbaLabel":"Amazon FBA","amazonFbaHelpText":"Im Sales Channel ist es möglich, Artikel zu markieren, für die es einen eingelagerten Bestand direkt in einem Amazon-Lager gibt. Ist diese Markierung gesetzt, wird der verfügbare Bestand nicht aus Shopware an Amazon übertragen und Amazon verwendet seinen eigenen Bestand. Alle weiteren Artikelinformationen werden weiterhin aktualisiert (z.B. Preisänderungen).","ebayPlusLabel":"Ebay Plus","ebayPlusHelpText":"Es können im Sales Channel eBay spezielle Einstellungen für eBay Plus, den für den eBay-Kunden kostenlosen Premiumversand, vorgenommen werden, z.B. Artikel für eBay Plus markieren und eine spezielle Versandart hierfür anlegen.","amazonPrimeLabel":"Amazon Prime","amazonPrimeHelpText":"SW-Markets kann am Amazon Programm \\"Prime für Händler\\" teilnehmen und somit für den eigenen Versand das Prime-Logo auf Amazon verwenden. Hierzu wird u.a. eine spezielle Versandart eingerichtet, um Prime für Händler-Bestellungen zu identifizieren. Das verwendete ERP-System muss ebenfalls \\"Prime für Händler\\" unterstützen.","customEbayTemplateLabel":"Shopware Ebay Template","customEbayTemplateHelpText":"Es gibt ein von Shopware bereitgestelltes Template, welches für die Darstellung der Produkte auf eBay verwendet werden kann.","ebaySuggestedPriceLabel":"eBay - vorgeschlagener Preis","ebaySuggestedPriceHelpText":"Es können Regeln für die Preisvorschlagsfunktion von eBay festgelegt werden. Dies ermöglicht es eBay automatsiert auf Preisvorschläge zu antworten, ohne dass der Händler im Einzelfall entscheiden muss.","optionsTransferLabel":"Option der Übernahme Shop Artikeln *","optionsTransferHelpText":"Aus Shopware wird eine Verbindung mit dem bestehenden Marktplatz-Konto hergestellt. Handelt es sich um ein bereits befülltes Marktplatzkonto, so erfolgt eine Rückfrage, ob bestehende Angebote übernommen werden sollen. ","contractTermsAndConditionsBegin":"Ich akzeptiere die ","contractTermsAndConditionsLink":"https://www.shopware.com/de/gtc/","contractTermsAndConditionsEnd":"AGB ","contractSubProcessorBegin":"Mir ist bewusst, dass diese App weitere ","contractSubProcessorLink1":"Berechtigungen ","contractSubProcessorMiddle":"benötigt und aktzeptiere ","contractSubProcessorLink2":"brickfox GmbH ","contractSubProcessorEnd":"als neuen Unterauftragsnehmer von Shopware"},"notification":{"title":"Lizenz","canceledMessage":"Die Lizenz wurde erfolgreich gekündigt","changedMessage":"Eine neue Lizenz wurde erfolgreich erworben","errorTitle":"Fehler","errorSkuLimitAchieved":"Das zulässige Limit von {limit} Produkte für die Saleschannel {name} wurde erreicht. Um weitere Artikel freizuschalten benötigst du ein anderes Lizenzpaket. Du kannst dieses in der generellen Konfigurationsseite deines Saleschannel erwerben.","errorTooMuchProductsAssigned":"Die Lizenz {contractName} kann leider nicht beendet werden, da noch aktive Produkte zugewiesen sind."}},"contractAgbModal":{"text":"Durch die Aktion erwirbst du das kostenpflichtige Saleschannel Plugin","agreementWithPaymentLabel":"Ich bestätige den kostenpflichtigen Erwerb der Lizenz \\"{name}\\" für {price} EUR mtl.","agreementWithAgbLabel":"Ich erkläre mich mit den Bedingungen einverstanden","agreementWithAgbText":"Bitte beachte unsere"},"contractCancelModal":{"title":"Lizenz kündigen","text":"Eine Kündigung der Lizenz \\"{name}\\" wird unverzüglich durchgeführt. Ab sofort steht dir kein Support mehr zur Verfügung.","agreementWithCancelingLabel":"Ich bestätige, dass die Lizenz sofort gekündigt wird"}},"bf-support":{"modal":{"titleSupport":"Support Anfrage","titleTransferProducts":"Anfrage Artikelübernahme","nameFieldLabel":"Vor- / Nachname","labelMessage":"Deine Nachricht","messagePlaceholder":"Schreibe hier deine Nachricht","agreementWithSendToBrickfox":"Hiermit willige ich ein, dass meine Daten an die brickfox GmbH, Hermannstraße 5A, 70178 Stuttgart für die Anfrage des Artikelübernahme Services übertragen wird. Die Anfrage selbst ist kostenlos.","buttonSendRequest":"Anfrage senden"},"notification":{"success":{"title":"Erfolg","message":"Deine Anfrage wurde erfolgreich gesendet"},"error":{"title":"Fehler","message":"Du hast einige Fehler"}}},"bf-property-transfer":{"tab":{"label":"Eigenschaften übertragen","text":"Bevor die Eigenschaften mit den Attributen des Marktplatzes verknüpft werden können, müssen Sie die Eigenschaften für den entsprechenden Marktplatz bereitstellen. Wähle bitte die entsprechenden Merkmale aus und klicke auf Speichern. Danach kannst du die entsprechenden Mappings vornehmen.","warningText":"Bitte beachte, dass diese Einstellung für alle Marktplatz Verkaufskanäle gültig ist!"},"list":{"columnName":"Eigenschaften","columnTransfer":"Übertragen"},"notification":{"title":"Eigenschaften Übertragung","messageSuccess":"Eigenschaften wurden erfolgreich übertragen.","messageError":"Eigenschaften wurden nicht übertragen. Bitte wende dich an die Verwaltung."}},"bf-custom-fields-transfer":{"tab":{"label":"Zusatzfelder übertragen","text":"Bevor die Zusatzfelder mit den Attributen des Marktplatzes verknüpft werden können, musst du die Zusatzfelder für den entsprechenden Marktplatz bereitstellen. Wähle bitte die entsprechenden Merkmale aus und klicke auf Speichern. Danach kannst du die entsprechenden Mappings vornehmen."},"list":{"columnName":"Technischer Name des Zusatzfelder","columnTransfer":"Übertragen"},"notification":{"title":"Zusatzfelder Übertragung","messageSuccess":"Zusatzfelder wurden erfolgreich übertragen.","messageError":"Zusatzfelder wurden nicht übertragen. Bitte wende dich an die Verwaltung."}},"bf-category-segment-mapping":{"title":"Segment Zuordnung","description":"Hier verknüpfst du deine Shopware Kategorien mit den Amazon Produktsegmenten und den dazugehörigen Produkttypen. Auf der linken Seite befinden Sie die Shopware Kategorien. Dort wählst du bitte eine Kategorie aus. Hierdurch werden im Hintergrund alle sich darin befindlichen Produkte selektiert.\\nAuf der rechten Seite wählst du ein Produktsegment und einen Produkttyp aus. Mit Speichern werden nun beide Bäume und die darin enthaltenen Produkte verknüpft.","information":"Wähle eine Kategorie für die Zuweisung des Amazon-Segments und des Produkttyps","notification":{"title":"Zuordnung von Kategorie zu Amazon-Segment","messageSuccess":"Deine Kategorie wurde erfolgreich zugeordnet","messageError":"Fehler passiert"},"deleteCategoryMapping":"Kategorie - Zuweisung löschen","amazonProductSegmentLabel":"Produktsegment","amazonProductTypeLabel":"Produkttyp","savedCategoryMapping":"Kategorie - Zuweisung wurde erfolgreich gespeichert.","savedCategoryMappingTitle":"Kategorie - Zuweisung","deleteModalWarning":"Achtung","deleteModalWarningMsg":"Sind Sie sicher das Sie die Kategorie-Zuweisung löschen wollen?","deleteModalCancelBtn":"Abbrechen","deleteModalDeleteBtn":"Löschen","categoriesMappingEmptyState":"Keine Kategorie-Zuweisungen vorhanden","categoriesMappingDescription":"Hier kannst du deine Shopware-Kategorien mit Marktplatz-Kategorien verknüpfen. Alle Produkte, aus den selektierten Shopware-Kategorien, werden den ausgewählten Marktplatz-Kategorien zugewiesen.","categoriesMappingTitle":"Kategorie - Zuweisung"},"attributesMapping":{"amazonColumnName":"Amazon-Attribut Name","ebayColumnName":"Ebay-Attribut Name","assigned":"Verknüpft","removeWarningMsg":"Bist du sicher, dass du die Verknüpfung aufheben willst?","properties":{"emptyStateText":"Keine Eigenschaften vorhanden","columnName":"Shopware Eigenschaften"},"custom-fields":{"emptyStateText":"Keine Zusatzfelder vorhanden","columnName":"Shopware Zusatzfelder"},"removeAssignment":"Verknüpfung entfernen","selectAttribute":"Attribut auswählen","mandatory":"Pflichtfeld"},"products":{"tab-title":"Produkte","title":"Zugewiesene Produkte","table-headers":{"product-name":"Artikelname","product-number":"Produktnummer","status":"Aktivitätsstatus","online-status":"Marktplatz Onlinestatus","category-name":"Kategorie","error":"Fehler","asin":"ASIN","asinManagement":"ASIN Verwaltung"},"no-license":"Keine gültige Marktplatzlizenz","showErrorsButton":"Fehler anzeigen","notTransferredProduct":"Das Produkt wurde nicht auf die Brickfox Business Platform übertragen.","notTransferredProductToMarketplace":"Das Produkt ist nicht auf den Marktplatz übertragen.","failedShopsFilter":"Das Produkt hat einen Kanal-Filter nicht bestanden: ","modalErrors":{"title":"Fehler","text":"Hier siehst du Fehler in Bezug auf dein Produkt vom Marktplatz."},"action":{"openMarketplaceProduct":"Produkt auf Markplatz öffnen"},"edit":{"noInformation":"Kein Antrag","invalidContractInfo":"Um die erweiterten Einstellungen nutzen zu können, musst du deinen Vertrag aufwerten.","basisBFeatures":"Erweiterte Einstellungen","cancel":"Abbrechen","save":"Speichern","general":"Allgemeine Einstellungen","label":{"ebayPlus":"eBayPlus für diesen Artikel aktivieren","condition":"Artikel zustand","conditionNote":"Artikel Zustand Hinweis","merchantShippingGroupName":"Verkäuferversandgruppe","searchTerms":"Allgemeine Schlüsselwörter","platinumKeywords":"Platinum Schlüsselwörter","fbaActive":"FBA für diesen Artikel aktivieren"},"placeholder":{"merchantShippingGroupName":"Standardvorlage Amazon","searchTerms":"Schlüsselwort 1, Schlüsselwort 2, Schlüsselwort 3, …","platinumKeywords":"Schlüsselwort 1, Schlüsselwort 2, Schlüsselwort 3, …"},"conditions":{"ebay":{"new":"Neu","asNew":"Neuwertig","used":"Gebraucht","veryGood":"Sehr gut","good":"Gut","acceptable":"Akzeptabel"},"amazon":{"new":"Neu","usedLikeNew":"Gebraucht - Wie Neu","usedVeryGood":"Gebraucht - Sehr Gut","usedGood":"Gebraucht - Gut","usedAcceptable":"Gebraucht - Akzeptabel","collectibleLikeNew":"Sammlerstück - Wie Neu","collectibleVeryGood":"Sammlerstück - Sehr gut","collectibleGood":"Sammlerstück - Gut","collectibleAcceptable":"Sammlerstück - Akzeptabel","refurbished":"Generalüberholt","club":"Club"}},"notification":{"title":{"success":"Erfolg","error":"Fehler"},"message":{"success":"Produktinformationen wurden erfolgreich gespeichert.","error":"Beim Speichern der Produktinformationen ist ein Fehler aufgetreten."}}}},"salesChannel-connectionAssistant":{"connectionNotAvailable":"Damit du dich mit dem Markplatz verbinden kannst, musst du als erstes ein passenden Vertag auswählen.","connectionAvailable":"Um den Saleschannel zu aktivieren, musst du dich mit dem Marktplatz - Konto verbinden.","startConnectionAssistant":"Verbindungs-Assistent starten","chooseContract":"Vertrag auswählen"},"salesChannelSettings":{"invalidContractInfo":"Um die erweiterten Einstellungen nutzen zu können, musst du deinen Vertrag aufwerten.","card":{"title":{"extendedSettings":"Erweiterte Einstellungen"}},"amazon":{"helpText":{"merchantShippingGroup":"<a class=\\"bf-help-link\\" href=\\"https://sellercentral.amazon.de/gp/help/201834130\\" target=\\"_blank\\">>> Gehe zu Hilfeseite</a>","fba":"<a class=\\"bf-help-link\\" href=\\"https://sellercentral.amazon.de/gp/help/help.html?itemID=53921\\" target=\\"_blank\\">>> Gehe zu Hilfeseite</a>"},"label":{"merchantShippingGroupName":"Verkäuferversandgruppe","enableFba":"FBA Service aktivieren","vatCalculationService":"Umsatzsteuer - Berechnungsservice"},"placeholder":{"merchantShippingGroupName":"Standardvorlage Amazon"}},"ebay":{"helpText":{"ebayPlus":"Hier kannst du den eBay Plus Service aktivieren oder deaktivieren"},"label":{"enableEbayPlus":"eBay Plus aktivieren","payPalEmail":"PayPal Email-Adresse","ebayLogo":"Verkäufer-Logo URL","sellerZip":"Postleitzahl","sellerCity":"Artikelstandort","feedbackComment":"Automatische Käuferbewertung"}}},"categories":{"tab-title":"Kategorien","title":"Kategorien Mapping","shopware-tree-title":"Shopware Kategorien","amazon-marketplace-title":"Amazon Kategorien","ebay-marketplace-title":"eBay Kategorien","marketplace-default-title":"Marktplatz Kategorien","descriptionAmazon":"<p>Hier verknüpfst du deine Shopware Kategorien mit den Amazon Shopkategorien. Auf der linken Seite befinden sich die Shopware Kategorien. Dort wählst du bitte eine Kategorie aus. Hierdurch werden im Hintergrund alle sich darin befindlichen Produkte selektiert.</p><p>Auf der rechten Seite wählst du eine oder mehrere Amazon Shopkategorien aus. Mit Speichern werden nun beide Bäume und die darin enthaltenen Produkte verknüpft. Hierdurch erscheinen deine Produkte in den jeweiligen Kategorien bei Amazon.</p>","descriptionEbay":"<p>Hier verknüpfst du deine Shopware Kategorien mit den eBay Shopkategorien. Auf der linken Seite befinden sich die Shopware Kategorien. Dort wählst du bitte eine Kategorie aus. Hierdurch werden im Hintergrund alle sich darin befindlichen Produkte selektiert.</p><p>Auf der rechten Seite wählst du eine oder mehrere eBay Shopkategorien aus. Mit Speichern werden nun beide Bäume und die darin enthaltenen Produkte verknüpft. Hierdurch erscheinen deine Produkte in den jeweiligen Kategorien bei ebay.</p>"},"propertyMapping":{"tab-title":"Mapping","card-title":{"transferredProperties":"Attribut - Zuweisung","variationProperties":"Variantenbildende Eigenschaften"},"variationProperties":{"swLabel":"Variantenbildende Eigenschaften","amazonLabel":"Amazon Merkmale","emptyState":"Keine variantenbildenden Eigenschaften vorhanden"},"columns":{"name":"Name","externalName":"Externer Name"},"labels":{"search":"Suchen"},"placeholder":{"search":"Name suchen …"},"buttons":{"save":"Speichern","cancel":"Abbrechen"},"infoText":"Hier siehst du alle Eigenschaften und Zusatzfelder, die bereits an den Markplatz übergeben wurden. Diese musst du nun noch mit den entsprechenden Merkmalen des Verkaufskanals verknüpfen.","notifications":{"title":{"success":"Erfolg","warning":"Warnung","error":"Fehler"},"message":{"success":"Eigenschaften / Zusatzfelder Mapping wurde erfolgreich gespeichert.","error":"Beim Speichern des Eigenschaften / Zusatzfelder Mappings ist ein Fehler aufgetreten.","warningTooManySelected":"Es kann nur ein externer Name ausgewählt werden.","warningNoSelection":"Es wurde kein externer Name ausgewählt.","noPropertiesFound":"Es konnten keine externen Namen gefunden werden.","noVariationPropertiesFound":"Es konnten keine Eigenschaften gefunden werden, die benutzt werden, um eine Variante zu erstellen"}},"information":{"message":"Sie können nur Eigenschaften/Zusatfelder mappen, wenn die Produkte mit diesen Eigenschaften/Zusatzfeldern übertragen worden sind."},"product-variant-properties":{"edit":"Zum Bearbeiten bitte in die betroffene Spalte doppelklicken"}},"unitMapping":{"tab-title":"Maßeinheiten Mapping","card-title":"Maßeinheiten","column":{"name":"Name","externalName":"Externer Name","type":"Typ"},"edit":{"externalName":"Externer Name"},"infoText":"Hier siehst du alle Maßangaben, die an den Artikeln hängen, die den Verkaufskanälen zugewiesen wurden. Diese musst du nun noch mit den entsprechenden Maßangaben des Verkaufskanals verknüpfen.","notifications":{"title":{"success":"Erfolg","warning":"Warnung","error":"Fehler"},"message":{"success":"Maßeinheiten Mapping wurde erfolgreich gespeichert.","error":"Beim Speichern des Maßeinheiten Mappings ist ein Fehler aufgetreten.","warningTooManySelected":"Es kann nur eine Maßeinheit ausgewählt werden.","warningNoSelection":"Es wurde keine Maßeinheit ausgewählt."}},"noScaleUnit":"Keine Maßeinheit - Zuweisung vorhanden"},"amazonFbaPrime":{"tab-title":"FBA / Prime Einstellungen"},"tabs":{"general":"Allgemein"},"amazon":{"baseTitle":"Amazon Connection Assistant - Account - ","step1":"Schritt 1","step2":"Schritt 2","step3":"Schritt 3","authoriseDescription":"Um deine Produkte bei Amazon zu listen, ist es erforderlich, dass du deinen Shopware Shop mit Amazon verbindest. Bitte gib hier deine Amazon Seller Central Zugangsdaten ein, um dich mit deinem Amazon Konto zu verbinden.","manualConnect":"Zugangsdaten","retailerIdPlaceHolderInput":"Amazon Seller-ID","retailerId":"Amazon Seller-ID","mwsTokenPlaceHolderInput":"Amazon MWS Token...","mwsToken":"Amazon MWS Token","validateMarketplaceDescription":"In diesem Schritt wird geprüft, ob du im ausgewählten Verkaufskanal Produkte verkaufen darfst.","validateMarketplaceTooltip":"Hier wird geprüft, ob dein Konto für den ausgewählten Marktplatz freigegeben ist.","validateMarketplaceBtnTitle":"Prüfung Marktplatz - Zugriffsrecht","validateMarketplaceTitle":"Amazon Connection Assistant - Account - Marktplatz Prüfung","productCheckDescription":"In diesem Schritt wird geprüft, ob es bereits Artikel im gewählten Verkaufskanal gibt.","productCheckTooltip":"Überprüfung auf schon vorhandene Artikel auf Amazon.","productCheckTitle":"Amazon Connection Assistant - Account - Produkt Prüfung","productCheckCongrats":"Gratulation, du kannst jetzt Produkte auf Amazon verkaufen.","productCheckDeleteExistingBtn":"Hier gelangst du in dein Amazon Konto","productCheckDeleteExistingTitle":"Amazon Artikel löschen","productCheckDeleteExistingContent":"Solltest du den kostenpflichtigen Service der Artikelübernahme nicht wünschen, kannst du auch im Vorfeld deine Artikel bei Amazon löschen. Danach kannst du hier die Prüfung erneut starten.","productCheckBookTransfer":"Anfrage Artikelübernahme von Amazon starten","productCheckBookTransferTitle":"Übernahme Amazon Artikel in Shopware 6","productCheckBookTransferContent":"Wenn du deine Artikel von Amazon in deinen Shopware Shop importieren willst, ist dies selbstverständlich möglich. Das ist eine kostenpflichtige Dienstleistung. Die Konditionen dafür, kannst du hier erfragen. Bitte beachte, dass dies ein manueller und individueller Aufwand ist, die Kosten hierfür können je nach Aufwand unterschiedlich sein.","productCheckAccountHasAlreadyProducts":"Der verbundene Amazon Account hat bereits existierende Produkte.","productCheckBtn":"Prüfe auf existierende Produkte","howTo":{"mwsNotificationHowToTitle":"Wo finde ich mein Amazon MWS-Token? Bitte klicke hier!","mwsNotificationHowToUser":"Benutzer: brickfox","mwsNotificationHowToPassword":"Passwort: 6133-1265-3313","mwsNotificationHowToLastPart":"Anschließend erhältst deinen MWS-Auth-Token, welchen du oben im Eingabefeld eingeben kannst.","mwsNotificationHowToFirstPart":"Um deinen Shop mit Amazon zu verbinden, logge dich bitte in deinem {link} ein.","mwsNotificationHowToSecondPart":"Bitte wähle dort den Punkt 2 aus und hinterlege folgende Daten:"},"amazonConfirmFinishModalTitle":"Info","amazonConfirmFinishModalMessageFirstPart":"Du hast deinen Saleschannel erfolgreich eingerichtet und aktiviert","amazonConfirmFinishModalMessageSecondPart":"Nach dem Beenden des Verbindungsassistenten kann die bestehende Verbindung bzw. der Saleschannel nicht einfach angepasst werden. Bist du sicher, dass du den Verbindungsassistent abschließen möchtest?"},"ebay":{"baseTitle":"eBay Connection Assistant - Account - ","step1":"Schritt 1","step2":"Schritt 2","step3":"Schritt 3","step4":"Schritt 4","authoriseDescription":"Um deine Produkte bei eBay zu listen, ist es erforderlich, dass du deinen Shopware Shop mit eBay verbindest.","authoriseOAuthDescription":"Um deine Produkte bei eBay zu listen, ist es erforderlich, dass du einen OAuth-Token erzeugst.","validateMarketplaceDescription":"In diesem Schritt wird geprüft, ob du im ausgewählten Verkaufskanal Produkte verkaufen darfst.","validateMarketplaceTooltip":"Hier wird geprüft, ob dein Konto für den ausgewählten Marktplatz freigegeben ist.","validateMarketplaceTitle":"eBay Connection Assistant - Account - Marktplatz prüfung","validateMarketplaceBtnTitle":"Prüfung Marktplatz - Zugriffsrecht","productCheckDescription":"In diesem Schritt wird geprüft, ob es bereits Artikel im gewählten Verkaufskanal gibt.","productCheckTooltip":"Überprüfung auf schon vorhanden Artikel auf ebay.","productCheckTitle":"eBay Connection Assistant - Account - Product check","productCheckCongrats":"Gratulation, du kannst jetzt Produkte auf eBay verkaufen.","productCheckDeleteExistingBtn":"Hier gelangst du in dein eBay Konto","productCheckDeleteExistingTitle":"eBay Artikel  löschen","productCheckDeleteExistingContent":"Solltest du den kostenpflichtigen Service der Artikelübernahme nicht wünschen, kannst du auch im Vorfeld deine Artikel bei eBay löschen. Danach kannst du hier die Prüfung erneut starten.","productCheckBookTransfer":"Anfrage Artikelübernahme von eBay starten","productCheckBookTransferTitle":"Übernahme eBay Artikel in Shopware 6","productCheckBookTransferContent":"Wenn du deine Artikel von eBay in deinen Shopware Shop importieren willst, ist dies selbstverständlich möglich. Das ist eine kostenpflichtige Dienstleistung. Die Konditionen kannst du hier erfragen. Bitte beachte,  dass dies ein manueller und individueller Aufwand ist, die Kosten hierfür können je nach Aufwand unterschiedlich sein.","productCheckAccountHasAlreadyProducts":"Der verbundene eBay Account hat bereits existierende Produkte.","productCheckBtn":"Prüfen auf existierende Produkte","amazonConfirmFinishModalTitle":"Info","amazonConfirmFinishModalMessageFirstPart":"Du hast deinen Saleschannel erfolgreich eingerichtet und aktiviert","amazonConfirmFinishModalMessageSecondPart":"Nach dem Beenden des Verbindungsassistenten kann die bestehende Verbindung bzw. der Saleschannel nicht einfach angepasst werden. Bist du sicher, dass du den Verbindungsassistent abschließen möchtest?","infoAuthorization":"Sobald du dich erfolgreich authorisiert hast, wirst du automatisch weitergeleitet.","paymentMethodError":"Es wurde keine eBay-Zahlart gewählt."},"button":{"connect":"Verbinden","cancel":"Abbrechen","next":"Weiter","finish":"Abschließen"},"error":{"notification":{"title":"Fehler"},"global":{"internalError":"Es scheint ein Problem in der Kommunikation zu geben. Bitte versuche es später noch einmal.","bfBpUnauthorized":"Die Verbindung zwischen deinem Shop und dem Marktplatz ist unterbrochen. Bitte kontaktiere den Shopware Support","systemSettingUp":"Das System für die Marktplatz-Aussteuerung befindet sich aktuell im Setup, dieser Vorgang kann einige Minuten dauern."},"amazon":{"title":"Amazon Connection Assistant","credentialValidationError":"Amazon Seller-ID und Amazon MWS Token sind Pflichtfelder. Bitte prüfe deine Eingaben.","accountConnectionError":"Du konnstest nicht erfolgreich mit Amazon verbunden werden. Bitte prüfe deine Eingaben.","validateMarketplaceError":"Du kannst mit deinem Konto nicht auf dem ausgewählten Amazon - Markplatz verkaufen.","confirmFinishSavingDataError":"Beim Speichern der Informationen ist ein Fehler aufgetreten. Bitte versuche es nochmal."},"ebay":{"title":"eBay Connection Assistant","accountConnectionError":"Something went wrong while trying to connect to your eBay account.","validateMarketplaceError":"Du kannst mit deinem Konto nicht auf dem ausgewählten Ebay - Markplatz verkaufen.","cantGetConnectionLink":"Es ist ein Fehler aufgetreten, bitte versuche es später noch einmal.","productCheck":"Bei der Produktprüfung ist ein Fehler aufgetreten. Bitte versuche es später noch einmal.","ebayInvalidLogoUrl":"Deine Logo-Url konnte nicht gespeichert werden. Dein Logo muss unter https:// erreichbar sein.","ebayInvalidPayPalMailAddress":"Deine PayPal Email-Adresse konnte nicht gespeichert werden. Es scheint, dass deine Email-Adresse nicht valide ist."}},"success":{"amazon":{"title":"Amazon Connection Assistant","accountConnectionSuccess":"Du hast dich erfolgreich mit Amazon verbunden.","validateMarketplaceSuccess":"Überprüfung des Amazon - Marktplatz war erfolgreich.","successfulFinishedConnectionAssistant":"Deine Daten wurden erfolgreich gespeichert. Viel Spaß mit Amazon."},"ebay":{"title":"eBay Connection Assistant","accountConnectionSuccess":"You are successfully connected to ebay.","validateMarketplaceSuccess":"Überprüfung des eBay - Marktplatz war erfolgreich."}},"bf-plugin-configuration":{"integration":{"repair-description":"Sollte der Integrationsbenutzer für SwagMarkets gelöscht worden sein oder andere Kommunikationsprobleme auftreten, kann dieser Prozess den Zugriff wiederherstellen","repair-integration-button":"Integration reparieren","dialogue":{"successTitle":"Reparatur erfolgreich","successMessage":"Der Integrationsbenutzer für SwagMarkets wurde erfolgreich repariert!","errorTitle":"Reparatur fehlgeschlagen","errorMessage":"Bei der Reparatur ist ein Fehler aufgetreten!"}}}}')},p1TD:function(e,t){e.exports='{% block bf_segment_category_tree_item %}\n    <div class="sw-tree-item bf-tree-item" :class="styling">\n        {% block bf_segment_category_tree_item_element %}\n            <div class="sw-tree-item__element bf-tree-item__element">\n                {% block bf_segment_category_tree_item_leaf_icon %}\n                    <div class="sw-tree-item__leaf" v-if="item.childCount <= 0"></div>\n                {% endblock %}\n\n                {% block bf_segment_category_tree_item_element_toggle %}\n                    <div class="sw-tree-item__toggle" @click="openTreeItem(); getTreeItemChildren(item)" v-else>\n                        {% block bf_segment_category_tree_item_element_toggle_loader %}\n                            <sw-loader v-if="isLoading" size="14"></sw-loader>\n                        {% endblock %}\n\n                        {% block bf_segment_category_tree_item_element_toggle_icon %}\n                            <sw-icon :name="opened ? \'small-arrow-small-down\' : \'small-arrow-small-right\'" size="18"\n                                     v-else></sw-icon>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n\n                {% block bf_segment_category_tree_item_element_grip %}\n                    <div v-if="item.childCount > 0" class="sw-tree-item__icon">\n                        <sw-icon name="multicolor-folder-tree-open" multicolor small v-if="opened"></sw-icon>\n                        <sw-icon name="multicolor-folder-tree" multicolor small v-else></sw-icon>\n                    </div>\n                    <div v-else class="sw-tree-item__icon">\n                        <sw-icon name="small-default-circle-small" size="18"></sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block bf_segment_category_tree_item_element_selection %}\n                    <div class="sw-tree-item__selection">\n                        <sw-field type="radio"\n                                  name="segmentCategory"\n                                  checked="currentSelected == item.id ? \'checked\' : false"\n                                  :options="[{value: item.id, name: item.data.translated.name}]"\n                                  @change="onChangeItem"\n                        ></sw-field>\n                    </div>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n        {% block bf_segment_category_tree_item_children_transition %}\n            <transition name="fade">\n                {% block bf_segment_category_tree_item_children_content %}\n                    <div class="sw-tree-item__children" v-if="isOpened && item.children.length > 0">\n                        <bf-segment-category-tree-item\n                            v-for="child in item.children"\n                            :key="child.id"\n                            :item="child"\n                            @on-change="emitCheckedItem"\n                        ></bf-segment-category-tree-item>\n                    </div>\n                {% endblock %}\n            </transition>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},pS6h:function(e,t,n){},pXlS:function(e,t,n){var a=n("Ol78");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("1d657295",a,!0,{})},prGt:function(e,t){e.exports='{% block bf_sales_channel_shopware_segment_category_tree %}\n    <div class="bf-sales-channel-shopware-category-tree">\n        {% block bf_sales_channel_shopware_segment_category_tree_content %}\n            <div class="bf-sales-channel-shopware-category-tree__content">\n                {% block bf_sales_channel_shopware_segment_category_tree_content_tree %}\n                    <div class="bf-sales-channel-shopware-category-tree__content-tree">\n                        <div class="bf-tree">\n                            <bf-segment-category-tree\n                                    :title="$tc(\'categories.shopware-tree-title\')"\n                                    :items="categories"\n                                    @get-tree-items="onGetTreeItems"\n                                    @on-change="onChangeCategory"\n                                    @search-tree-items="searchTreeItems"\n                            >\n                                <template #items="{treeItems, onChangeItem}">\n                                    <bf-segment-category-tree-item\n                                        v-for="item in treeItems"\n                                        :key="item.id"\n                                        :item="item"\n                                        @on-change="onChangeCategory"\n                                    ></bf-segment-category-tree-item>\n                                </template>\n                            </bf-segment-category-tree>\n                        </div>\n                    </div>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},qQWA:function(e,t){e.exports='{% block swag_markets_amazon_asin_management %}\n    <sw-modal\n        @modal-close="$emit(\'modal-close\')"\n        title="ASIN management"\n        :variant="\'large\'"\n        class="bf-modal">\n        <sw-data-grid style="min-height: 300px;"\n            :dataSource="dataSource"\n            :columns="getColumns"\n            :allowInlineEdit="true"\n            itemIdentifierProperty="shopsProductsVariationsId"\n            :showSelection="false"\n            @inline-edit-save="inlineEditSave">\n            <template #column-asin="{ item, column, isInlineEdit, compact }">\n                <sw-text-field\n                    v-if="isInlineEdit"\n                    :placeholder="$tc(\'products.table-headers.asin\')"\n                    v-model="item.asin"\n                    size="small">\n                </sw-text-field>\n                <template v-else>\n                    {{ item.asin }}\n                </template>\n            </template>\n        </sw-data-grid>\n        {% block swag_markets_asin_matching_pagination %}\n            <sw-pagination :total="total" :limit="limit" :page="page" :steps="[5]" @page-change="paginate"></sw-pagination>\n        {% endblock %}\n        <template slot="modal-footer">\n            {% block bf_sales_channel_product_detail__footer_cancel %}\n                <sw-button\n                    @click="$emit(\'modal-close\')"\n                    size="small">\n                    {{ $tc(\'products.edit.cancel\') }}\n                </sw-button>\n            {% endblock %}\n        </template>\n    </sw-modal>\n{% endblock %}\n'},qpff:function(e,t,n){var a=n("Wj7U");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("59ca5a6e",a,!0,{})},sOAc:function(e,t,n){var a=n("EQ2f");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("69b5e456",a,!0,{})},saVA:function(e,t,n){},tFz5:function(e,t,n){var a=n("Xwqh");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("3df9752f",a,!0,{})},tMpb:function(e,t,n){},tgxC:function(e,t,n){var a=n("jJQH");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("450cbd50",a,!0,{})},trjv:function(e,t,n){},usVR:function(e,t){e.exports='{% block sw_filter_panel %}\n    <div class="sw-filter-panel bf-filter-panel">\n        {% block sw_filter_panel_item %}\n            <sw-container columns="1fr 1fr" gap="0 25px">\n                <div class="sw-filter-panel__item bf-filter-panel__item" v-for="filter in listFilters" :key="filter.name" :id="filter.name">\n                    <div v-if="false"></div>\n\n                    {% block sw_filter_panel_extension_point %}{% endblock %}\n\n                    <sw-boolean-filter\n                        v-else-if="showFilter(filter, \'boolean-filter\')"\n                        :filter="filter"\n                        :active="!!activeFilters[filter.name]"\n                        @filter-update="updateFilter"\n                        @filter-reset="resetFilter">\n                    </sw-boolean-filter>\n\n                    <sw-existence-filter\n                        v-else-if="showFilter(filter, \'existence-filter\')"\n                        :filter="filter"\n                        :active="!!activeFilters[filter.name]"\n                        @filter-update="updateFilter"\n                        @filter-reset="resetFilter">\n                    </sw-existence-filter>\n\n                    <sw-multi-select-filter\n                        v-else-if="showFilter(filter, \'multi-select-filter\')"\n                        :filter="filter"\n                        :active="!!activeFilters[filter.name]"\n                        @filter-update="updateFilter"\n                        @filter-reset="resetFilter">\n                        {% block sw_multi_select_filter_content_variant_label %}\n                            <template v-if="filter.displayVariants" #selection-label-property="{ item, index }">\n                                <sw-product-variant-info :variations="item.variation">\n                                    {{ item.translated.name || item.name }}\n                                </sw-product-variant-info>\n                            </template>\n                        {% endblock %}\n\n                        {% block sw_multi_select_filter_content_path_label %}\n                            <template v-else-if="filter.displayPath" #selection-label-property="{ item, index }">\n                                <sw-highlight-text\n                                    v-tooltip="{\n                                            message: getBreadcrumb(item),\n                                            width: 300\n                                        }"\n                                    selected=""\n                                    :key="item.id"\n                                    :text="getLabelName(item)">\n                                </sw-highlight-text>\n                            </template>\n                        {% endblock %}\n\n                        {% block sw_multi_select_filter_content_variant_result_item %}\n                            <template v-if="filter.displayVariants" #result-item="{ item, index }">\n                                <li is="sw-select-result" v-bind="{ item, index }">\n                                    {% block sw_multi_select_filter_content_variant_result_label %}\n                                        <span class="sw-select-result__result-item-text">\n                                            <sw-product-variant-info :variations="item.variation">\n                                                {{ item.translated.name || item.name }}\n                                            </sw-product-variant-info>\n                                        </span>\n                                    {% endblock %}\n                                </li>\n                            </template>\n                        {% endblock %}\n\n                        {% block sw_multi_select_filter_content_path_result_item %}\n                            <template v-else-if="filter.displayPath" #result-item="{ item, index }">\n                                <li is="sw-select-result" v-bind="{ item, index }">\n                                    {% block sw_multi_select_filter_content_path_result_label %}\n                                        <span class="sw-select-result__result-item-text">\n                                            <sw-highlight-text\n                                                v-tooltip="{\n                                                    message: getBreadcrumb(item),\n                                                    width: 300\n                                                }"\n                                                selected=""\n                                                :key="item.id"\n                                                :text="getLabelName(item)">\n                                            </sw-highlight-text>\n                                        </span>\n                                    {% endblock %}\n                                </li>\n                            </template>\n                        {% endblock %}\n                    </sw-multi-select-filter>\n\n                    <sw-date-filter\n                        v-else-if="showFilter(filter, \'date-filter\')"\n                        :filter="filter"\n                        :active="!!activeFilters[filter.name]"\n                        :config="filter.config"\n                        @filter-update="updateFilter"\n                        @filter-reset="resetFilter">\n                    </sw-date-filter>\n\n                    <sw-string-filter\n                        v-else-if="showFilter(filter, \'string-filter\')"\n                        :filter="filter"\n                        :active="!!activeFilters[filter.name]"\n                        @filter-update="updateFilter"\n                        @filter-reset="resetFilter">\n                    </sw-string-filter>\n\n                    <sw-number-filter\n                        v-else-if="showFilter(filter, \'number-filter\')"\n                        :filter="filter"\n                        :active="!!activeFilters[filter.name]"\n                        :step="filter.step"\n                        :digits="filter.digits"\n                        :numberType="filter.numberType"\n                        :min="filter.min"\n                        :max="filter.max"\n                        allowEmpty\n                        @filter-update="updateFilter"\n                        @filter-reset="resetFilter">\n                    </sw-number-filter>\n                </div>\n            </sw-container>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},v1EL:function(e,t){e.exports='{% block bf_sales_channel_product_detail %}\n    <sw-modal\n        class="bf-modal"\n        :title="title"\n        @modal-close="$emit(\'modal-close\')">\n        {% block bf_sales_channel_product_detail__content %}\n            {% block bf_sales_channel_product_detail__content_base %}\n                <sw-data-grid\n                    ref="unitGrid"\n                    :dataSource="unitData"\n                    :columns="columns"\n                    :showActions="false"\n                    :fullPage="false"\n                    :compect="true"\n                >\n                </sw-data-grid>\n            {% endblock %}\n        {% endblock %}\n        {% block bf_sales_channel_product_detail__footer %}\n            <template slot="modal-footer">\n                {% block bf_sales_channel_product_detail__footer_cancel %}\n                    <sw-button\n                        @click="$emit(\'modal-close\')"\n                        size="small">\n                        Cancel\n                    </sw-button>\n                {% endblock %}\n                {% block bf_sales_channel_product_detail__footer_save %}\n                    <sw-button\n                        @click="saveData"\n                        variant="primary"\n                        size="small">\n                        Save\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n'},v5FY:function(e,t,n){},vG7C:function(e,t,n){var a=n("dtJ4");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("c7e25df0",a,!0,{})},vjzL:function(e,t){e.exports='{% block bf_sales_channel_detail_category_segment_content %}\n    <div v-if="marketplaceName === \'amazon\'">\n        <sw-card\n            :isLoading="isSegmentLoading"\n            class="swag_markets_card_mapping__content"\n            :title="$tc(\'bf-category-segment-mapping.title\')"\n            :showHelpTextIcon="true"\n            :helpTextDescription="$tc(\'bf-category-segment-mapping.description\')"\n            :helpTextWidth="500">\n            {% block bf_sales_channel_detail_category_segment_content_container %}\n                <sw-container columns="1fr 1fr" gap="20px">\n                    <sw-card-section>\n                        {% block bf_sales_channel_detail_category_segment_content_shopware_category_tree %}\n                            <bf-sales-channel-shopware-segment-category-tree @onSelectCategory="onSelectCategory"/>\n                        {% endblock %}\n                    </sw-card-section>\n\n                    <sw-card-section>\n                        {% block bf_sales_channel_detail_category_segment_content_dropdown %}\n                            <div class="bf-sales-channel-shopware-category-tree">\n                                <div class="bf-sales-channel-shopware-category-tree__content">\n                                    <div class="bf-sales-channel-shopware-category-tree__content-tree">\n                                        <div class="bf-tree" v-if="activeCategoryId">\n                                            {% block bf_sales_channel_detail_category_segment_content_dropdown_fields %}\n                                                <sw-container class="sw-tree">\n                                                    {% block bf_sales_channel_shopware_segment_dropdown_headline %}\n                                                        <div class="sw-tree-actions__headline">\n                                                            {{ $tc(\'bf-category-segment-mapping.title\') }}\n                                                        </div>\n                                                    {% endblock %}\n\n                                                    <bf-sales-channel-amazon-segment-dropdown\n                                                        ref="segmentDropdown"\n                                                        :clientExists="clientExists"\n                                                        :clientInProgress="clientInProgress"\n                                                        :currentContractName="currentContractName"\n                                                        @onSetCurrentSegment="setCurrentCategorySegment"\n                                                        @onStartLoading="isSegmentLoading = true"\n                                                        @onStopLoading="isSegmentLoading = false"\n                                                    />\n                                                </sw-container>\n                                            {% endblock %}\n                                        </div>\n\n                                        <div v-else>\n                                            <sw-alert variant="info" appearance="notification" :closable="false">\n                                                {{ $tc(\'bf-category-segment-mapping.information\') }}\n                                            </sw-alert>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        {% endblock %}\n                    </sw-card-section>\n                </sw-container>\n            {% endblock %}\n        </sw-card>\n    </div>\n{% endblock %}\n'},vnn1:function(e,t,n){},vq5r:function(e,t,n){},"vs/M":function(e,t){e.exports='{% block bf_segment_category_tree %}\n    <div class="sw-tree">\n        {% block bf_segment_category_tree_search %}\n            <slot name="search">\n                <div class="sw-tree__search bf-tree-search">\n                    <sw-field\n                        name="segmentCategoryTreeSearch"\n                        :placeholder="$tc(\'sw-tree.general.placeholderSearch\')"\n                        v-model="currentTreeSearch"\n                        @input="searchItems"\n                        size="small">\n                        <template #prefix>\n                            <sw-icon name="default-action-search"></sw-icon>\n                        </template>\n                    </sw-field>\n                </div>\n            </slot>\n        {% endblock %}\n\n        {% block bf_segment_category_tree_actions_headline %}\n            <slot name="headline">\n                <div class="sw-tree-actions__headline">\n                    {{ title }}\n                </div>\n            </slot>\n        {% endblock %}\n\n        {% block bf_segment_category_tree_content %}\n            <div class="sw-tree__content">\n                <div class="tree-items">\n                    {% block bf_segment_category_tree_items %}\n                        <div class="sw-tree__content-no-items" v-if="hasNoItems">\n                            <p>No categories to show</p>\n                        </div>\n                        <slot v-else\n                              name="items"\n                              :treeItems="treeItems"\n                              :onChangeItem="onChange">\n                            <bf-segment-category-tree-item\n                                    v-for="item in treeItems"\n                                    :key="item.id"\n                                    :item="item">\n                            </bf-segment-category-tree-item>\n                        </slot>\n                    {% endblock %}\n\n                    {% block bf_segment_category_tree_loader %}\n                        <sw-loader v-if="isLoading"></sw-loader>\n                    {% endblock %}\n                </div>\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},wCu0:function(e,t){e.exports='{% block bf_sales_channel_property_mapping %}\n    <sw-modal\n        :isLoading="isLoading"\n        variant="large"\n        :title="title"\n        @modal-close="$emit(\'modal-close\')">\n        {% block bf_sales_channel_property_mapping__content %}\n            {% block bf_sales_channel_property_mapping__content_base %}\n                <sw-text-field\n                    type="text"\n                    :label="$tc(\'propertyMapping.labels.search\')"\n                    :placeholder="$tc(\'propertyMapping.placeholder.search\')"\n                    v-model="searchString"\n                    :name="property.productsAttributesId + \'-search\'"\n                    @keyup.enter="loadAttributeData"\n                >\n                </sw-text-field>\n                <bf-sales-channel-property-mapping-grid\n                    :dataSource="attributeData"\n                    :columns="columns"\n                    :isLoading="isLoading"\n                    :showActions="false"\n                    ref="attributeGrid"\n                    @colum-sort="sortList"\n                >\n                </bf-sales-channel-property-mapping-grid>\n            {% endblock %}\n        {% endblock %}\n        {% block bf_sales_channel_property_mapping__footer %}\n            <template slot="modal-footer">\n                {% block bf_sales_channel_property_mapping__footer_cancel %}\n                    <sw-button\n                        @click="$emit(\'modal-close\')"\n                        size="small">\n                        {{ $tc(\'propertyMapping.buttons.cancel\') }}\n                    </sw-button>\n                {% endblock %}\n                {% block bf_sales_channel_property_mapping__footer_save %}\n                    <sw-button\n                        @click="saveData"\n                        variant="primary"\n                        size="small">\n                        {{ $tc(\'propertyMapping.buttons.save\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n'},wWeY:function(e,t){e.exports='{% block bf_ebay_connection_assistant_account %}\n    <div class="bf-ebay-connection-assistant-account">\n        {% block bf_ebay_connection_assistant_account %}\n{#            <bf-ebay-connection-assistant-account-status/>#}\n        {% endblock %}\n\n        {% block bf_ebay_connection_assistant_account_content %}\n            <div class="bf-ebay-connection-assistant-account__content">\n                <router-view v-on="$listeners" :nextBtnIsClicked="nextBtnIsClicked"></router-view>\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},wbFH:function(e){e.exports=JSON.parse('{"global":{"error-codes":{"bd79c0ab-ddba-46cc-a703-a7a4b08de310":"This email is invalid","d94b19cc-114f-4f44-9cc4-4138e80a87b9":"Max length must be 20 characters","9ff3fdc4-b214-49db-8718-39c315e33d45":"Min length must be 8 characters","de1e3db3-5ed4-4941-aae4-59f3667cc3a3":"Phone number is not valid"},"titleSaveError":"Error","clientNotReady":"The client is not ready","notAuthorised":"User is not authorised","yes":"Yes","no":"No","globalConfigInfo":"Please notice, these Settings are for all Marketplace Saleschannels!","login":"Login"},"bf-ebay-best-offer":{"notification":{"error":{"title":"Ebay Price Proposal Error","absoluteAutoAcceptMessage":"Automatically accept from absolute discount value must not be less than Maximum Absolute Discount","relativeAutoAcceptMessage":"Automatically accept from relative discount value must not be less than Maximum Relative Discount"}}},"bf-sales-channel":{"create":{"labelMarketplace":"Marketplace","labelCountry":"Country","labelCurrency":"Currency","labelLanguage":"Language"},"detail":{"labelInputActive":"active","labelInputNotActive":"not active","labelInputProcessingTime":"Processing time","labelActiveSince":"Active since","labelNextBilling":"Next billing","contractLabel":"Contract details","contractButton":"Change contract","withoutContractTitle":"Without contract","contractContentDescription":"Description","contractContentPrice":"Price","labelProcessingTime":"Standard processing time","notAuthorisedText":"To see which subscription you have booked, please log into the Shopware account ","delete":"Removing this sales channel will be permanent. All settings will be lost. All products will be removed from the marketplace and can not be reactivated.","titleGeneralEbayPolicies":"Policies","ebayShippingPolicyLabel":"Shipping","ebayPaymentPolicyLabel":"Payment","ebayReturnPolicyLabel":"Return","ebayPoliciesInfo":"Please follow the link to activate the ebay policies: ","ebayPoliciesLinkName":"ebay policies","ebayPoliciesSystemInfo":"To configure the ebay policies you have to connect to your ebay account.","ebayErrorLoadingPolicies":"Error while loading ebay policies. Please check ebay account connection.","ebayExpireTokenTitle":"ebay - Token","ebayExpireTokenOAuthTitle":"The OAuth-Token is valid until:","ebayExpireTokenAuthTitle":"The Auth-Token is valid until:","ebayExpireTokenOAuthNotAvailable":"Not available","ebayExpireTokenAuthNotAvailable":"Not available","ebayExtendTokenOAuthBtn":"Renew OAuth-Token","ebayExtendTokenAuthBtn":"Renew Auth-Token","ebayTokenSystemInfo":"To generate new tokens you have to connect to your ebay account.","ebayErrorLoadingTokens":"Error while loading the ebay tokens. Please check the ebay account connection.","infoActivateDeactivateSalesChannel":"Please notice: All Stock an price information will not be send any more if you are deactivate this saleschannel.","ebayAccountCardTitle":"ebay - Account","ebayAccountInfo":"To configure the ebay account information you have to connect to your ebay account.","ebayPaymentMethods":"ebay - payment methods","ebayBestOffers":"ebay - Best offers","ebayBestOfferAbsolute":"Maximum absolute discount","ebayBestOfferAbsoluteHelpText":"If the discount on the price proposal is higher than the specified value, it will be automatically rejected","ebayBestOfferAbsoluteAutoAccept":"Automatically accept from absolute discount","ebayBestOfferAbsoluteAutoAcceptHelpText":"If the discount on the price proposal is lower than the specified value, it will be accepted automatically","ebayBestOfferActive":"Best offer active","ebayBestOfferActiveHelpText":"The price proposal is only possible in some categories and cannot be used with variants","ebayBestOfferAutoAccept":"Accept automatically","ebayBestOfferAutoAcceptHelpText":"If the discount of the price proposal is lower than the maximum discount, it will be accepted automatically","ebayBestOfferRelative":"Maximum relative discount","ebayBestOfferRelativeHelpText":"If the discount on the price proposal is higher than the specified value, it will be automatically rejected","ebayBestOfferRelativeAutoAccept":"Automatically accept from relative discount","ebayBestOfferRelativeAutoAcceptHelpText":"If the discount on the price proposal is lower than the specified value, it will be accepted automatically","ebayBestOfferFix":"Turn off price suggestions automatically","ebayBestOfferFixHelpText":"Automatically switch off price suggestions if someone has already bid on them. The auction will be ended and then restarted","ebayPaymentMethodPayPal":"ebay - PayPal: ","ebayPaymentMethodMoneyXferAcceptedInCheckout":"ebay - Pay in advance: ","ebayPaymentMethodCashOnPickup":"ebay - Cash on pickup: ","ebayPaymentMethodCod":"ebay - Cash on delivery: ","ebayPaymentMethodEbayPayments":"ebay -Payments: ","ebayPaymentSelectName":"Select...","showPaymentChangedNotificationMsg":"The payment methods where changed, please save these changes first.","noPaymentMethodsSelected":"To activate the saleschannel you have to match min. one payment method.","noPoliciesSelected":"To activate the saleschannel you have to select all ebay policies.","amazonFbaPrimeShippingMethodsTitle":"FBA / Prime shipping methods","amazonFbaPrimeFbaLabel":"FBA","amazonFbaPrimeFbaHelpText":"If you want to use another shipping method for FBA.","amazonFbaPrimePrimeHelpText":"If you want to use another shipping method for Prime.","amazonFbaPrimePrimeNextDayHelpText":"If you want to use another shipping method for Prime next day.","amazonFbaPrimePrimeSecondDayHelpText":"If you want to use another shipping method for Prime second day.","amazonFbaPrimePrimeLabel":"Prime","amazonFbaPrimePrimeNextDayLabel":"Prime next day","amazonFbaPrimePrimeSecondDayLabel":"Prime second day","amazonDangerousGoodsLabel":"Value for dangerous goods","amazonNeedsBatteryLabel":"Batteries are needed?","amazonFbaRequiredInfo":"Amazon need the following information for FBA products.","netPriceSwitchLabel":"Sell products with net prices","amazonPaymentMethodInfoText":"The saleschannel is linked to the corresponding payment method \\"Shopware Markets - Amazon\\". All incoming orders will be mapped to this payment method. It must therefore must not be deleted, otherwise orders cannot be transferred to Shopware!","prices":"Prices"},"contractModal":{"title":"Contract details","text":"If you want to change your contract, then choose some other option and click save button.","chooseButton":"Choose","currentContractText":"Current contract","month":"Month","buttonRemove":"Cancel contract","buttonChooseContract":"Select","perChannel":"Products per sales channel","includedText":"Sells are included*","extraPriceText":"* for each extra sell","bfSpecialProposal":"* After checking by brickfox GmbH you will receive a separate offer","permissionsModalTitle":"Shopware Markets permissions","permissionsClose":"Close","permissionsSharedData":{"contentText":"Shopware Markets will share some of he following data with our sub-processor","contentTextEnd":"","headLine":"Shared customer data","name":"Customer names","email":"Customer email addresses","phone":"Customer phone numbers","birthdate":"Customer date of birth","address":"Customer shipping and billing addresses"},"subProcessorTitle":"Subprocessor of Shopware","table":{"withoutLimitText":"Without limit","feeLabel":"Transaction fee","feeHelpText":"Costs per extra Sell","transactionsLabel":"Transaction incl.","transactionsHelpText":"Sells without additional costs","limitsLabel":"SKU-Limit / Channel","limitsHelpText":"Maximum of Articles in the Saleschannels","singleProductListLabel":"List single product","singleProductListHelpText":"Listing an Article to on a Saleschannel.","assigningLabel":"Assigning articles to a category","assignHelpText":"Possibility to assign a Shopware category / subcategory to a marketplace category at once. All items associated with the shop category are thus assigned to the marketplace category.","generalSettingsLabel":"General Settings","generalSettingsHelpText":"General settings are made in this area, e.g. Shipping and payment methods.","createNewArticleLabel":"Creation new Article","createNewArticleHelpText":"An article that is not yet listed on amazon or eBay is automatically created as a new marketplace offer.","bulletPointsLabel":"Bullet points","bulletPointsHelpText":"Attributes can be assigned and transferred directly to the marketplace fields as bullet points.","amazonKeywordsLabel":"Amazon Keywords","amazonKeywordsHelpText":"Search terms can be assigned and transferred directly to the marketplace fields.","offerExistingItemsLabel":"Offer existing items","offerExistingItemsHelpText":"An article from the range for which there is already an offer on the marketplace is automatically assigned to this offer.","channelErrorListLabel":"Access to channel error lists","channelErrorListHelpText":"Articles that have errors are marked accordingly and the error list can be called up. Logging into the Seller Central / My eBay is not necessary.","deeplinkPossibilityLabel":"Deeplink to marketplace articles","deeplinkPossibilityHelpText":"The listed marketplace article can be called up directly via a link displayed in the Sales Channel and viewed in a separate browser window.","amazonFbaLabel":"Amazon FBA","amazonFbaHelpText":"In the Sales Channel is possible to mark articles for which there is an inventory directly in an amazon warehouse. If this marking is set, the available inventory is not transferred from Shopware to amazon and amazon uses its own inventory. All other item information will continue to be updated (e.g. price changes).","ebayPlusLabel":"Ebay Plus","ebayPlusHelpText":"In the sales channel eBay you can make special settings for eBay Plus, the premium shipping free of charge for eBay customers, e.g. Mark items for eBay Plus and create a special shipping method for them.","amazonPrimeLabel":"Amazon Prime","amazonPrimeHelpText":"SW-Markets can participate in the amazon program \\"Prime for retailers\\" and thus use the Prime logo on amazon for its own shipping. Among other things, set up a special shipping method to identify Prime for merchant orders. The ERP system used must also support \\"Prime for dealers\\".","customEbayTemplateLabel":"Custom ebay Template","customEbayTemplateHelpText":"There is a template provided by shopware, which can be used to display the products on eBay.","ebaySuggestedPriceLabel":"eBay suggested price","ebaySuggestedPriceHelpText":"You can set rules for eBay’s suggested pricing feature. This enables eBay to automatically respond to price suggestions without the trader having to decide in individual cases.","optionsTransferLabel":"Option account transfer *","optionsTransferHelpText":"Shopware connects to the existing marketplace account. If the marketplace account is already filled, a question is asked as to whether existing offers should be taken over.","contractTermsAndConditionsBegin":"I accept the ","contractTermsAndConditionsLink":"https://www.shopware.com/en/gtc/","contractTermsAndConditionsEnd":"terms and conditions ","contractSubProcessorBegin":"I am aware that this app needs further ","contractSubProcessorLink1":"permissions ","contractSubProcessorMiddle":"and accept ","contractSubProcessorLink2":"brickfox GmbH ","contractSubProcessorEnd":"as new sub-processor of Shopware"},"notification":{"title":"Contract","canceledMessage":"Contract was canceled successful","changedMessage":"New contract signed","errorTitle":"Error","errorSkuLimitAchieved":"Your limit in {limit} on the number of assigned products on {name} channels has been reached.","errorTooMuchProductsAssigned":"The license {contractName} cannot be terminated because there are still active products assigned."}},"contractAgbModal":{"text":"Through the campaign you acquire the chargeable Sales Channel Plugin","agreementWithPaymentLabel":"I confirm the purchase of the license with costs \\"{name}\\" for {price} EUR monthly","agreementWithAgbLabel":"I agree to the terms","agreementWithAgbText":"Please note our"},"contractCancelModal":{"title":"Cancel license","text":"The \\"{name}\\" license will be terminated immediately. Support is no longer available.","agreementWithCancelingLabel":"I confirm that the license will be terminated immediately"}},"bf-support":{"modal":{"titleSupport":"Support request","titleTransferProducts":"Request for Article transfer","nameFieldLabel":"First- / Lastname","labelMessage":"Your Message","messagePlaceholder":"Write here your message","agreementWithSendToBrickfox":"I Agree to the transfer of my data to brickfox GmbH, Silberburgstrasse 148, 70176 Stuttgart for the request of the article transfer service. The request itself is free of charge.","buttonSendRequest":"Send Request"},"notification":{"success":{"title":"Success","message":"Your request was successful sent"},"error":{"title":"Error","message":"You have some errors"}}},"bf-property-transfer":{"tab":{"label":"Property transfer","text":"Before you are able to connect Shopware Proberties with the Marketplace Attributes, please select the Properties you would like to use in this Marketplace. After this you are able to map all Properties you have selected.","warningText":"Please notice, these Settings are for all Marketplace Saleschannels!"},"list":{"columnName":"Property name","columnTransfer":"Transfer"},"notification":{"title":"Property transferring","messageSuccess":"Property was transferred successful.","messageError":"Property was not transferred. Please contact with administration."}},"bf-custom-fields-transfer":{"tab":{"label":"Custom Fields transfer","text":"Before you are able to connect Shopware Custom fields with the Marketplace Attributes, please select the Custom fields you would like to use in this Marketplace. After this you are able to map all Custom fields you have selected."},"list":{"columnName":"Custom field technical name","columnTransfer":"Transfer"},"notification":{"title":"Custom Fields transfering","messageSuccess":"Custom fields was transferred successful.","messageError":"Custom fields was not transferred. Please contact with administration."}},"bf-category-segment-mapping":{"title":"Segment mapping","description":"Here you are able to connect your shopware categories with Amazon Product Segment and Producttype. On the left side are the Shopware Categories. With choosing one category all articles here will be selected.\\nOn the right side you can select one Product Segment and one Producttype. When you click save both trees will be connected.","information":"Choose some category for assigning Amazon segment and product type","notification":{"title":"Category to Amazon segment mapping","messageSuccess":"Your category mapped successful","messageError":"Error happened"},"deleteCategoryMapping":"Remove category mapping","amazonProductSegmentLabel":"Product segment","amazonProductTypeLabel":"Product type","savedCategoryMapping":"Saved category mapping successful.","savedCategoryMappingTitle":"Category mapping","deleteModalWarning":"Warning","deleteModalWarningMsg":"Are you sure to delete this categories assignment?","deleteModalCancelBtn":"Cancel","deleteModalDeleteBtn":"Delete","categoriesMappingEmptyState":"No categories mapping yet","categoriesMappingDescription":"Here you are able to connect your shopware categories with your marketplace categories. All products from the selected shopware categories will be assigned to the selected marketplace categories.","categoriesMappingTitle":"Categories mapping"},"attributesMapping":{"amazonColumnName":"Amazon attributes name","ebayColumnName":"Ebay attributes name","assigned":"Assigned","removeWarningMsg":"Are you sure to remove this assignment?","properties":{"emptyStateText":"No properties given yet","columnName":"Shopware properties"},"custom-fields":{"emptyStateText":"No custom fields given yet","columnName":"Shopware custom fields"},"removeAssignment":"remove assignment","selectAttribute":"select attribute","mandatory":"Mandatory"},"products":{"title":"Assigned Products","tab-title":"Products","table-headers":{"product-name":"Name","product-number":"Product number","status":"Active","online-status":"Marketplace online status","category-name":"Category","error":"Error","asin":"ASIN","asinManagement":"ASIN management"},"no-license":"No License","showErrorsButton":"Display errors","notTransferredProduct":"The Product was not transferred to the Brickfox business platform.","notTransferredProductToMarketplace":"The Product is not transferred to the marketplace.","failedShopsFilter":"The product failed to pass a channel filter: ","modalErrors":{"title":"Errors","text":"Here you can see errors related to your product from marketplace."},"action":{"openMarketplaceProduct":"Open marketplace product"},"edit":{"noInformation":"No information","invalidContractInfo":"To use the extended settings, you need to upgrade your contract.","basisBFeatures":"Extended Settings","cancel":"Cancel","save":"Save","general":"General Settings","label":{"ebayPlus":"Activate ebayPlus for this article","condition":"Article condition","conditionNote":"Article condition note","merchantShippingGroupName":"Merchant Shipping Group","searchTerms":"Search Terms","platinumKeywords":"Platinum Keywords","fbaActive":"Activate FBA for this article"},"placeholder":{"merchantShippingGroupName":"Standardvorlage Amazon","searchTerms":"Keyword 1, Keyword 2, Keyword 3, …","platinumKeywords":"Keyword 1, Keyword 2, Keyword 3, …"},"conditions":{"ebay":{"new":"New","asNew":"As new","used":"Used","veryGood":"Very good","good":"Good","acceptable":"Acceptable"},"amazon":{"new":"New","usedLikeNew":"Used - like new","usedVeryGood":"Used - Very good","usedGood":"Used - good","usedAcceptable":"Used - acceptable","collectibleLikeNew":"Collectible - like new","collectibleVeryGood":"Collectible - Very good","collectibleGood":"Collectible - good","collectibleAcceptable":"Collectible - acceptable","refurbished":"Refurbished","club":"Club"}},"notification":{"title":{"success":"Success","error":"Error"},"message":{"success":"Product information was successfully saved.","error":"An error occurred while saving the product information."}}}},"salesChannel-connectionAssistant":{"connectionNotAvailable":"Before you can connect to the marketplace and activate this sales channel. You have to choose an contract.","connectionAvailable":"To activate this sales channel you have to connect to the marketplace.","startConnectionAssistant":"Start connection - assistant","chooseContract":"Choose your contract"},"salesChannelSettings":{"invalidContractInfo":"To use the extended settings, you need to upgrade your contract.","card":{"title":{"extendedSettings":"Extended Settings"}},"amazon":{"helpText":{"merchantShippingGroup":"<a class=\\"bf-help-link\\" href=\\"https://sellercentral.amazon.de/gp/help/201834130\\" target=\\"_blank\\">>> Go to help page</a>","fba":"<a class=\\"bf-help-link\\" href=\\"https://sellercentral.amazon.de/gp/help/help.html?itemID=53921\\" target=\\"_blank\\">>> Go to help page</a>"},"label":{"merchantShippingGroupName":"Merchant Shipping Group","enableFba":"Enable FBA service","vatCalculationService":"VAT-Calculation-Service"},"placeholder":{"merchantShippingGroupName":"Standardvorlage Amazon"}},"ebay":{"helpText":{"ebayPlus":"Here you can activate or deactivate eBay Plus service"},"label":{"enableEbayPlus":"Enable eBay Plus","payPalEmail":"PayPal email address","ebayLogo":"Seller-Logo URL","sellerZip":"Postcode","sellerCity":"Item location","feedbackComment":"Automatic buyer rating"}}},"categories":{"tab-title":"Categories","title":"Categories mapping","shopware-tree-title":"Shopware Categories","amazon-marketplace-title":"Amazon Categories","ebay-marketplace-title":"ebay Categories","marketplace-default-title":"Marketplace categories","descriptionAmazon":"<p>Here you are able to connect your shopware categories with Amazon Categories. On the left side are the Shopware Categories. With choosing one category all articles here will be selected.</p><p>On the right side you can select one or more categories from Amazon. When you click save both trees will be connected. All Products will be shown in the new categories.</p>","descriptionEbay":"<p>Here you are able to connect your shopware categories with ebay Categories. On the left side are the Shopware Categories. With choosing one category all articles here will be selected.</p><p>On the right side you can select one or more categories from ebay. When you click save both trees will be connected. All Products will be shown in the new categories.</p>"},"propertyMapping":{"tab-title":"Mapping","card-title":{"transferredProperties":"Attribute mapping","variationProperties":"Product variant properties"},"variationProperties":{"swLabel":"Variation properties","amazonLabel":"Amazon properties","emptyState":"No variation properties given yet"},"columns":{"name":"Name","externalName":"External name"},"labels":{"search":"Search"},"placeholder":{"search":"Search name …"},"buttons":{"save":"Save","cancel":"Cancel"},"infoText":"Here you are able to map all properties and custom fields to the attributes from your saleschannel. You will only see the proberties you already had transfered before.","notifications":{"title":{"success":"Success","warning":"Warning","error":"Error"},"message":{"success":"Property / Custom field mapping has been saved successfully.","error":"An error occurred while saving the property / custom field mapping.","warningTooManySelected":"Only one external name can be selected.","warningNoSelection":"No external name has been selected.","noPropertiesFound":"No external names could be found.","noVariationPropertiesFound":"No properties were found which are used to create a product variation"}},"information":{"message":"You can only map properties/custom fields when products with assignments are transferred."},"product-variant-properties":{"edit":"To edit, please double-click the column"}},"unitMapping":{"tab-title":"Scale unit mapping","card-title":"Scale units","column":{"name":"Name","externalName":"External name","type":"Type"},"edit":{"externalName":"External name"},"infoText":"Here you are able to map all unit of measures to the units from your saleschannel. You will only see the Units of measures from the products you have put to Sales Channels before.","notifications":{"title":{"success":"Success","warning":"Warning","error":"Error"},"message":{"success":"Scale unit mapping has been saved successfully.","error":"An error occurred while saving the scale unit mapping.","warningTooManySelected":"Only one scale unit can be selected.","warningNoSelection":"No scale unit has been selected."}},"noScaleUnit":"No scale unit yet"},"amazonFbaPrime":{"tab-title":"FBA / Prime Einstellungen"},"tabs":{"general":"General"},"amazon":{"baseTitle":"Amazon Connection Assistant - Account - ","step1":"Step 1","step2":"Step 2","step3":"Step 3","authoriseDescription":"For selling your products with Amazon it is necessary to connect your Shopware Shop with Amazon. Please Enter your Amazon SellerCenral Login Data to start the connection.","manualConnect":"Manual connect","retailerIdPlaceHolderInput":"Enter Amazon Retailer ID...","retailerId":"Amazon Retailer ID","mwsTokenPlaceHolderInput":"Enter Amazon MWS Token...","mwsToken":"Amazon MWS Token","validateMarketplaceDescription":"In this step Shopware will check if you are allowed to sell Articles in the selected Saleschannel.","validateMarketplaceTooltip":"Check if your account is allowed to sell on Amazon Marketplace for your country.","validateMarketplaceBtnTitle":"Marketplace permission check","validateMarketplaceTitle":"Amazon Connection Assistant - Account - Marketplace check","productCheckDescription":"In this step we will check if there are already existing products at your selected Saleschannel.","productCheckTooltip":"Check if your account already has listed products on Amazon.","productCheckTitle":"Amazon Connection Assistant - Account - Product check","productCheckCongrats":"Congrats, you are now ready to sell products on Amazon.","productCheckDeleteExistingBtn":"Please click here for getting into your Amazon Account","productCheckDeleteExistingTitle":"Deleting Amazon Articles","productCheckDeleteExistingContent":"If you don\'t want to choose the import service please delete first all Articles all Amazon Articles. After deleting you are able to check again for excisting Articles.","productCheckBookTransfer":"Asking for  Import service","productCheckBookTransferTitle":"Import service Articles to Shopware 6","productCheckBookTransferContent":"If you want to transfer articles to your Shopware Shop it is possible. This service is not for free. For asking for the conditions please use this option. ","productCheckAccountHasAlreadyProducts":"The connected Amazon account already has products.","productCheckBtn":"Existing Product check","howTo":{"mwsNotificationHowToTitle":"Where do I find my Amazon MWS-Token? Please click here!","mwsNotificationHowToUser":"User: brickfox","mwsNotificationHowToPassword":"Password: 6133-1265-3313","mwsNotificationHowToLastPart":"Afterward you will get your MWS-Auth-Token for the Login.","mwsNotificationHowToFirstPart":"For connecting your shop with Amazon please login into your {link}","mwsNotificationHowToSecondPart":"Please choose step 2 and add the following Settings:"},"amazonConfirmFinishModalTitle":"Info","amazonConfirmFinishModalMessageFirstPart":"You successfully connected and activated your selected sales channel.","amazonConfirmFinishModalMessageSecondPart":"After finishing the connection assistant, changing of existing connection data to selected sales channel or changing the selected sales channel is not easy. Are you sure that you wish to finish the connection assistant?"},"ebay":{"baseTitle":"ebay Connection Assistant - Account - ","step1":"Step 1","step2":"Step 2","step3":"Step 3","step4":"Step 4","authoriseDescription":"For selling your products with ebay it is necessary to connect your Shopware Shop with ebay.","authoriseOAuthDescription":"For selling your products with ebay it is necessary to create an OAuth-Token.","validateMarketplaceDescription":"In this step Shopware will check if you are allowed to sell Articles in the selected Saleschannel.","validateMarketplaceTooltip":"Check if your account is allowed to sell on Amazon Marketplace for your country.","validateMarketplaceTitle":"ebay Connection Assistant - Account - Marketplace check","validateMarketplaceBtnTitle":"Marketplace permission check","productCheckDescription":"In this step we will check if there are already existing products at your selected Saleschannel.","productCheckTooltip":"Check if your account already has listed products on ebay.","productCheckTitle":"ebay Connection Assistant - Account - Product check","productCheckCongrats":"Congrats, you are now ready to sell products on ebay.","productCheckDeleteExistingBtn":"Please click here for getting into your ebay Account","productCheckDeleteExistingTitle":"Deleting ebay Articles","productCheckDeleteExistingContent":"If you don\'t want to choose the import service please delete first all Articles all ebay Articles. After deleting you are able to check again for existing Articles.","productCheckBookTransfer":"Asking for  Import service","productCheckBookTransferTitle":"Import service Articles to Shopware 6","productCheckBookTransferContent":"If you want to transfer articles to your Shopware Shop it is possible. This service is not for free. For asking for the conditions please use this option. ","productCheckAccountHasAlreadyProducts":"The connected ebay account already has products.","productCheckBtn":"Existing Product check","amazonConfirmFinishModalTitle":"Info","amazonConfirmFinishModalMessageFirstPart":"You successfully connected and activated your selected sales channel.","amazonConfirmFinishModalMessageSecondPart":"After finishing the connection assistant, changing of existing connection data to selected sales channel or changing the selected sales channel is not easy. Are you sure that you wish to finish the connection assistant?","infoAuthorization":"If the connection is successful you will be go to the next step automatically.","paymentMethodError":"No Ebay-Payment method selected."},"button":{"connect":"Connect","cancel":"Cancel","next":"Next","finish":"Finish"},"error":{"notification":{"title":"Error"},"global":{"internalError":"Something went wrong. Please try again later.","bfBpUnauthorized":"The connection between your shop and the marketplace could not be established. Please contact Shopware Support","systemSettingUp":"The marketplace system is setting up right now this can take some minutes. "},"amazon":{"title":"Amazon Connection Assistant","credentialValidationError":"Amazon Retailer ID and Amazon Mws Token are required fields.","accountConnectionError":"Your connection to Amazon failed. Please check your credentials.","validateMarketplaceError":"You are not able to sell on the given Amazon marketplace.","confirmFinishSavingDataError":"Something went wrong while saving the data. Please try again."},"ebay":{"title":"ebay Connection Assistant","accountConnectionError":"Something went wrong while trying to connect to your ebay account.","validateMarketplaceError":"You are not able to sell on the given ebay marketplace.","cantGetConnectionLink":"Something went wrong, please try again later.","productCheck":"An error occurred. Please try again later.","ebayInvalidLogoUrl":"Your logo url could not be saved. Your logo must be available at https://","ebayInvalidPayPalMailAddress":"Your PayPal email address could not be save. Invalid email address."}},"success":{"amazon":{"title":"Amazon Connection Assistant","accountConnectionSuccess":"You are successfully connected to amazon.","validateMarketplaceSuccess":"Validation of the Amazon marketplace was successful. You are eligible to sell on Amazon.","successfulFinishedConnectionAssistant":"You`re data was successfully stored. Now you`re abel to sell on Amazon."},"ebay":{"title":"ebay Connection Assistant","accountConnectionSuccess":"You are successfully connected to ebay.","validateMarketplaceSuccess":"Validation of the ebay marketplace was successful. You are eligible to sell on ebay."}},"bf-plugin-configuration":{"integration":{"repair-description":"In case the integration user for the SwagMarkets business platform is no longer present in Shopware or the communication keeps failing otherwise, this process can repair the connection to use the marketplaces","repair-integration-button":"Repair integration","dialogue":{"successTitle":"Repair successful","successMessage":"The integration user for SwagMarkets was sccessfully repaired!","errorTitle":"Repair failed","errorMessage":"An error occurred while trying to repair the integration user!"}}}}')},x0cU:function(e,t){e.exports='{% block bf_ebay_connection_assistant_start %}\n    <div class="bf-ebay-connection-assistant-start">\n        <router-view v-on="$listeners"></router-view>\n    </div>\n{% endblock %}\n'},xHIF:function(e,t,n){},"xQ/B":function(e,t,n){},xjbj:function(e,t,n){var a=n("ZWeD");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("41dd9db4",a,!0,{})},"y0X/":function(e,t){e.exports='{% block swag_markets_grid_column_tree_field_content %}\n    <sw-inherit-wrapper v-model="marketplaceCategories.categories"\n                        :inheritedValue="null"\n                        isAssociation\n                        >\n        <template #content="{ currentValue, isInherited }">\n            <bf-sales-channel-category-mapping-tree-field\n                :marketplaceCategories="marketplaceCategories"\n                :categoriesCollection="currentValue ? currentValue : []"\n                class="sw-product-detail__select-category"\n                :disabled="isInherited"\n                :key="isInherited"\n                :placeholder="$tc(\'sw-product.categoryForm.placeholderCategory\')"\n                @selection-add="marketplaceCategorySelectionAdd"\n                @selection-remove="marketplaceCategoriesSelectionRemove">\n            </bf-sales-channel-category-mapping-tree-field>\n        </template>\n    </sw-inherit-wrapper>\n{% endblock %}\n'},y8xS:function(e,t){e.exports='{% block bf_amazon_connection_assistant_account_marketplace %}\n    <div class="bf-amazon-connection-assistant-account-marketplace__content">\n\n        {% block bf_amazon_connection_assistant_account_marketplace_content_information %}\n            <sw-card-section class="bf-amazon-connection-assistant-modal__content-description">\n                {{ $tc(\'amazon.validateMarketplaceDescription\') }}\n            </sw-card-section>\n            <div class="bf-amazon-connection-assistant-account__content-information">\n                {% block bf_amazon_connection_assistant_account_marketplace_content_information_error %}\n                    <sw-alert variant="error" v-if="canRetailerSell !== null && !canRetailerSell">\n                        {{$tc(\'error.amazon.validateMarketplaceError\')}}\n                    </sw-alert>\n                {% endblock %}\n                {% block bf_amazon_connection_assistant_account_marketplace_content_information_success %}\n                    <sw-alert variant="success" v-if="canRetailerSell !== null && canRetailerSell">\n                        {{$tc(\'success.amazon.validateMarketplaceSuccess\')}}\n                    </sw-alert>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        <sw-container align="end" justify="end"\n                      class="bf-amazon-connection-assistant-account-marketplace__content-button-check">\n            {% block bf_amazon_connection_assistant_accout_marketplace_check_button %}\n                <sw-button\n                    v-if="canRetailerSell === null || !canRetailerSell"\n                    size="small"\n                    variant="primary"\n                    :block="true"\n                    @click="marketplaceCheck"\n                    v-tooltip="tooltip">\n                    {{$tc(\'amazon.validateMarketplaceBtnTitle\')}}\n                </sw-button>\n            {% endblock %}\n        </sw-container>\n    </div>\n{% endblock %}\n'},yHv0:function(e,t,n){},yR1B:function(e,t){e.exports='{% block bf_sales_channel_detail_base_contract %}\n    <div class="bf-plugin-configuration">\n        <sw-container\n            columns="1fr"\n            class="bf-sales-channel-detail-base__connection-assistant-warning">\n\n            <sw-alert\n                variant="warning"\n                appearance="notification"\n                :closable="false">\n\n                <p>\n                    {{ $tc(\'bf-plugin-configuration.integration.repair-description\') }}\n                </p>\n\n                <sw-button\n                    class="repair-button"\n                    :disabled="false"\n                    variant="ghost"\n                    size="small"\n                    :square="false"\n                    :block="false"\n                    :isLoading="isLoading"\n                    @click="repairIntegrationUser"\n                >\n                    {{ $tc(\'bf-plugin-configuration.integration.repair-integration-button\') }}\n                </sw-button>\n            </sw-alert>\n        </sw-container>\n    </div>\n{% endblock %}\n'},zkt2:function(e,t,n){}},[["5w23","runtime","vendors-node"]]]);